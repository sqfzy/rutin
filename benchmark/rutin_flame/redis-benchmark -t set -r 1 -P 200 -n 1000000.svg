<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1606" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1589.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1589.00"> </text><svg id="frames" x="10" width="1180" total_samples="13320"><g><title>tokio::runtime::coop::budget (2 samples, 0.02%)</title><rect x="0.0075%" y="1157" width="0.0150%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.2575%" y="1167.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.02%)</title><rect x="0.0075%" y="1141" width="0.0150%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2575%" y="1151.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (2 samples, 0.02%)</title><rect x="0.0075%" y="1125" width="0.0150%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.2575%" y="1135.50"></text></g><g><title>rutin::main::_{{closure}} (2 samples, 0.02%)</title><rect x="0.0075%" y="1109" width="0.0150%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.2575%" y="1119.50"></text></g><g><title>rutin::server::run::_{{closure}} (2 samples, 0.02%)</title><rect x="0.0075%" y="1093" width="0.0150%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.2575%" y="1103.50"></text></g><g><title>rutin (4 samples, 0.03%)</title><rect x="0.0000%" y="1541" width="0.0300%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1551.50"></text></g><g><title>_start (4 samples, 0.03%)</title><rect x="0.0000%" y="1525" width="0.0300%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1535.50"></text></g><g><title>__libc_start_main (4 samples, 0.03%)</title><rect x="0.0000%" y="1509" width="0.0300%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1519.50"></text></g><g><title>[libc.so.6] (4 samples, 0.03%)</title><rect x="0.0000%" y="1493" width="0.0300%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1503.50"></text></g><g><title>main (4 samples, 0.03%)</title><rect x="0.0000%" y="1477" width="0.0300%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1487.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.03%)</title><rect x="0.0000%" y="1461" width="0.0300%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.03%)</title><rect x="0.0000%" y="1445" width="0.0300%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1455.50"></text></g><g><title>std::panicking::try (4 samples, 0.03%)</title><rect x="0.0000%" y="1429" width="0.0300%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="0.0000%" y="1413" width="0.0300%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1423.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (4 samples, 0.03%)</title><rect x="0.0000%" y="1397" width="0.0300%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.03%)</title><rect x="0.0000%" y="1381" width="0.0300%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1391.50"></text></g><g><title>std::panicking::try (4 samples, 0.03%)</title><rect x="0.0000%" y="1365" width="0.0300%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.03%)</title><rect x="0.0000%" y="1349" width="0.0300%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.03%)</title><rect x="0.0000%" y="1333" width="0.0300%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1343.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 0.03%)</title><rect x="0.0000%" y="1317" width="0.0300%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1327.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.03%)</title><rect x="0.0000%" y="1301" width="0.0300%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.03%)</title><rect x="0.0000%" y="1285" width="0.0300%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1295.50"></text></g><g><title>rutin::main (4 samples, 0.03%)</title><rect x="0.0000%" y="1269" width="0.0300%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="4"/><text x="0.2500%" y="1279.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (3 samples, 0.02%)</title><rect x="0.0075%" y="1253" width="0.0225%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="3"/><text x="0.2575%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (3 samples, 0.02%)</title><rect x="0.0075%" y="1237" width="0.0225%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="3"/><text x="0.2575%" y="1247.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (3 samples, 0.02%)</title><rect x="0.0075%" y="1221" width="0.0225%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="3"/><text x="0.2575%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (3 samples, 0.02%)</title><rect x="0.0075%" y="1205" width="0.0225%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="3"/><text x="0.2575%" y="1215.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (3 samples, 0.02%)</title><rect x="0.0075%" y="1189" width="0.0225%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="3"/><text x="0.2575%" y="1199.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (3 samples, 0.02%)</title><rect x="0.0075%" y="1173" width="0.0225%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="3"/><text x="0.2575%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.05%)</title><rect x="0.0300%" y="885" width="0.0526%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="7"/><text x="0.2800%" y="895.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (7 samples, 0.05%)</title><rect x="0.0300%" y="869" width="0.0526%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="7"/><text x="0.2800%" y="879.50"></text></g><g><title>rutin::connection::Connection::read_u8::_{{closure}} (7 samples, 0.05%)</title><rect x="0.0300%" y="853" width="0.0526%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="7"/><text x="0.2800%" y="863.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (7 samples, 0.05%)</title><rect x="0.0300%" y="837" width="0.0526%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="7"/><text x="0.2800%" y="847.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (7 samples, 0.05%)</title><rect x="0.0300%" y="821" width="0.0526%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="7"/><text x="0.2800%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (7 samples, 0.05%)</title><rect x="0.0300%" y="805" width="0.0526%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="7"/><text x="0.2800%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (2 samples, 0.02%)</title><rect x="0.0901%" y="837" width="0.0150%" height="15" fill="rgb(233,36,39)" fg:x="12" fg:w="2"/><text x="0.3401%" y="847.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.11%)</title><rect x="0.0300%" y="997" width="0.1051%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="14"/><text x="0.2800%" y="1007.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (14 samples, 0.11%)</title><rect x="0.0300%" y="981" width="0.1051%" height="15" fill="rgb(245,192,40)" fg:x="4" fg:w="14"/><text x="0.2800%" y="991.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (14 samples, 0.11%)</title><rect x="0.0300%" y="965" width="0.1051%" height="15" fill="rgb(238,167,29)" fg:x="4" fg:w="14"/><text x="0.2800%" y="975.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (14 samples, 0.11%)</title><rect x="0.0300%" y="949" width="0.1051%" height="15" fill="rgb(232,182,51)" fg:x="4" fg:w="14"/><text x="0.2800%" y="959.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (14 samples, 0.11%)</title><rect x="0.0300%" y="933" width="0.1051%" height="15" fill="rgb(231,60,39)" fg:x="4" fg:w="14"/><text x="0.2800%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.11%)</title><rect x="0.0300%" y="917" width="0.1051%" height="15" fill="rgb(208,69,12)" fg:x="4" fg:w="14"/><text x="0.2800%" y="927.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (14 samples, 0.11%)</title><rect x="0.0300%" y="901" width="0.1051%" height="15" fill="rgb(235,93,37)" fg:x="4" fg:w="14"/><text x="0.2800%" y="911.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (7 samples, 0.05%)</title><rect x="0.0826%" y="885" width="0.0526%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="7"/><text x="0.3326%" y="895.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}} (7 samples, 0.05%)</title><rect x="0.0826%" y="869" width="0.0526%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="7"/><text x="0.3326%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (6 samples, 0.05%)</title><rect x="0.0901%" y="853" width="0.0450%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="6"/><text x="0.3401%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (4 samples, 0.03%)</title><rect x="0.1051%" y="837" width="0.0300%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="4"/><text x="0.3551%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (4 samples, 0.03%)</title><rect x="0.1051%" y="821" width="0.0300%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="4"/><text x="0.3551%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.03%)</title><rect x="0.1051%" y="805" width="0.0300%" height="15" fill="rgb(239,60,40)" fg:x="14" fg:w="4"/><text x="0.3551%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.03%)</title><rect x="0.1051%" y="789" width="0.0300%" height="15" fill="rgb(206,27,48)" fg:x="14" fg:w="4"/><text x="0.3551%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.03%)</title><rect x="0.1051%" y="773" width="0.0300%" height="15" fill="rgb(225,35,8)" fg:x="14" fg:w="4"/><text x="0.3551%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.03%)</title><rect x="0.1051%" y="757" width="0.0300%" height="15" fill="rgb(250,213,24)" fg:x="14" fg:w="4"/><text x="0.3551%" y="767.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.03%)</title><rect x="0.1051%" y="741" width="0.0300%" height="15" fill="rgb(247,123,22)" fg:x="14" fg:w="4"/><text x="0.3551%" y="751.50"></text></g><g><title>malloc (4 samples, 0.03%)</title><rect x="0.1051%" y="725" width="0.0300%" height="15" fill="rgb(231,138,38)" fg:x="14" fg:w="4"/><text x="0.3551%" y="735.50"></text></g><g><title>atoi::ascii_to_digit (4 samples, 0.03%)</title><rect x="0.2027%" y="789" width="0.0300%" height="15" fill="rgb(231,145,46)" fg:x="27" fg:w="4"/><text x="0.4527%" y="799.50"></text></g><g><title>core::cmp::min (2 samples, 0.02%)</title><rect x="0.2327%" y="789" width="0.0150%" height="15" fill="rgb(251,118,11)" fg:x="31" fg:w="2"/><text x="0.4827%" y="799.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.02%)</title><rect x="0.2327%" y="773" width="0.0150%" height="15" fill="rgb(217,147,25)" fg:x="31" fg:w="2"/><text x="0.4827%" y="783.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.02%)</title><rect x="0.2327%" y="757" width="0.0150%" height="15" fill="rgb(247,81,37)" fg:x="31" fg:w="2"/><text x="0.4827%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.03%)</title><rect x="0.2477%" y="789" width="0.0300%" height="15" fill="rgb(209,12,38)" fg:x="33" fg:w="4"/><text x="0.4977%" y="799.50"></text></g><g><title>&lt;I as atoi::FromRadix10SignedChecked&gt;::from_radix_10_signed_checked::_{{closure}} (4 samples, 0.03%)</title><rect x="0.2477%" y="773" width="0.0300%" height="15" fill="rgb(227,1,9)" fg:x="33" fg:w="4"/><text x="0.4977%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.16%)</title><rect x="0.1351%" y="853" width="0.1577%" height="15" fill="rgb(248,47,43)" fg:x="18" fg:w="21"/><text x="0.3851%" y="863.50"></text></g><g><title>&lt;rutin::db::object::str::Str as core::convert::From&lt;bytes::bytes::Bytes&gt;&gt;::from (21 samples, 0.16%)</title><rect x="0.1351%" y="837" width="0.1577%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="21"/><text x="0.3851%" y="847.50"></text></g><g><title>atoi::atoi (21 samples, 0.16%)</title><rect x="0.1351%" y="821" width="0.1577%" height="15" fill="rgb(210,229,1)" fg:x="18" fg:w="21"/><text x="0.3851%" y="831.50"></text></g><g><title>&lt;I as atoi::FromRadix10SignedChecked&gt;::from_radix_10_signed_checked (19 samples, 0.14%)</title><rect x="0.1502%" y="805" width="0.1426%" height="15" fill="rgb(222,148,37)" fg:x="20" fg:w="19"/><text x="0.4002%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (2 samples, 0.02%)</title><rect x="0.2778%" y="789" width="0.0150%" height="15" fill="rgb(234,67,33)" fg:x="37" fg:w="2"/><text x="0.5278%" y="799.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (2 samples, 0.02%)</title><rect x="0.2928%" y="853" width="0.0150%" height="15" fill="rgb(247,98,35)" fg:x="39" fg:w="2"/><text x="0.5428%" y="863.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2 samples, 0.02%)</title><rect x="0.2928%" y="837" width="0.0150%" height="15" fill="rgb(247,138,52)" fg:x="39" fg:w="2"/><text x="0.5428%" y="847.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (2 samples, 0.02%)</title><rect x="0.2928%" y="821" width="0.0150%" height="15" fill="rgb(213,79,30)" fg:x="39" fg:w="2"/><text x="0.5428%" y="831.50"></text></g><g><title>bytes::bytes_mut::release_shared (2 samples, 0.02%)</title><rect x="0.2928%" y="805" width="0.0150%" height="15" fill="rgb(246,177,23)" fg:x="39" fg:w="2"/><text x="0.5428%" y="815.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="0.2928%" y="789" width="0.0150%" height="15" fill="rgb(230,62,27)" fg:x="39" fg:w="2"/><text x="0.5428%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (2 samples, 0.02%)</title><rect x="0.2928%" y="773" width="0.0150%" height="15" fill="rgb(216,154,8)" fg:x="39" fg:w="2"/><text x="0.5428%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (2 samples, 0.02%)</title><rect x="0.2928%" y="757" width="0.0150%" height="15" fill="rgb(244,35,45)" fg:x="39" fg:w="2"/><text x="0.5428%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="0.2928%" y="741" width="0.0150%" height="15" fill="rgb(251,115,12)" fg:x="39" fg:w="2"/><text x="0.5428%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="0.2928%" y="725" width="0.0150%" height="15" fill="rgb(240,54,50)" fg:x="39" fg:w="2"/><text x="0.5428%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.2928%" y="709" width="0.0150%" height="15" fill="rgb(233,84,52)" fg:x="39" fg:w="2"/><text x="0.5428%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="0.2928%" y="693" width="0.0150%" height="15" fill="rgb(207,117,47)" fg:x="39" fg:w="2"/><text x="0.5428%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="0.2928%" y="677" width="0.0150%" height="15" fill="rgb(249,43,39)" fg:x="39" fg:w="2"/><text x="0.5428%" y="687.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="0.2928%" y="661" width="0.0150%" height="15" fill="rgb(209,38,44)" fg:x="39" fg:w="2"/><text x="0.5428%" y="671.50"></text></g><g><title>&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::_execute::_{{closure}} (46 samples, 0.35%)</title><rect x="0.1351%" y="869" width="0.3453%" height="15" fill="rgb(236,212,23)" fg:x="18" fg:w="46"/><text x="0.3851%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::db::object::ObjectInner&gt; (22 samples, 0.17%)</title><rect x="0.3153%" y="853" width="0.1652%" height="15" fill="rgb(242,79,21)" fg:x="42" fg:w="22"/><text x="0.5653%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::db::object::ObjValue&gt; (21 samples, 0.16%)</title><rect x="0.3228%" y="837" width="0.1577%" height="15" fill="rgb(211,96,35)" fg:x="43" fg:w="21"/><text x="0.5728%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::db::object::str::Str&gt; (10 samples, 0.08%)</title><rect x="0.4054%" y="821" width="0.0751%" height="15" fill="rgb(253,215,40)" fg:x="54" fg:w="10"/><text x="0.6554%" y="831.50"></text></g><g><title>rutin::cmd::CmdExecutor::apply::_{{closure}} (56 samples, 0.42%)</title><rect x="0.1351%" y="901" width="0.4204%" height="15" fill="rgb(211,81,21)" fg:x="18" fg:w="56"/><text x="0.3851%" y="911.50"></text></g><g><title>rutin::cmd::CmdExecutor::execute::_{{closure}} (56 samples, 0.42%)</title><rect x="0.1351%" y="885" width="0.4204%" height="15" fill="rgb(208,190,38)" fg:x="18" fg:w="56"/><text x="0.3851%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::frame::Frame&gt; (10 samples, 0.08%)</title><rect x="0.4805%" y="869" width="0.0751%" height="15" fill="rgb(235,213,38)" fg:x="64" fg:w="10"/><text x="0.7305%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (7 samples, 0.05%)</title><rect x="0.5030%" y="853" width="0.0526%" height="15" fill="rgb(237,122,38)" fg:x="67" fg:w="7"/><text x="0.7530%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="0.6757%" y="885" width="0.0225%" height="15" fill="rgb(244,218,35)" fg:x="90" fg:w="3"/><text x="0.9257%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (23 samples, 0.17%)</title><rect x="0.6982%" y="885" width="0.1727%" height="15" fill="rgb(240,68,47)" fg:x="93" fg:w="23"/><text x="0.9482%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.17%)</title><rect x="0.6982%" y="869" width="0.1727%" height="15" fill="rgb(210,16,53)" fg:x="93" fg:w="23"/><text x="0.9482%" y="879.50"></text></g><g><title>[libc.so.6] (22 samples, 0.17%)</title><rect x="0.7057%" y="853" width="0.1652%" height="15" fill="rgb(235,124,12)" fg:x="94" fg:w="22"/><text x="0.9557%" y="863.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="0.8709%" y="869" width="0.0150%" height="15" fill="rgb(224,169,11)" fg:x="116" fg:w="2"/><text x="1.1209%" y="879.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::make_ascii_uppercase (11 samples, 0.08%)</title><rect x="0.8709%" y="885" width="0.0826%" height="15" fill="rgb(250,166,2)" fg:x="116" fg:w="11"/><text x="1.1209%" y="895.50"></text></g><g><title>core::num::&lt;impl u8&gt;::make_ascii_uppercase (9 samples, 0.07%)</title><rect x="0.8859%" y="869" width="0.0676%" height="15" fill="rgb(242,216,29)" fg:x="118" fg:w="9"/><text x="1.1359%" y="879.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_uppercase (7 samples, 0.05%)</title><rect x="0.9009%" y="853" width="0.0526%" height="15" fill="rgb(230,116,27)" fg:x="120" fg:w="7"/><text x="1.1509%" y="863.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_lowercase (7 samples, 0.05%)</title><rect x="0.9009%" y="837" width="0.0526%" height="15" fill="rgb(228,99,48)" fg:x="120" fg:w="7"/><text x="1.1509%" y="847.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (167 samples, 1.25%)</title><rect x="0.0300%" y="1525" width="1.2538%" height="15" fill="rgb(253,11,6)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1535.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1509" width="1.2538%" height="15" fill="rgb(247,143,39)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1519.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (167 samples, 1.25%)</title><rect x="0.0300%" y="1493" width="1.2538%" height="15" fill="rgb(236,97,10)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1503.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (167 samples, 1.25%)</title><rect x="0.0300%" y="1477" width="1.2538%" height="15" fill="rgb(233,208,19)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1461" width="1.2538%" height="15" fill="rgb(216,164,2)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1471.50"></text></g><g><title>tokio::runtime::context::set_scheduler (167 samples, 1.25%)</title><rect x="0.0300%" y="1445" width="1.2538%" height="15" fill="rgb(220,129,5)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1455.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (167 samples, 1.25%)</title><rect x="0.0300%" y="1429" width="1.2538%" height="15" fill="rgb(242,17,10)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1439.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (167 samples, 1.25%)</title><rect x="0.0300%" y="1413" width="1.2538%" height="15" fill="rgb(242,107,0)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1423.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1397" width="1.2538%" height="15" fill="rgb(251,28,31)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1407.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (167 samples, 1.25%)</title><rect x="0.0300%" y="1381" width="1.2538%" height="15" fill="rgb(233,223,10)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1365" width="1.2538%" height="15" fill="rgb(215,21,27)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (167 samples, 1.25%)</title><rect x="0.0300%" y="1349" width="1.2538%" height="15" fill="rgb(232,23,21)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (167 samples, 1.25%)</title><rect x="0.0300%" y="1333" width="1.2538%" height="15" fill="rgb(244,5,23)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1343.50"></text></g><g><title>tokio::runtime::coop::budget (167 samples, 1.25%)</title><rect x="0.0300%" y="1317" width="1.2538%" height="15" fill="rgb(226,81,46)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1327.50"></text></g><g><title>tokio::runtime::coop::with_budget (167 samples, 1.25%)</title><rect x="0.0300%" y="1301" width="1.2538%" height="15" fill="rgb(247,70,30)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1285" width="1.2538%" height="15" fill="rgb(212,68,19)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1295.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (167 samples, 1.25%)</title><rect x="0.0300%" y="1269" width="1.2538%" height="15" fill="rgb(240,187,13)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1279.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (167 samples, 1.25%)</title><rect x="0.0300%" y="1253" width="1.2538%" height="15" fill="rgb(223,113,26)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (167 samples, 1.25%)</title><rect x="0.0300%" y="1237" width="1.2538%" height="15" fill="rgb(206,192,2)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (167 samples, 1.25%)</title><rect x="0.0300%" y="1221" width="1.2538%" height="15" fill="rgb(241,108,4)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (167 samples, 1.25%)</title><rect x="0.0300%" y="1205" width="1.2538%" height="15" fill="rgb(247,173,49)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (167 samples, 1.25%)</title><rect x="0.0300%" y="1189" width="1.2538%" height="15" fill="rgb(224,114,35)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1199.50"></text></g><g><title>std::panicking::try (167 samples, 1.25%)</title><rect x="0.0300%" y="1173" width="1.2538%" height="15" fill="rgb(245,159,27)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (167 samples, 1.25%)</title><rect x="0.0300%" y="1157" width="1.2538%" height="15" fill="rgb(245,172,44)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (167 samples, 1.25%)</title><rect x="0.0300%" y="1141" width="1.2538%" height="15" fill="rgb(236,23,11)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1125" width="1.2538%" height="15" fill="rgb(205,117,38)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (167 samples, 1.25%)</title><rect x="0.0300%" y="1109" width="1.2538%" height="15" fill="rgb(237,72,25)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (167 samples, 1.25%)</title><rect x="0.0300%" y="1093" width="1.2538%" height="15" fill="rgb(244,70,9)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1077" width="1.2538%" height="15" fill="rgb(217,125,39)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1087.50"></text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1061" width="1.2538%" height="15" fill="rgb(235,36,10)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1071.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1045" width="1.2538%" height="15" fill="rgb(251,123,47)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1055.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1029" width="1.2538%" height="15" fill="rgb(221,13,13)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1039.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (167 samples, 1.25%)</title><rect x="0.0300%" y="1013" width="1.2538%" height="15" fill="rgb(238,131,9)" fg:x="4" fg:w="167"/><text x="0.2800%" y="1023.50"></text></g><g><title>rutin::cmd::dispatch::_{{closure}} (153 samples, 1.15%)</title><rect x="0.1351%" y="997" width="1.1486%" height="15" fill="rgb(211,50,8)" fg:x="18" fg:w="153"/><text x="0.3851%" y="1007.50"></text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}} (153 samples, 1.15%)</title><rect x="0.1351%" y="981" width="1.1486%" height="15" fill="rgb(245,182,24)" fg:x="18" fg:w="153"/><text x="0.3851%" y="991.50"></text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}} (153 samples, 1.15%)</title><rect x="0.1351%" y="965" width="1.1486%" height="15" fill="rgb(242,14,37)" fg:x="18" fg:w="153"/><text x="0.3851%" y="975.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}} (153 samples, 1.15%)</title><rect x="0.1351%" y="949" width="1.1486%" height="15" fill="rgb(246,228,12)" fg:x="18" fg:w="153"/><text x="0.3851%" y="959.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}} (153 samples, 1.15%)</title><rect x="0.1351%" y="933" width="1.1486%" height="15" fill="rgb(213,55,15)" fg:x="18" fg:w="153"/><text x="0.3851%" y="943.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}} (153 samples, 1.15%)</title><rect x="0.1351%" y="917" width="1.1486%" height="15" fill="rgb(209,9,3)" fg:x="18" fg:w="153"/><text x="0.3851%" y="927.50"></text></g><g><title>rutin::cmd::get_cmd_name_uppercase (97 samples, 0.73%)</title><rect x="0.5556%" y="901" width="0.7282%" height="15" fill="rgb(230,59,30)" fg:x="74" fg:w="97"/><text x="0.8056%" y="911.50"></text></g><g><title>rutin::frame::Frame::on_bulk (44 samples, 0.33%)</title><rect x="0.9535%" y="885" width="0.3303%" height="15" fill="rgb(209,121,21)" fg:x="127" fg:w="44"/><text x="1.2035%" y="895.50"></text></g><g><title>rutin::frame::Bulk::as_bytes (3 samples, 0.02%)</title><rect x="1.2613%" y="869" width="0.0225%" height="15" fill="rgb(220,109,13)" fg:x="168" fg:w="3"/><text x="1.5113%" y="879.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (6 samples, 0.05%)</title><rect x="1.2988%" y="853" width="0.0450%" height="15" fill="rgb(232,18,1)" fg:x="173" fg:w="6"/><text x="1.5488%" y="863.50"></text></g><g><title>pow (6 samples, 0.05%)</title><rect x="1.2988%" y="837" width="0.0450%" height="15" fill="rgb(215,41,42)" fg:x="173" fg:w="6"/><text x="1.5488%" y="847.50"></text></g><g><title>[libm.so.6] (3 samples, 0.02%)</title><rect x="1.3213%" y="821" width="0.0225%" height="15" fill="rgb(224,123,36)" fg:x="176" fg:w="3"/><text x="1.5713%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (9 samples, 0.07%)</title><rect x="1.2913%" y="869" width="0.0676%" height="15" fill="rgb(240,125,3)" fg:x="172" fg:w="9"/><text x="1.5413%" y="879.50"></text></g><g><title>tokio::runtime::metrics::batch::MetricsBatch::end_processing_scheduled_tasks (2 samples, 0.02%)</title><rect x="1.3438%" y="853" width="0.0150%" height="15" fill="rgb(205,98,50)" fg:x="179" fg:w="2"/><text x="1.5938%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (3 samples, 0.02%)</title><rect x="1.3664%" y="805" width="0.0225%" height="15" fill="rgb(205,185,37)" fg:x="182" fg:w="3"/><text x="1.6164%" y="815.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (3 samples, 0.02%)</title><rect x="1.3664%" y="789" width="0.0225%" height="15" fill="rgb(238,207,15)" fg:x="182" fg:w="3"/><text x="1.6164%" y="799.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (3 samples, 0.02%)</title><rect x="1.3664%" y="773" width="0.0225%" height="15" fill="rgb(213,199,42)" fg:x="182" fg:w="3"/><text x="1.6164%" y="783.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.02%)</title><rect x="1.3664%" y="757" width="0.0225%" height="15" fill="rgb(235,201,11)" fg:x="182" fg:w="3"/><text x="1.6164%" y="767.50"></text></g><g><title>parking_lot_core::parking_lot::park (3 samples, 0.02%)</title><rect x="1.3664%" y="741" width="0.0225%" height="15" fill="rgb(207,46,11)" fg:x="182" fg:w="3"/><text x="1.6164%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (3 samples, 0.02%)</title><rect x="1.3664%" y="725" width="0.0225%" height="15" fill="rgb(241,35,35)" fg:x="182" fg:w="3"/><text x="1.6164%" y="735.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (3 samples, 0.02%)</title><rect x="1.3664%" y="709" width="0.0225%" height="15" fill="rgb(243,32,47)" fg:x="182" fg:w="3"/><text x="1.6164%" y="719.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (3 samples, 0.02%)</title><rect x="1.3664%" y="693" width="0.0225%" height="15" fill="rgb(247,202,23)" fg:x="182" fg:w="3"/><text x="1.6164%" y="703.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (3 samples, 0.02%)</title><rect x="1.3664%" y="677" width="0.0225%" height="15" fill="rgb(219,102,11)" fg:x="182" fg:w="3"/><text x="1.6164%" y="687.50"></text></g><g><title>syscall (3 samples, 0.02%)</title><rect x="1.3664%" y="661" width="0.0225%" height="15" fill="rgb(243,110,44)" fg:x="182" fg:w="3"/><text x="1.6164%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1.3739%" y="645" width="0.0150%" height="15" fill="rgb(222,74,54)" fg:x="183" fg:w="2"/><text x="1.6239%" y="655.50"></text></g><g><title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1.3739%" y="629" width="0.0150%" height="15" fill="rgb(216,99,12)" fg:x="183" fg:w="2"/><text x="1.6239%" y="639.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="1.3739%" y="613" width="0.0150%" height="15" fill="rgb(226,22,26)" fg:x="183" fg:w="2"/><text x="1.6239%" y="623.50"></text></g><g><title>do_futex (2 samples, 0.02%)</title><rect x="1.3739%" y="597" width="0.0150%" height="15" fill="rgb(217,163,10)" fg:x="183" fg:w="2"/><text x="1.6239%" y="607.50"></text></g><g><title>futex_wait (2 samples, 0.02%)</title><rect x="1.3739%" y="581" width="0.0150%" height="15" fill="rgb(213,25,53)" fg:x="183" fg:w="2"/><text x="1.6239%" y="591.50"></text></g><g><title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="1.3739%" y="565" width="0.0150%" height="15" fill="rgb(252,105,26)" fg:x="183" fg:w="2"/><text x="1.6239%" y="575.50"></text></g><g><title>schedule (2 samples, 0.02%)</title><rect x="1.3739%" y="549" width="0.0150%" height="15" fill="rgb(220,39,43)" fg:x="183" fg:w="2"/><text x="1.6239%" y="559.50"></text></g><g><title>__schedule (2 samples, 0.02%)</title><rect x="1.3739%" y="533" width="0.0150%" height="15" fill="rgb(229,68,48)" fg:x="183" fg:w="2"/><text x="1.6239%" y="543.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.02%)</title><rect x="1.3739%" y="517" width="0.0150%" height="15" fill="rgb(252,8,32)" fg:x="183" fg:w="2"/><text x="1.6239%" y="527.50"></text></g><g><title>__put_user_nocheck_4 (2 samples, 0.02%)</title><rect x="1.4189%" y="661" width="0.0150%" height="15" fill="rgb(223,20,43)" fg:x="189" fg:w="2"/><text x="1.6689%" y="671.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (5 samples, 0.04%)</title><rect x="1.4114%" y="757" width="0.0375%" height="15" fill="rgb(229,81,49)" fg:x="188" fg:w="5"/><text x="1.6614%" y="767.50"></text></g><g><title>epoll_wait (5 samples, 0.04%)</title><rect x="1.4114%" y="741" width="0.0375%" height="15" fill="rgb(236,28,36)" fg:x="188" fg:w="5"/><text x="1.6614%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.04%)</title><rect x="1.4114%" y="725" width="0.0375%" height="15" fill="rgb(249,185,26)" fg:x="188" fg:w="5"/><text x="1.6614%" y="735.50"></text></g><g><title>do_syscall_64 (5 samples, 0.04%)</title><rect x="1.4114%" y="709" width="0.0375%" height="15" fill="rgb(249,174,33)" fg:x="188" fg:w="5"/><text x="1.6614%" y="719.50"></text></g><g><title>__x64_sys_epoll_wait (5 samples, 0.04%)</title><rect x="1.4114%" y="693" width="0.0375%" height="15" fill="rgb(233,201,37)" fg:x="188" fg:w="5"/><text x="1.6614%" y="703.50"></text></g><g><title>do_epoll_wait (5 samples, 0.04%)</title><rect x="1.4114%" y="677" width="0.0375%" height="15" fill="rgb(221,78,26)" fg:x="188" fg:w="5"/><text x="1.6614%" y="687.50"></text></g><g><title>ep_item_poll.isra.0 (2 samples, 0.02%)</title><rect x="1.4339%" y="661" width="0.0150%" height="15" fill="rgb(250,127,30)" fg:x="191" fg:w="2"/><text x="1.6839%" y="671.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (2 samples, 0.02%)</title><rect x="1.4640%" y="677" width="0.0150%" height="15" fill="rgb(230,49,44)" fg:x="195" fg:w="2"/><text x="1.7140%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (2 samples, 0.02%)</title><rect x="1.4640%" y="661" width="0.0150%" height="15" fill="rgb(229,67,23)" fg:x="195" fg:w="2"/><text x="1.7140%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (2 samples, 0.02%)</title><rect x="1.4640%" y="645" width="0.0150%" height="15" fill="rgb(249,83,47)" fg:x="195" fg:w="2"/><text x="1.7140%" y="655.50"></text></g><g><title>tokio::runtime::context::with_scheduler (2 samples, 0.02%)</title><rect x="1.4640%" y="629" width="0.0150%" height="15" fill="rgb(215,43,3)" fg:x="195" fg:w="2"/><text x="1.7140%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="1.4640%" y="613" width="0.0150%" height="15" fill="rgb(238,154,13)" fg:x="195" fg:w="2"/><text x="1.7140%" y="623.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (2 samples, 0.02%)</title><rect x="1.4640%" y="597" width="0.0150%" height="15" fill="rgb(219,56,2)" fg:x="195" fg:w="2"/><text x="1.7140%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (16 samples, 0.12%)</title><rect x="1.3664%" y="869" width="0.1201%" height="15" fill="rgb(233,0,4)" fg:x="182" fg:w="16"/><text x="1.6164%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (16 samples, 0.12%)</title><rect x="1.3664%" y="853" width="0.1201%" height="15" fill="rgb(235,30,7)" fg:x="182" fg:w="16"/><text x="1.6164%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (16 samples, 0.12%)</title><rect x="1.3664%" y="837" width="0.1201%" height="15" fill="rgb(250,79,13)" fg:x="182" fg:w="16"/><text x="1.6164%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (16 samples, 0.12%)</title><rect x="1.3664%" y="821" width="0.1201%" height="15" fill="rgb(211,146,34)" fg:x="182" fg:w="16"/><text x="1.6164%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (13 samples, 0.10%)</title><rect x="1.3889%" y="805" width="0.0976%" height="15" fill="rgb(228,22,38)" fg:x="185" fg:w="13"/><text x="1.6389%" y="815.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (11 samples, 0.08%)</title><rect x="1.4039%" y="789" width="0.0826%" height="15" fill="rgb(235,168,5)" fg:x="187" fg:w="11"/><text x="1.6539%" y="799.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (10 samples, 0.08%)</title><rect x="1.4114%" y="773" width="0.0751%" height="15" fill="rgb(221,155,16)" fg:x="188" fg:w="10"/><text x="1.6614%" y="783.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (5 samples, 0.04%)</title><rect x="1.4489%" y="757" width="0.0375%" height="15" fill="rgb(215,215,53)" fg:x="193" fg:w="5"/><text x="1.6989%" y="767.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (4 samples, 0.03%)</title><rect x="1.4565%" y="741" width="0.0300%" height="15" fill="rgb(223,4,10)" fg:x="194" fg:w="4"/><text x="1.7065%" y="751.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.03%)</title><rect x="1.4565%" y="725" width="0.0300%" height="15" fill="rgb(234,103,6)" fg:x="194" fg:w="4"/><text x="1.7065%" y="735.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.02%)</title><rect x="1.4640%" y="709" width="0.0225%" height="15" fill="rgb(227,97,0)" fg:x="195" fg:w="3"/><text x="1.7140%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (3 samples, 0.02%)</title><rect x="1.4640%" y="693" width="0.0225%" height="15" fill="rgb(234,150,53)" fg:x="195" fg:w="3"/><text x="1.7140%" y="703.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.02%)</title><rect x="1.4940%" y="805" width="0.0225%" height="15" fill="rgb(228,201,54)" fg:x="199" fg:w="3"/><text x="1.7440%" y="815.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.02%)</title><rect x="1.4940%" y="789" width="0.0225%" height="15" fill="rgb(222,22,37)" fg:x="199" fg:w="3"/><text x="1.7440%" y="799.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.02%)</title><rect x="1.4940%" y="773" width="0.0225%" height="15" fill="rgb(237,53,32)" fg:x="199" fg:w="3"/><text x="1.7440%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.02%)</title><rect x="1.5165%" y="805" width="0.0150%" height="15" fill="rgb(233,25,53)" fg:x="202" fg:w="2"/><text x="1.7665%" y="815.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="1.5165%" y="789" width="0.0150%" height="15" fill="rgb(210,40,34)" fg:x="202" fg:w="2"/><text x="1.7665%" y="799.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="1.5165%" y="773" width="0.0150%" height="15" fill="rgb(241,220,44)" fg:x="202" fg:w="2"/><text x="1.7665%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (4 samples, 0.03%)</title><rect x="1.5390%" y="805" width="0.0300%" height="15" fill="rgb(235,28,35)" fg:x="205" fg:w="4"/><text x="1.7890%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.24%)</title><rect x="1.7417%" y="533" width="0.2402%" height="15" fill="rgb(210,56,17)" fg:x="232" fg:w="32"/><text x="1.9917%" y="543.50"></text></g><g><title>core::ptr::read (29 samples, 0.22%)</title><rect x="1.7643%" y="517" width="0.2177%" height="15" fill="rgb(224,130,29)" fg:x="235" fg:w="29"/><text x="2.0143%" y="527.50"></text></g><g><title>&lt;async_shutdown::shutdown_signal::ShutdownSignal&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="2.0120%" y="501" width="0.0300%" height="15" fill="rgb(235,212,8)" fg:x="268" fg:w="4"/><text x="2.2620%" y="511.50"></text></g><g><title>async_shutdown::waker_list::WakerList::register (2 samples, 0.02%)</title><rect x="2.0270%" y="485" width="0.0150%" height="15" fill="rgb(223,33,50)" fg:x="270" fg:w="2"/><text x="2.2770%" y="495.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="2.2598%" y="453" width="0.0225%" height="15" fill="rgb(219,149,13)" fg:x="301" fg:w="3"/><text x="2.5098%" y="463.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (3 samples, 0.02%)</title><rect x="2.2598%" y="437" width="0.0225%" height="15" fill="rgb(250,156,29)" fg:x="301" fg:w="3"/><text x="2.5098%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.14%)</title><rect x="2.2823%" y="453" width="0.1351%" height="15" fill="rgb(216,193,19)" fg:x="304" fg:w="18"/><text x="2.5323%" y="463.50"></text></g><g><title>core::ptr::write (10 samples, 0.08%)</title><rect x="2.3423%" y="437" width="0.0751%" height="15" fill="rgb(216,135,14)" fg:x="312" fg:w="10"/><text x="2.5923%" y="447.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="2.4024%" y="421" width="0.0150%" height="15" fill="rgb(241,47,5)" fg:x="320" fg:w="2"/><text x="2.6524%" y="431.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="2.4024%" y="405" width="0.0150%" height="15" fill="rgb(233,42,35)" fg:x="320" fg:w="2"/><text x="2.6524%" y="415.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="2.4024%" y="389" width="0.0150%" height="15" fill="rgb(231,13,6)" fg:x="320" fg:w="2"/><text x="2.6524%" y="399.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="2.4024%" y="373" width="0.0150%" height="15" fill="rgb(207,181,40)" fg:x="320" fg:w="2"/><text x="2.6524%" y="383.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="2.4024%" y="357" width="0.0150%" height="15" fill="rgb(254,173,49)" fg:x="320" fg:w="2"/><text x="2.6524%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="2.4174%" y="453" width="0.0150%" height="15" fill="rgb(221,1,38)" fg:x="322" fg:w="2"/><text x="2.6674%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="2.4174%" y="437" width="0.0150%" height="15" fill="rgb(206,124,46)" fg:x="322" fg:w="2"/><text x="2.6674%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="2.4174%" y="421" width="0.0150%" height="15" fill="rgb(249,21,11)" fg:x="322" fg:w="2"/><text x="2.6674%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="2.4174%" y="405" width="0.0150%" height="15" fill="rgb(222,201,40)" fg:x="322" fg:w="2"/><text x="2.6674%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="2.4174%" y="389" width="0.0150%" height="15" fill="rgb(235,61,29)" fg:x="322" fg:w="2"/><text x="2.6674%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="2.4174%" y="373" width="0.0150%" height="15" fill="rgb(219,207,3)" fg:x="322" fg:w="2"/><text x="2.6674%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="2.4174%" y="357" width="0.0150%" height="15" fill="rgb(222,56,46)" fg:x="322" fg:w="2"/><text x="2.6674%" y="367.50"></text></g><g><title>bytes::bytes_mut::BytesMut::is_empty (2 samples, 0.02%)</title><rect x="2.4324%" y="453" width="0.0150%" height="15" fill="rgb(239,76,54)" fg:x="324" fg:w="2"/><text x="2.6824%" y="463.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="2.4625%" y="373" width="0.0150%" height="15" fill="rgb(231,124,27)" fg:x="328" fg:w="2"/><text x="2.7125%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.08%)</title><rect x="2.4474%" y="421" width="0.0826%" height="15" fill="rgb(249,195,6)" fg:x="326" fg:w="11"/><text x="2.6974%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.08%)</title><rect x="2.4550%" y="405" width="0.0751%" height="15" fill="rgb(237,174,47)" fg:x="327" fg:w="10"/><text x="2.7050%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.08%)</title><rect x="2.4550%" y="389" width="0.0751%" height="15" fill="rgb(206,201,31)" fg:x="327" fg:w="10"/><text x="2.7050%" y="399.50"></text></g><g><title>cfree (7 samples, 0.05%)</title><rect x="2.4775%" y="373" width="0.0526%" height="15" fill="rgb(231,57,52)" fg:x="330" fg:w="7"/><text x="2.7275%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.10%)</title><rect x="2.4474%" y="453" width="0.0976%" height="15" fill="rgb(248,177,22)" fg:x="326" fg:w="13"/><text x="2.6974%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt; (13 samples, 0.10%)</title><rect x="2.4474%" y="437" width="0.0976%" height="15" fill="rgb(215,211,37)" fg:x="326" fg:w="13"/><text x="2.6974%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::connection::Connection::read_frames::{{closure}}::{{closure}}::{{closure}}::_read_frame::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="2.5300%" y="421" width="0.0150%" height="15" fill="rgb(241,128,51)" fg:x="337" fg:w="2"/><text x="2.7800%" y="431.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (78 samples, 0.59%)</title><rect x="2.0495%" y="501" width="0.5856%" height="15" fill="rgb(227,165,31)" fg:x="273" fg:w="78"/><text x="2.2995%" y="511.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (75 samples, 0.56%)</title><rect x="2.0721%" y="485" width="0.5631%" height="15" fill="rgb(228,167,24)" fg:x="276" fg:w="75"/><text x="2.3221%" y="495.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (72 samples, 0.54%)</title><rect x="2.0946%" y="469" width="0.5405%" height="15" fill="rgb(228,143,12)" fg:x="279" fg:w="72"/><text x="2.3446%" y="479.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame (12 samples, 0.09%)</title><rect x="2.5450%" y="453" width="0.0901%" height="15" fill="rgb(249,149,8)" fg:x="339" fg:w="12"/><text x="2.7950%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (9 samples, 0.07%)</title><rect x="2.5676%" y="437" width="0.0676%" height="15" fill="rgb(243,35,44)" fg:x="342" fg:w="9"/><text x="2.8176%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.07%)</title><rect x="2.5676%" y="421" width="0.0676%" height="15" fill="rgb(246,89,9)" fg:x="342" fg:w="9"/><text x="2.8176%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="2.6126%" y="405" width="0.0225%" height="15" fill="rgb(233,213,13)" fg:x="348" fg:w="3"/><text x="2.8626%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="2.6201%" y="389" width="0.0150%" height="15" fill="rgb(233,141,41)" fg:x="349" fg:w="2"/><text x="2.8701%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="2.6201%" y="373" width="0.0150%" height="15" fill="rgb(239,167,4)" fg:x="349" fg:w="2"/><text x="2.8701%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="2.6201%" y="357" width="0.0150%" height="15" fill="rgb(209,217,16)" fg:x="349" fg:w="2"/><text x="2.8701%" y="367.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="2.6201%" y="341" width="0.0150%" height="15" fill="rgb(219,88,35)" fg:x="349" fg:w="2"/><text x="2.8701%" y="351.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (88 samples, 0.66%)</title><rect x="1.9820%" y="533" width="0.6607%" height="15" fill="rgb(220,193,23)" fg:x="264" fg:w="88"/><text x="2.2320%" y="543.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (88 samples, 0.66%)</title><rect x="1.9820%" y="517" width="0.6607%" height="15" fill="rgb(230,90,52)" fg:x="264" fg:w="88"/><text x="2.2320%" y="527.50"></text></g><g><title>async_shutdown::ShutdownManager&lt;T&gt;::wait_shutdown_triggered (2 samples, 0.02%)</title><rect x="2.6426%" y="533" width="0.0150%" height="15" fill="rgb(252,106,19)" fg:x="352" fg:w="2"/><text x="2.8926%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="2.6426%" y="517" width="0.0150%" height="15" fill="rgb(206,74,20)" fg:x="352" fg:w="2"/><text x="2.8926%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="2.6426%" y="501" width="0.0150%" height="15" fill="rgb(230,138,44)" fg:x="352" fg:w="2"/><text x="2.8926%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="2.6426%" y="485" width="0.0150%" height="15" fill="rgb(235,182,43)" fg:x="352" fg:w="2"/><text x="2.8926%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(async_shutdown::shutdown_signal::ShutdownSignal&lt;()&gt;,rutin::connection::Connection::read_frames::{{closure}},rutin::server::BgTaskChannel::recv_from_bg_task::{{closure}})&gt; (5 samples, 0.04%)</title><rect x="2.6577%" y="533" width="0.0375%" height="15" fill="rgb(242,16,51)" fg:x="354" fg:w="5"/><text x="2.9077%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_shutdown::shutdown_signal::ShutdownSignal&lt;()&gt;&gt; (4 samples, 0.03%)</title><rect x="2.6652%" y="517" width="0.0300%" height="15" fill="rgb(248,9,4)" fg:x="355" fg:w="4"/><text x="2.9152%" y="527.50"></text></g><g><title>&lt;async_shutdown::shutdown_signal::ShutdownSignal&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="2.6652%" y="501" width="0.0300%" height="15" fill="rgb(210,31,22)" fg:x="355" fg:w="4"/><text x="2.9152%" y="511.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="2.7778%" y="453" width="0.0150%" height="15" fill="rgb(239,54,39)" fg:x="370" fg:w="2"/><text x="3.0278%" y="463.50"></text></g><g><title>[libc.so.6] (9 samples, 0.07%)</title><rect x="2.7327%" y="469" width="0.0676%" height="15" fill="rgb(230,99,41)" fg:x="364" fg:w="9"/><text x="2.9827%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;rutin::frame::Frame&gt;&gt; (15 samples, 0.11%)</title><rect x="2.6952%" y="533" width="0.1126%" height="15" fill="rgb(253,106,12)" fg:x="359" fg:w="15"/><text x="2.9452%" y="543.50"></text></g><g><title>cfree (15 samples, 0.11%)</title><rect x="2.6952%" y="517" width="0.1126%" height="15" fill="rgb(213,46,41)" fg:x="359" fg:w="15"/><text x="2.9452%" y="527.50"></text></g><g><title>[libc.so.6] (14 samples, 0.11%)</title><rect x="2.7027%" y="501" width="0.1051%" height="15" fill="rgb(215,133,35)" fg:x="360" fg:w="14"/><text x="2.9527%" y="511.50"></text></g><g><title>[libc.so.6] (12 samples, 0.09%)</title><rect x="2.7177%" y="485" width="0.0901%" height="15" fill="rgb(213,28,5)" fg:x="362" fg:w="12"/><text x="2.9677%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::retain (5 samples, 0.04%)</title><rect x="2.8228%" y="485" width="0.0375%" height="15" fill="rgb(215,77,49)" fg:x="376" fg:w="5"/><text x="3.0728%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::retain_mut (5 samples, 0.04%)</title><rect x="2.8228%" y="469" width="0.0375%" height="15" fill="rgb(248,100,22)" fg:x="376" fg:w="5"/><text x="3.0728%" y="479.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::retain::_{{closure}} (3 samples, 0.02%)</title><rect x="2.8378%" y="453" width="0.0225%" height="15" fill="rgb(208,67,9)" fg:x="378" fg:w="3"/><text x="3.0878%" y="463.50"></text></g><g><title>flume::async::SendFut&lt;T&gt;::reset_hook::_{{closure}} (3 samples, 0.02%)</title><rect x="2.8378%" y="437" width="0.0225%" height="15" fill="rgb(219,133,21)" fg:x="378" fg:w="3"/><text x="3.0878%" y="447.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::truncate (2 samples, 0.02%)</title><rect x="2.8604%" y="485" width="0.0150%" height="15" fill="rgb(246,46,29)" fg:x="381" fg:w="2"/><text x="3.1104%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;flume::Hook&lt;rutin::frame::Frame,dyn flume::signal::Signal&gt;&gt;]&gt; (2 samples, 0.02%)</title><rect x="2.8604%" y="469" width="0.0150%" height="15" fill="rgb(246,185,52)" fg:x="381" fg:w="2"/><text x="3.1104%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;rutin::frame::Frame,dyn flume::signal::Signal&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="2.8604%" y="453" width="0.0150%" height="15" fill="rgb(252,136,11)" fg:x="381" fg:w="2"/><text x="3.1104%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="2.8604%" y="437" width="0.0150%" height="15" fill="rgb(219,138,53)" fg:x="381" fg:w="2"/><text x="3.1104%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="2.8754%" y="453" width="0.0150%" height="15" fill="rgb(211,51,23)" fg:x="383" fg:w="2"/><text x="3.1254%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (2 samples, 0.02%)</title><rect x="2.8754%" y="437" width="0.0150%" height="15" fill="rgb(247,221,28)" fg:x="383" fg:w="2"/><text x="3.1254%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;rutin::frame::Frame,dyn flume::signal::Signal&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="2.8754%" y="485" width="0.0225%" height="15" fill="rgb(251,222,45)" fg:x="383" fg:w="3"/><text x="3.1254%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="2.8754%" y="469" width="0.0225%" height="15" fill="rgb(217,162,53)" fg:x="383" fg:w="3"/><text x="3.1254%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;rutin::frame::Frame&gt;&gt; (14 samples, 0.11%)</title><rect x="2.8078%" y="533" width="0.1051%" height="15" fill="rgb(229,93,14)" fg:x="374" fg:w="14"/><text x="3.0578%" y="543.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.10%)</title><rect x="2.8153%" y="517" width="0.0976%" height="15" fill="rgb(209,67,49)" fg:x="375" fg:w="13"/><text x="3.0653%" y="527.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (13 samples, 0.10%)</title><rect x="2.8153%" y="501" width="0.0976%" height="15" fill="rgb(213,87,29)" fg:x="375" fg:w="13"/><text x="3.0653%" y="511.50"></text></g><g><title>flume::wait_lock (2 samples, 0.02%)</title><rect x="2.8979%" y="485" width="0.0150%" height="15" fill="rgb(205,151,52)" fg:x="386" fg:w="2"/><text x="3.1479%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="2.8979%" y="469" width="0.0150%" height="15" fill="rgb(253,215,39)" fg:x="386" fg:w="2"/><text x="3.1479%" y="479.50"></text></g><g><title>std::sys::pal::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="2.8979%" y="453" width="0.0150%" height="15" fill="rgb(221,220,41)" fg:x="386" fg:w="2"/><text x="3.1479%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::cmd::dispatch::{{closure}}&gt; (3 samples, 0.02%)</title><rect x="2.9129%" y="533" width="0.0225%" height="15" fill="rgb(218,133,21)" fg:x="388" fg:w="3"/><text x="3.1629%" y="543.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="3.6787%" y="309" width="0.0150%" height="15" fill="rgb(221,193,43)" fg:x="490" fg:w="2"/><text x="3.9287%" y="319.50"></text></g><g><title>[libc.so.6] (75 samples, 0.56%)</title><rect x="3.1381%" y="517" width="0.5631%" height="15" fill="rgb(240,128,52)" fg:x="418" fg:w="75"/><text x="3.3881%" y="527.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="3.6787%" y="501" width="0.0225%" height="15" fill="rgb(253,114,12)" fg:x="490" fg:w="3"/><text x="3.9287%" y="511.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="3.6787%" y="485" width="0.0225%" height="15" fill="rgb(215,223,47)" fg:x="490" fg:w="3"/><text x="3.9287%" y="495.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="3.6787%" y="469" width="0.0225%" height="15" fill="rgb(248,225,23)" fg:x="490" fg:w="3"/><text x="3.9287%" y="479.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="3.6787%" y="453" width="0.0225%" height="15" fill="rgb(250,108,0)" fg:x="490" fg:w="3"/><text x="3.9287%" y="463.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="3.6787%" y="437" width="0.0225%" height="15" fill="rgb(228,208,7)" fg:x="490" fg:w="3"/><text x="3.9287%" y="447.50"></text></g><g><title>__napi_poll (3 samples, 0.02%)</title><rect x="3.6787%" y="421" width="0.0225%" height="15" fill="rgb(244,45,10)" fg:x="490" fg:w="3"/><text x="3.9287%" y="431.50"></text></g><g><title>netvsc_poll (3 samples, 0.02%)</title><rect x="3.6787%" y="405" width="0.0225%" height="15" fill="rgb(207,125,25)" fg:x="490" fg:w="3"/><text x="3.9287%" y="415.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="3.6787%" y="389" width="0.0225%" height="15" fill="rgb(210,195,18)" fg:x="490" fg:w="3"/><text x="3.9287%" y="399.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="3.6787%" y="373" width="0.0225%" height="15" fill="rgb(249,80,12)" fg:x="490" fg:w="3"/><text x="3.9287%" y="383.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="3.6787%" y="357" width="0.0225%" height="15" fill="rgb(221,65,9)" fg:x="490" fg:w="3"/><text x="3.9287%" y="367.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="3.6787%" y="341" width="0.0225%" height="15" fill="rgb(235,49,36)" fg:x="490" fg:w="3"/><text x="3.9287%" y="351.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="3.6787%" y="325" width="0.0225%" height="15" fill="rgb(225,32,20)" fg:x="490" fg:w="3"/><text x="3.9287%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::cmd::dispatch::{{closure}}::{{closure}}&gt; (3 samples, 0.02%)</title><rect x="3.7012%" y="517" width="0.0225%" height="15" fill="rgb(215,141,46)" fg:x="493" fg:w="3"/><text x="3.9512%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (3 samples, 0.02%)</title><rect x="3.7237%" y="517" width="0.0225%" height="15" fill="rgb(250,160,47)" fg:x="496" fg:w="3"/><text x="3.9737%" y="527.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="3.7237%" y="501" width="0.0225%" height="15" fill="rgb(216,222,40)" fg:x="496" fg:w="3"/><text x="3.9737%" y="511.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="3.9940%" y="501" width="0.0150%" height="15" fill="rgb(234,217,39)" fg:x="532" fg:w="2"/><text x="4.2440%" y="511.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="3.9940%" y="485" width="0.0150%" height="15" fill="rgb(207,178,40)" fg:x="532" fg:w="2"/><text x="4.2440%" y="495.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="3.9940%" y="469" width="0.0150%" height="15" fill="rgb(221,136,13)" fg:x="532" fg:w="2"/><text x="4.2440%" y="479.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="3.9940%" y="453" width="0.0150%" height="15" fill="rgb(249,199,10)" fg:x="532" fg:w="2"/><text x="4.2440%" y="463.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="3.9940%" y="437" width="0.0150%" height="15" fill="rgb(249,222,13)" fg:x="532" fg:w="2"/><text x="4.2440%" y="447.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="3.9940%" y="421" width="0.0150%" height="15" fill="rgb(244,185,38)" fg:x="532" fg:w="2"/><text x="4.2440%" y="431.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="3.9940%" y="405" width="0.0150%" height="15" fill="rgb(236,202,9)" fg:x="532" fg:w="2"/><text x="4.2440%" y="415.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="3.9940%" y="389" width="0.0150%" height="15" fill="rgb(250,229,37)" fg:x="532" fg:w="2"/><text x="4.2440%" y="399.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="3.9940%" y="373" width="0.0150%" height="15" fill="rgb(206,174,23)" fg:x="532" fg:w="2"/><text x="4.2440%" y="383.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="3.9940%" y="357" width="0.0150%" height="15" fill="rgb(211,33,43)" fg:x="532" fg:w="2"/><text x="4.2440%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::cmd::dispatch::{{closure}}::{{closure}}::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="4.0090%" y="501" width="0.0150%" height="15" fill="rgb(245,58,50)" fg:x="534" fg:w="2"/><text x="4.2590%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::cmd::_dispatch::{{closure}}&gt; (10 samples, 0.08%)</title><rect x="4.1366%" y="485" width="0.0751%" height="15" fill="rgb(244,68,36)" fg:x="551" fg:w="10"/><text x="4.3866%" y="495.50"></text></g><g><title>[libc.so.6] (54 samples, 0.41%)</title><rect x="4.4520%" y="469" width="0.4054%" height="15" fill="rgb(232,229,15)" fg:x="593" fg:w="54"/><text x="4.7020%" y="479.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="4.8423%" y="453" width="0.0150%" height="15" fill="rgb(254,30,23)" fg:x="645" fg:w="2"/><text x="5.0923%" y="463.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="4.8423%" y="437" width="0.0150%" height="15" fill="rgb(235,160,14)" fg:x="645" fg:w="2"/><text x="5.0923%" y="447.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="4.8423%" y="421" width="0.0150%" height="15" fill="rgb(212,155,44)" fg:x="645" fg:w="2"/><text x="5.0923%" y="431.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="4.8423%" y="405" width="0.0150%" height="15" fill="rgb(226,2,50)" fg:x="645" fg:w="2"/><text x="5.0923%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 0.02%)</title><rect x="4.8574%" y="469" width="0.0150%" height="15" fill="rgb(234,177,6)" fg:x="647" fg:w="2"/><text x="5.1074%" y="479.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="4.8574%" y="453" width="0.0150%" height="15" fill="rgb(217,24,9)" fg:x="647" fg:w="2"/><text x="5.1074%" y="463.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="5.3979%" y="437" width="0.0225%" height="15" fill="rgb(220,13,46)" fg:x="719" fg:w="3"/><text x="5.6479%" y="447.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="5.3979%" y="421" width="0.0225%" height="15" fill="rgb(239,221,27)" fg:x="719" fg:w="3"/><text x="5.6479%" y="431.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="5.3979%" y="405" width="0.0225%" height="15" fill="rgb(222,198,25)" fg:x="719" fg:w="3"/><text x="5.6479%" y="415.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="5.3979%" y="389" width="0.0225%" height="15" fill="rgb(211,99,13)" fg:x="719" fg:w="3"/><text x="5.6479%" y="399.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="5.4054%" y="373" width="0.0150%" height="15" fill="rgb(232,111,31)" fg:x="720" fg:w="2"/><text x="5.6554%" y="383.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="5.4054%" y="357" width="0.0150%" height="15" fill="rgb(245,82,37)" fg:x="720" fg:w="2"/><text x="5.6554%" y="367.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="5.4054%" y="341" width="0.0150%" height="15" fill="rgb(227,149,46)" fg:x="720" fg:w="2"/><text x="5.6554%" y="351.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="5.4054%" y="325" width="0.0150%" height="15" fill="rgb(218,36,50)" fg:x="720" fg:w="2"/><text x="5.6554%" y="335.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="5.4054%" y="309" width="0.0150%" height="15" fill="rgb(226,80,48)" fg:x="720" fg:w="2"/><text x="5.6554%" y="319.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="5.4054%" y="293" width="0.0150%" height="15" fill="rgb(238,224,15)" fg:x="720" fg:w="2"/><text x="5.6554%" y="303.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="5.4054%" y="277" width="0.0150%" height="15" fill="rgb(241,136,10)" fg:x="720" fg:w="2"/><text x="5.6554%" y="287.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="5.4054%" y="261" width="0.0150%" height="15" fill="rgb(208,32,45)" fg:x="720" fg:w="2"/><text x="5.6554%" y="271.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="5.4054%" y="245" width="0.0150%" height="15" fill="rgb(207,135,9)" fg:x="720" fg:w="2"/><text x="5.6554%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::cmd::_dispatch::{{closure}}::{{closure}}::{{closure}}&gt; (35 samples, 0.26%)</title><rect x="5.1652%" y="453" width="0.2628%" height="15" fill="rgb(206,86,44)" fg:x="688" fg:w="35"/><text x="5.4152%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (524 samples, 3.93%)</title><rect x="1.6066%" y="741" width="3.9339%" height="15" fill="rgb(245,177,15)" fg:x="214" fg:w="524"/><text x="1.8566%" y="751.50">toki..</text></g><g><title>std::panic::catch_unwind (524 samples, 3.93%)</title><rect x="1.6066%" y="725" width="3.9339%" height="15" fill="rgb(206,64,50)" fg:x="214" fg:w="524"/><text x="1.8566%" y="735.50">std:..</text></g><g><title>std::panicking::try (524 samples, 3.93%)</title><rect x="1.6066%" y="709" width="3.9339%" height="15" fill="rgb(234,36,40)" fg:x="214" fg:w="524"/><text x="1.8566%" y="719.50">std:..</text></g><g><title>std::panicking::try::do_call (524 samples, 3.93%)</title><rect x="1.6066%" y="693" width="3.9339%" height="15" fill="rgb(213,64,8)" fg:x="214" fg:w="524"/><text x="1.8566%" y="703.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (524 samples, 3.93%)</title><rect x="1.6066%" y="677" width="3.9339%" height="15" fill="rgb(210,75,36)" fg:x="214" fg:w="524"/><text x="1.8566%" y="687.50">&lt;cor..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (524 samples, 3.93%)</title><rect x="1.6066%" y="661" width="3.9339%" height="15" fill="rgb(229,88,21)" fg:x="214" fg:w="524"/><text x="1.8566%" y="671.50">toki..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (524 samples, 3.93%)</title><rect x="1.6066%" y="645" width="3.9339%" height="15" fill="rgb(252,204,47)" fg:x="214" fg:w="524"/><text x="1.8566%" y="655.50">toki..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (524 samples, 3.93%)</title><rect x="1.6066%" y="629" width="3.9339%" height="15" fill="rgb(208,77,27)" fg:x="214" fg:w="524"/><text x="1.8566%" y="639.50">toki..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (524 samples, 3.93%)</title><rect x="1.6066%" y="613" width="3.9339%" height="15" fill="rgb(221,76,26)" fg:x="214" fg:w="524"/><text x="1.8566%" y="623.50">toki..</text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (524 samples, 3.93%)</title><rect x="1.6066%" y="597" width="3.9339%" height="15" fill="rgb(225,139,18)" fg:x="214" fg:w="524"/><text x="1.8566%" y="607.50">ruti..</text></g><g><title>rutin::server::Handler::run::_{{closure}} (520 samples, 3.90%)</title><rect x="1.6366%" y="581" width="3.9039%" height="15" fill="rgb(230,137,11)" fg:x="218" fg:w="520"/><text x="1.8866%" y="591.50">ruti..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (518 samples, 3.89%)</title><rect x="1.6517%" y="565" width="3.8889%" height="15" fill="rgb(212,28,1)" fg:x="220" fg:w="518"/><text x="1.9017%" y="575.50">ruti..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (518 samples, 3.89%)</title><rect x="1.6517%" y="549" width="3.8889%" height="15" fill="rgb(248,164,17)" fg:x="220" fg:w="518"/><text x="1.9017%" y="559.50">ruti..</text></g><g><title>rutin::cmd::dispatch::_{{closure}} (347 samples, 2.61%)</title><rect x="2.9354%" y="533" width="2.6051%" height="15" fill="rgb(222,171,42)" fg:x="391" fg:w="347"/><text x="3.1854%" y="543.50">ru..</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}} (239 samples, 1.79%)</title><rect x="3.7462%" y="517" width="1.7943%" height="15" fill="rgb(243,84,45)" fg:x="499" fg:w="239"/><text x="3.9962%" y="527.50">r..</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}} (202 samples, 1.52%)</title><rect x="4.0240%" y="501" width="1.5165%" height="15" fill="rgb(252,49,23)" fg:x="536" fg:w="202"/><text x="4.2740%" y="511.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}} (177 samples, 1.33%)</title><rect x="4.2117%" y="485" width="1.3288%" height="15" fill="rgb(215,19,7)" fg:x="561" fg:w="177"/><text x="4.4617%" y="495.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}} (89 samples, 0.67%)</title><rect x="4.8724%" y="469" width="0.6682%" height="15" fill="rgb(238,81,41)" fg:x="649" fg:w="89"/><text x="5.1224%" y="479.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}} (15 samples, 0.11%)</title><rect x="5.4279%" y="453" width="0.1126%" height="15" fill="rgb(210,199,37)" fg:x="723" fg:w="15"/><text x="5.6779%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (530 samples, 3.98%)</title><rect x="1.5841%" y="773" width="3.9790%" height="15" fill="rgb(244,192,49)" fg:x="211" fg:w="530"/><text x="1.8341%" y="783.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (529 samples, 3.97%)</title><rect x="1.5916%" y="757" width="3.9715%" height="15" fill="rgb(226,211,11)" fg:x="212" fg:w="529"/><text x="1.8416%" y="767.50">toki..</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (3 samples, 0.02%)</title><rect x="5.5405%" y="741" width="0.0225%" height="15" fill="rgb(236,162,54)" fg:x="738" fg:w="3"/><text x="5.7905%" y="751.50"></text></g><g><title>tokio::runtime::coop::budget (543 samples, 4.08%)</title><rect x="1.4940%" y="853" width="4.0766%" height="15" fill="rgb(220,229,9)" fg:x="199" fg:w="543"/><text x="1.7440%" y="863.50">toki..</text></g><g><title>tokio::runtime::coop::with_budget (543 samples, 4.08%)</title><rect x="1.4940%" y="837" width="4.0766%" height="15" fill="rgb(250,87,22)" fg:x="199" fg:w="543"/><text x="1.7440%" y="847.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (543 samples, 4.08%)</title><rect x="1.4940%" y="821" width="4.0766%" height="15" fill="rgb(239,43,17)" fg:x="199" fg:w="543"/><text x="1.7440%" y="831.50">toki..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (533 samples, 4.00%)</title><rect x="1.5691%" y="805" width="4.0015%" height="15" fill="rgb(231,177,25)" fg:x="209" fg:w="533"/><text x="1.8191%" y="815.50">toki..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (533 samples, 4.00%)</title><rect x="1.5691%" y="789" width="4.0015%" height="15" fill="rgb(219,179,1)" fg:x="209" fg:w="533"/><text x="1.8191%" y="799.50">toki..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.02%)</title><rect x="5.5706%" y="837" width="0.0225%" height="15" fill="rgb(238,219,53)" fg:x="742" fg:w="3"/><text x="5.8206%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3 samples, 0.02%)</title><rect x="5.5706%" y="821" width="0.0225%" height="15" fill="rgb(232,167,36)" fg:x="742" fg:w="3"/><text x="5.8206%" y="831.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3 samples, 0.02%)</title><rect x="5.5706%" y="805" width="0.0225%" height="15" fill="rgb(244,19,51)" fg:x="742" fg:w="3"/><text x="5.8206%" y="815.50"></text></g><g><title>syscall (3 samples, 0.02%)</title><rect x="5.5706%" y="789" width="0.0225%" height="15" fill="rgb(224,6,22)" fg:x="742" fg:w="3"/><text x="5.8206%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="5.5706%" y="773" width="0.0225%" height="15" fill="rgb(224,145,5)" fg:x="742" fg:w="3"/><text x="5.8206%" y="783.50"></text></g><g><title>do_syscall_64 (3 samples, 0.02%)</title><rect x="5.5706%" y="757" width="0.0225%" height="15" fill="rgb(234,130,49)" fg:x="742" fg:w="3"/><text x="5.8206%" y="767.50"></text></g><g><title>__x64_sys_futex (3 samples, 0.02%)</title><rect x="5.5706%" y="741" width="0.0225%" height="15" fill="rgb(254,6,2)" fg:x="742" fg:w="3"/><text x="5.8206%" y="751.50"></text></g><g><title>do_futex (3 samples, 0.02%)</title><rect x="5.5706%" y="725" width="0.0225%" height="15" fill="rgb(208,96,46)" fg:x="742" fg:w="3"/><text x="5.8206%" y="735.50"></text></g><g><title>futex_wake (3 samples, 0.02%)</title><rect x="5.5706%" y="709" width="0.0225%" height="15" fill="rgb(239,3,39)" fg:x="742" fg:w="3"/><text x="5.8206%" y="719.50"></text></g><g><title>wake_up_q (3 samples, 0.02%)</title><rect x="5.5706%" y="693" width="0.0225%" height="15" fill="rgb(233,210,1)" fg:x="742" fg:w="3"/><text x="5.8206%" y="703.50"></text></g><g><title>try_to_wake_up (3 samples, 0.02%)</title><rect x="5.5706%" y="677" width="0.0225%" height="15" fill="rgb(244,137,37)" fg:x="742" fg:w="3"/><text x="5.8206%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (548 samples, 4.11%)</title><rect x="1.4865%" y="869" width="4.1141%" height="15" fill="rgb(240,136,2)" fg:x="198" fg:w="548"/><text x="1.7365%" y="879.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (4 samples, 0.03%)</title><rect x="5.5706%" y="853" width="0.0300%" height="15" fill="rgb(239,18,37)" fg:x="742" fg:w="4"/><text x="5.8206%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (3 samples, 0.02%)</title><rect x="5.6006%" y="869" width="0.0225%" height="15" fill="rgb(218,185,22)" fg:x="746" fg:w="3"/><text x="5.8506%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.02%)</title><rect x="5.6081%" y="853" width="0.0150%" height="15" fill="rgb(225,218,4)" fg:x="747" fg:w="2"/><text x="5.8581%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::_{{closure}} (2 samples, 0.02%)</title><rect x="5.6081%" y="837" width="0.0150%" height="15" fill="rgb(230,182,32)" fg:x="747" fg:w="2"/><text x="5.8581%" y="847.50"></text></g><g><title>[libc.so.6] (579 samples, 4.35%)</title><rect x="1.2838%" y="1509" width="4.3468%" height="15" fill="rgb(242,56,43)" fg:x="171" fg:w="579"/><text x="1.5338%" y="1519.50">[libc..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (578 samples, 4.34%)</title><rect x="1.2913%" y="1493" width="4.3393%" height="15" fill="rgb(233,99,24)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1503.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (578 samples, 4.34%)</title><rect x="1.2913%" y="1477" width="4.3393%" height="15" fill="rgb(234,209,42)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1487.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (578 samples, 4.34%)</title><rect x="1.2913%" y="1461" width="4.3393%" height="15" fill="rgb(227,7,12)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1471.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (578 samples, 4.34%)</title><rect x="1.2913%" y="1445" width="4.3393%" height="15" fill="rgb(245,203,43)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1455.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="1429" width="4.3393%" height="15" fill="rgb(238,205,33)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1439.50">std::..</text></g><g><title>std::panic::catch_unwind (578 samples, 4.34%)</title><rect x="1.2913%" y="1413" width="4.3393%" height="15" fill="rgb(231,56,7)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1423.50">std::..</text></g><g><title>std::panicking::try (578 samples, 4.34%)</title><rect x="1.2913%" y="1397" width="4.3393%" height="15" fill="rgb(244,186,29)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1407.50">std::..</text></g><g><title>std::panicking::try::do_call (578 samples, 4.34%)</title><rect x="1.2913%" y="1381" width="4.3393%" height="15" fill="rgb(234,111,31)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1391.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (578 samples, 4.34%)</title><rect x="1.2913%" y="1365" width="4.3393%" height="15" fill="rgb(241,149,10)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1375.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="1349" width="4.3393%" height="15" fill="rgb(249,206,44)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1359.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (578 samples, 4.34%)</title><rect x="1.2913%" y="1333" width="4.3393%" height="15" fill="rgb(251,153,30)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1343.50">std::..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="1317" width="4.3393%" height="15" fill="rgb(239,152,38)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1327.50">tokio..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (578 samples, 4.34%)</title><rect x="1.2913%" y="1301" width="4.3393%" height="15" fill="rgb(249,139,47)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1311.50">tokio..</text></g><g><title>tokio::runtime::blocking::pool::Task::run (578 samples, 4.34%)</title><rect x="1.2913%" y="1285" width="4.3393%" height="15" fill="rgb(244,64,35)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1295.50">tokio..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (578 samples, 4.34%)</title><rect x="1.2913%" y="1269" width="4.3393%" height="15" fill="rgb(216,46,15)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1279.50">tokio..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (578 samples, 4.34%)</title><rect x="1.2913%" y="1253" width="4.3393%" height="15" fill="rgb(250,74,19)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1263.50">tokio..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (578 samples, 4.34%)</title><rect x="1.2913%" y="1237" width="4.3393%" height="15" fill="rgb(249,42,33)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1247.50">tokio..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (578 samples, 4.34%)</title><rect x="1.2913%" y="1221" width="4.3393%" height="15" fill="rgb(242,149,17)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1231.50">tokio..</text></g><g><title>tokio::runtime::task::harness::poll_future (578 samples, 4.34%)</title><rect x="1.2913%" y="1205" width="4.3393%" height="15" fill="rgb(244,29,21)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1215.50">tokio..</text></g><g><title>std::panic::catch_unwind (578 samples, 4.34%)</title><rect x="1.2913%" y="1189" width="4.3393%" height="15" fill="rgb(220,130,37)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1199.50">std::..</text></g><g><title>std::panicking::try (578 samples, 4.34%)</title><rect x="1.2913%" y="1173" width="4.3393%" height="15" fill="rgb(211,67,2)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1183.50">std::..</text></g><g><title>std::panicking::try::do_call (578 samples, 4.34%)</title><rect x="1.2913%" y="1157" width="4.3393%" height="15" fill="rgb(235,68,52)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1167.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (578 samples, 4.34%)</title><rect x="1.2913%" y="1141" width="4.3393%" height="15" fill="rgb(246,142,3)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1151.50">&lt;core..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="1125" width="4.3393%" height="15" fill="rgb(241,25,7)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1135.50">tokio..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (578 samples, 4.34%)</title><rect x="1.2913%" y="1109" width="4.3393%" height="15" fill="rgb(242,119,39)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1119.50">tokio..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (578 samples, 4.34%)</title><rect x="1.2913%" y="1093" width="4.3393%" height="15" fill="rgb(241,98,45)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1103.50">tokio..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="1077" width="4.3393%" height="15" fill="rgb(254,28,30)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1087.50">tokio..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (578 samples, 4.34%)</title><rect x="1.2913%" y="1061" width="4.3393%" height="15" fill="rgb(241,142,54)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1071.50">&lt;toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="1045" width="4.3393%" height="15" fill="rgb(222,85,15)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1055.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (578 samples, 4.34%)</title><rect x="1.2913%" y="1029" width="4.3393%" height="15" fill="rgb(210,85,47)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1039.50">tokio..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (578 samples, 4.34%)</title><rect x="1.2913%" y="1013" width="4.3393%" height="15" fill="rgb(224,206,25)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1023.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="997" width="4.3393%" height="15" fill="rgb(243,201,19)" fg:x="172" fg:w="578"/><text x="1.5413%" y="1007.50">tokio..</text></g><g><title>tokio::runtime::context::set_scheduler (578 samples, 4.34%)</title><rect x="1.2913%" y="981" width="4.3393%" height="15" fill="rgb(236,59,4)" fg:x="172" fg:w="578"/><text x="1.5413%" y="991.50">tokio..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (578 samples, 4.34%)</title><rect x="1.2913%" y="965" width="4.3393%" height="15" fill="rgb(254,179,45)" fg:x="172" fg:w="578"/><text x="1.5413%" y="975.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (578 samples, 4.34%)</title><rect x="1.2913%" y="949" width="4.3393%" height="15" fill="rgb(226,14,10)" fg:x="172" fg:w="578"/><text x="1.5413%" y="959.50">std::..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="933" width="4.3393%" height="15" fill="rgb(244,27,41)" fg:x="172" fg:w="578"/><text x="1.5413%" y="943.50">tokio..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (578 samples, 4.34%)</title><rect x="1.2913%" y="917" width="4.3393%" height="15" fill="rgb(235,35,32)" fg:x="172" fg:w="578"/><text x="1.5413%" y="927.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (578 samples, 4.34%)</title><rect x="1.2913%" y="901" width="4.3393%" height="15" fill="rgb(218,68,31)" fg:x="172" fg:w="578"/><text x="1.5413%" y="911.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (578 samples, 4.34%)</title><rect x="1.2913%" y="885" width="4.3393%" height="15" fill="rgb(207,120,37)" fg:x="172" fg:w="578"/><text x="1.5413%" y="895.50">tokio..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.02%)</title><rect x="5.6306%" y="453" width="0.0225%" height="15" fill="rgb(227,98,0)" fg:x="750" fg:w="3"/><text x="5.8806%" y="463.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.02%)</title><rect x="5.6306%" y="437" width="0.0225%" height="15" fill="rgb(207,7,3)" fg:x="750" fg:w="3"/><text x="5.8806%" y="447.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2 samples, 0.02%)</title><rect x="5.6381%" y="421" width="0.0150%" height="15" fill="rgb(206,98,19)" fg:x="751" fg:w="2"/><text x="5.8881%" y="431.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="5.6306%" y="469" width="0.0300%" height="15" fill="rgb(217,5,26)" fg:x="750" fg:w="4"/><text x="5.8806%" y="479.50"></text></g><g><title>[libc.so.6] (8 samples, 0.06%)</title><rect x="5.6832%" y="341" width="0.0601%" height="15" fill="rgb(235,190,38)" fg:x="757" fg:w="8"/><text x="5.9332%" y="351.50"></text></g><g><title>[libc.so.6] (7 samples, 0.05%)</title><rect x="5.6907%" y="325" width="0.0526%" height="15" fill="rgb(247,86,24)" fg:x="758" fg:w="7"/><text x="5.9407%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.09%)</title><rect x="5.6607%" y="469" width="0.0901%" height="15" fill="rgb(205,101,16)" fg:x="754" fg:w="12"/><text x="5.9107%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.09%)</title><rect x="5.6607%" y="453" width="0.0901%" height="15" fill="rgb(246,168,33)" fg:x="754" fg:w="12"/><text x="5.9107%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.09%)</title><rect x="5.6607%" y="437" width="0.0901%" height="15" fill="rgb(231,114,1)" fg:x="754" fg:w="12"/><text x="5.9107%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.09%)</title><rect x="5.6607%" y="421" width="0.0901%" height="15" fill="rgb(207,184,53)" fg:x="754" fg:w="12"/><text x="5.9107%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.09%)</title><rect x="5.6607%" y="405" width="0.0901%" height="15" fill="rgb(224,95,51)" fg:x="754" fg:w="12"/><text x="5.9107%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.09%)</title><rect x="5.6607%" y="389" width="0.0901%" height="15" fill="rgb(212,188,45)" fg:x="754" fg:w="12"/><text x="5.9107%" y="399.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.09%)</title><rect x="5.6607%" y="373" width="0.0901%" height="15" fill="rgb(223,154,38)" fg:x="754" fg:w="12"/><text x="5.9107%" y="383.50"></text></g><g><title>realloc (12 samples, 0.09%)</title><rect x="5.6607%" y="357" width="0.0901%" height="15" fill="rgb(251,22,52)" fg:x="754" fg:w="12"/><text x="5.9107%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt;&gt; (6 samples, 0.05%)</title><rect x="5.7583%" y="469" width="0.0450%" height="15" fill="rgb(229,209,22)" fg:x="767" fg:w="6"/><text x="6.0083%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt; (6 samples, 0.05%)</title><rect x="5.7583%" y="453" width="0.0450%" height="15" fill="rgb(234,138,34)" fg:x="767" fg:w="6"/><text x="6.0083%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="5.7583%" y="437" width="0.0450%" height="15" fill="rgb(212,95,11)" fg:x="767" fg:w="6"/><text x="6.0083%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.05%)</title><rect x="5.7583%" y="421" width="0.0450%" height="15" fill="rgb(240,179,47)" fg:x="767" fg:w="6"/><text x="6.0083%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.05%)</title><rect x="5.7583%" y="405" width="0.0450%" height="15" fill="rgb(240,163,11)" fg:x="767" fg:w="6"/><text x="6.0083%" y="415.50"></text></g><g><title>cfree (6 samples, 0.05%)</title><rect x="5.7583%" y="389" width="0.0450%" height="15" fill="rgb(236,37,12)" fg:x="767" fg:w="6"/><text x="6.0083%" y="399.50"></text></g><g><title>[libc.so.6] (6 samples, 0.05%)</title><rect x="5.7583%" y="373" width="0.0450%" height="15" fill="rgb(232,164,16)" fg:x="767" fg:w="6"/><text x="6.0083%" y="383.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (34 samples, 0.26%)</title><rect x="5.6306%" y="517" width="0.2553%" height="15" fill="rgb(244,205,15)" fg:x="750" fg:w="34"/><text x="5.8806%" y="527.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (34 samples, 0.26%)</title><rect x="5.6306%" y="501" width="0.2553%" height="15" fill="rgb(223,117,47)" fg:x="750" fg:w="34"/><text x="5.8806%" y="511.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (34 samples, 0.26%)</title><rect x="5.6306%" y="485" width="0.2553%" height="15" fill="rgb(244,107,35)" fg:x="750" fg:w="34"/><text x="5.8806%" y="495.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame (11 samples, 0.08%)</title><rect x="5.8033%" y="469" width="0.0826%" height="15" fill="rgb(205,140,8)" fg:x="773" fg:w="11"/><text x="6.0533%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (11 samples, 0.08%)</title><rect x="5.8033%" y="453" width="0.0826%" height="15" fill="rgb(228,84,46)" fg:x="773" fg:w="11"/><text x="6.0533%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.08%)</title><rect x="5.8033%" y="437" width="0.0826%" height="15" fill="rgb(254,188,9)" fg:x="773" fg:w="11"/><text x="6.0533%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.08%)</title><rect x="5.8033%" y="421" width="0.0826%" height="15" fill="rgb(206,112,54)" fg:x="773" fg:w="11"/><text x="6.0533%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.08%)</title><rect x="5.8033%" y="405" width="0.0826%" height="15" fill="rgb(216,84,49)" fg:x="773" fg:w="11"/><text x="6.0533%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.08%)</title><rect x="5.8033%" y="389" width="0.0826%" height="15" fill="rgb(214,194,35)" fg:x="773" fg:w="11"/><text x="6.0533%" y="399.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.08%)</title><rect x="5.8033%" y="373" width="0.0826%" height="15" fill="rgb(249,28,3)" fg:x="773" fg:w="11"/><text x="6.0533%" y="383.50"></text></g><g><title>malloc (11 samples, 0.08%)</title><rect x="5.8033%" y="357" width="0.0826%" height="15" fill="rgb(222,56,52)" fg:x="773" fg:w="11"/><text x="6.0533%" y="367.50"></text></g><g><title>[libc.so.6] (615 samples, 4.62%)</title><rect x="1.2838%" y="1525" width="4.6171%" height="15" fill="rgb(245,217,50)" fg:x="171" fg:w="615"/><text x="1.5338%" y="1535.50">[libc..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (36 samples, 0.27%)</title><rect x="5.6306%" y="1509" width="0.2703%" height="15" fill="rgb(213,201,24)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1519.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (36 samples, 0.27%)</title><rect x="5.6306%" y="1493" width="0.2703%" height="15" fill="rgb(248,116,28)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (36 samples, 0.27%)</title><rect x="5.6306%" y="1477" width="0.2703%" height="15" fill="rgb(219,72,43)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1487.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (36 samples, 0.27%)</title><rect x="5.6306%" y="1461" width="0.2703%" height="15" fill="rgb(209,138,14)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1471.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="1445" width="0.2703%" height="15" fill="rgb(222,18,33)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.27%)</title><rect x="5.6306%" y="1429" width="0.2703%" height="15" fill="rgb(213,199,7)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1439.50"></text></g><g><title>std::panicking::try (36 samples, 0.27%)</title><rect x="5.6306%" y="1413" width="0.2703%" height="15" fill="rgb(250,110,10)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.27%)</title><rect x="5.6306%" y="1397" width="0.2703%" height="15" fill="rgb(248,123,6)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.27%)</title><rect x="5.6306%" y="1381" width="0.2703%" height="15" fill="rgb(206,91,31)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="1365" width="0.2703%" height="15" fill="rgb(211,154,13)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1375.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (36 samples, 0.27%)</title><rect x="5.6306%" y="1349" width="0.2703%" height="15" fill="rgb(225,148,7)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1359.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="1333" width="0.2703%" height="15" fill="rgb(220,160,43)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1343.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (36 samples, 0.27%)</title><rect x="5.6306%" y="1317" width="0.2703%" height="15" fill="rgb(213,52,39)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1327.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (36 samples, 0.27%)</title><rect x="5.6306%" y="1301" width="0.2703%" height="15" fill="rgb(243,137,7)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1311.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (36 samples, 0.27%)</title><rect x="5.6306%" y="1285" width="0.2703%" height="15" fill="rgb(230,79,13)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1295.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (36 samples, 0.27%)</title><rect x="5.6306%" y="1269" width="0.2703%" height="15" fill="rgb(247,105,23)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (36 samples, 0.27%)</title><rect x="5.6306%" y="1253" width="0.2703%" height="15" fill="rgb(223,179,41)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (36 samples, 0.27%)</title><rect x="5.6306%" y="1237" width="0.2703%" height="15" fill="rgb(218,9,34)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (36 samples, 0.27%)</title><rect x="5.6306%" y="1221" width="0.2703%" height="15" fill="rgb(222,106,8)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.27%)</title><rect x="5.6306%" y="1205" width="0.2703%" height="15" fill="rgb(211,220,0)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1215.50"></text></g><g><title>std::panicking::try (36 samples, 0.27%)</title><rect x="5.6306%" y="1189" width="0.2703%" height="15" fill="rgb(229,52,16)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.27%)</title><rect x="5.6306%" y="1173" width="0.2703%" height="15" fill="rgb(212,155,18)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1183.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.27%)</title><rect x="5.6306%" y="1157" width="0.2703%" height="15" fill="rgb(242,21,14)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="1141" width="0.2703%" height="15" fill="rgb(222,19,48)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (36 samples, 0.27%)</title><rect x="5.6306%" y="1125" width="0.2703%" height="15" fill="rgb(232,45,27)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (36 samples, 0.27%)</title><rect x="5.6306%" y="1109" width="0.2703%" height="15" fill="rgb(249,103,42)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="1093" width="0.2703%" height="15" fill="rgb(246,81,33)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.27%)</title><rect x="5.6306%" y="1077" width="0.2703%" height="15" fill="rgb(252,33,42)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="1061" width="0.2703%" height="15" fill="rgb(209,212,41)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (36 samples, 0.27%)</title><rect x="5.6306%" y="1045" width="0.2703%" height="15" fill="rgb(207,154,6)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1055.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (36 samples, 0.27%)</title><rect x="5.6306%" y="1029" width="0.2703%" height="15" fill="rgb(223,64,47)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="1013" width="0.2703%" height="15" fill="rgb(211,161,38)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1023.50"></text></g><g><title>tokio::runtime::context::set_scheduler (36 samples, 0.27%)</title><rect x="5.6306%" y="997" width="0.2703%" height="15" fill="rgb(219,138,40)" fg:x="750" fg:w="36"/><text x="5.8806%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.27%)</title><rect x="5.6306%" y="981" width="0.2703%" height="15" fill="rgb(241,228,46)" fg:x="750" fg:w="36"/><text x="5.8806%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.27%)</title><rect x="5.6306%" y="965" width="0.2703%" height="15" fill="rgb(223,209,38)" fg:x="750" fg:w="36"/><text x="5.8806%" y="975.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="949" width="0.2703%" height="15" fill="rgb(236,164,45)" fg:x="750" fg:w="36"/><text x="5.8806%" y="959.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (36 samples, 0.27%)</title><rect x="5.6306%" y="933" width="0.2703%" height="15" fill="rgb(231,15,5)" fg:x="750" fg:w="36"/><text x="5.8806%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="917" width="0.2703%" height="15" fill="rgb(252,35,15)" fg:x="750" fg:w="36"/><text x="5.8806%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (36 samples, 0.27%)</title><rect x="5.6306%" y="901" width="0.2703%" height="15" fill="rgb(248,181,18)" fg:x="750" fg:w="36"/><text x="5.8806%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (36 samples, 0.27%)</title><rect x="5.6306%" y="885" width="0.2703%" height="15" fill="rgb(233,39,42)" fg:x="750" fg:w="36"/><text x="5.8806%" y="895.50"></text></g><g><title>tokio::runtime::coop::budget (36 samples, 0.27%)</title><rect x="5.6306%" y="869" width="0.2703%" height="15" fill="rgb(238,110,33)" fg:x="750" fg:w="36"/><text x="5.8806%" y="879.50"></text></g><g><title>tokio::runtime::coop::with_budget (36 samples, 0.27%)</title><rect x="5.6306%" y="853" width="0.2703%" height="15" fill="rgb(233,195,10)" fg:x="750" fg:w="36"/><text x="5.8806%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="837" width="0.2703%" height="15" fill="rgb(254,105,3)" fg:x="750" fg:w="36"/><text x="5.8806%" y="847.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (36 samples, 0.27%)</title><rect x="5.6306%" y="821" width="0.2703%" height="15" fill="rgb(221,225,9)" fg:x="750" fg:w="36"/><text x="5.8806%" y="831.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (36 samples, 0.27%)</title><rect x="5.6306%" y="805" width="0.2703%" height="15" fill="rgb(224,227,45)" fg:x="750" fg:w="36"/><text x="5.8806%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (36 samples, 0.27%)</title><rect x="5.6306%" y="789" width="0.2703%" height="15" fill="rgb(229,198,43)" fg:x="750" fg:w="36"/><text x="5.8806%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (36 samples, 0.27%)</title><rect x="5.6306%" y="773" width="0.2703%" height="15" fill="rgb(206,209,35)" fg:x="750" fg:w="36"/><text x="5.8806%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (36 samples, 0.27%)</title><rect x="5.6306%" y="757" width="0.2703%" height="15" fill="rgb(245,195,53)" fg:x="750" fg:w="36"/><text x="5.8806%" y="767.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.27%)</title><rect x="5.6306%" y="741" width="0.2703%" height="15" fill="rgb(240,92,26)" fg:x="750" fg:w="36"/><text x="5.8806%" y="751.50"></text></g><g><title>std::panicking::try (36 samples, 0.27%)</title><rect x="5.6306%" y="725" width="0.2703%" height="15" fill="rgb(207,40,23)" fg:x="750" fg:w="36"/><text x="5.8806%" y="735.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.27%)</title><rect x="5.6306%" y="709" width="0.2703%" height="15" fill="rgb(223,111,35)" fg:x="750" fg:w="36"/><text x="5.8806%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.27%)</title><rect x="5.6306%" y="693" width="0.2703%" height="15" fill="rgb(229,147,28)" fg:x="750" fg:w="36"/><text x="5.8806%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="677" width="0.2703%" height="15" fill="rgb(211,29,28)" fg:x="750" fg:w="36"/><text x="5.8806%" y="687.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (36 samples, 0.27%)</title><rect x="5.6306%" y="661" width="0.2703%" height="15" fill="rgb(228,72,33)" fg:x="750" fg:w="36"/><text x="5.8806%" y="671.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (36 samples, 0.27%)</title><rect x="5.6306%" y="645" width="0.2703%" height="15" fill="rgb(205,214,31)" fg:x="750" fg:w="36"/><text x="5.8806%" y="655.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="629" width="0.2703%" height="15" fill="rgb(224,111,15)" fg:x="750" fg:w="36"/><text x="5.8806%" y="639.50"></text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="613" width="0.2703%" height="15" fill="rgb(253,21,26)" fg:x="750" fg:w="36"/><text x="5.8806%" y="623.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="597" width="0.2703%" height="15" fill="rgb(245,139,43)" fg:x="750" fg:w="36"/><text x="5.8806%" y="607.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="581" width="0.2703%" height="15" fill="rgb(252,170,7)" fg:x="750" fg:w="36"/><text x="5.8806%" y="591.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="565" width="0.2703%" height="15" fill="rgb(231,118,14)" fg:x="750" fg:w="36"/><text x="5.8806%" y="575.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (36 samples, 0.27%)</title><rect x="5.6306%" y="549" width="0.2703%" height="15" fill="rgb(238,83,0)" fg:x="750" fg:w="36"/><text x="5.8806%" y="559.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (36 samples, 0.27%)</title><rect x="5.6306%" y="533" width="0.2703%" height="15" fill="rgb(221,39,39)" fg:x="750" fg:w="36"/><text x="5.8806%" y="543.50"></text></g><g><title>rutin::server::BgTaskChannel::recv_from_bg_task::_{{closure}} (2 samples, 0.02%)</title><rect x="5.8859%" y="517" width="0.0150%" height="15" fill="rgb(222,119,46)" fg:x="784" fg:w="2"/><text x="6.1359%" y="527.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="5.8859%" y="501" width="0.0150%" height="15" fill="rgb(222,165,49)" fg:x="784" fg:w="2"/><text x="6.1359%" y="511.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (2 samples, 0.02%)</title><rect x="5.8859%" y="485" width="0.0150%" height="15" fill="rgb(219,113,52)" fg:x="784" fg:w="2"/><text x="6.1359%" y="495.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="5.9009%" y="1525" width="0.0150%" height="15" fill="rgb(214,7,15)" fg:x="786" fg:w="2"/><text x="6.1509%" y="1535.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="5.9009%" y="1509" width="0.0150%" height="15" fill="rgb(235,32,4)" fg:x="786" fg:w="2"/><text x="6.1509%" y="1519.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13 samples, 0.10%)</title><rect x="6.2462%" y="501" width="0.0976%" height="15" fill="rgb(238,90,54)" fg:x="832" fg:w="13"/><text x="6.4962%" y="511.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (9 samples, 0.07%)</title><rect x="6.2763%" y="485" width="0.0676%" height="15" fill="rgb(213,208,19)" fg:x="836" fg:w="9"/><text x="6.5263%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (57 samples, 0.43%)</title><rect x="6.3514%" y="501" width="0.4279%" height="15" fill="rgb(233,156,4)" fg:x="846" fg:w="57"/><text x="6.6014%" y="511.50"></text></g><g><title>core::ptr::write (50 samples, 0.38%)</title><rect x="6.4039%" y="485" width="0.3754%" height="15" fill="rgb(207,194,5)" fg:x="853" fg:w="50"/><text x="6.6539%" y="495.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="6.7568%" y="469" width="0.0225%" height="15" fill="rgb(206,111,30)" fg:x="900" fg:w="3"/><text x="7.0068%" y="479.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="6.7568%" y="453" width="0.0225%" height="15" fill="rgb(243,70,54)" fg:x="900" fg:w="3"/><text x="7.0068%" y="463.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="6.7568%" y="437" width="0.0225%" height="15" fill="rgb(242,28,8)" fg:x="900" fg:w="3"/><text x="7.0068%" y="447.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="6.7568%" y="421" width="0.0225%" height="15" fill="rgb(219,106,18)" fg:x="900" fg:w="3"/><text x="7.0068%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.04%)</title><rect x="6.7793%" y="501" width="0.0375%" height="15" fill="rgb(244,222,10)" fg:x="903" fg:w="5"/><text x="7.0293%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.04%)</title><rect x="6.7793%" y="485" width="0.0375%" height="15" fill="rgb(236,179,52)" fg:x="903" fg:w="5"/><text x="7.0293%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.04%)</title><rect x="6.7793%" y="469" width="0.0375%" height="15" fill="rgb(213,23,39)" fg:x="903" fg:w="5"/><text x="7.0293%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.04%)</title><rect x="6.7793%" y="453" width="0.0375%" height="15" fill="rgb(238,48,10)" fg:x="903" fg:w="5"/><text x="7.0293%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.03%)</title><rect x="6.7868%" y="437" width="0.0300%" height="15" fill="rgb(251,196,23)" fg:x="904" fg:w="4"/><text x="7.0368%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.03%)</title><rect x="6.7868%" y="421" width="0.0300%" height="15" fill="rgb(250,152,24)" fg:x="904" fg:w="4"/><text x="7.0368%" y="431.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.03%)</title><rect x="6.7868%" y="405" width="0.0300%" height="15" fill="rgb(209,150,17)" fg:x="904" fg:w="4"/><text x="7.0368%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.02%)</title><rect x="6.8393%" y="469" width="0.0150%" height="15" fill="rgb(234,202,34)" fg:x="911" fg:w="2"/><text x="7.0893%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.02%)</title><rect x="6.8393%" y="453" width="0.0150%" height="15" fill="rgb(253,148,53)" fg:x="911" fg:w="2"/><text x="7.0893%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.04%)</title><rect x="6.8243%" y="501" width="0.0375%" height="15" fill="rgb(218,129,16)" fg:x="909" fg:w="5"/><text x="7.0743%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.04%)</title><rect x="6.8243%" y="485" width="0.0375%" height="15" fill="rgb(216,85,19)" fg:x="909" fg:w="5"/><text x="7.0743%" y="495.50"></text></g><g><title>__rust_dealloc (3 samples, 0.02%)</title><rect x="6.8919%" y="421" width="0.0225%" height="15" fill="rgb(235,228,7)" fg:x="918" fg:w="3"/><text x="7.1419%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.08%)</title><rect x="6.8769%" y="453" width="0.0826%" height="15" fill="rgb(245,175,0)" fg:x="916" fg:w="11"/><text x="7.1269%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.08%)</title><rect x="6.8769%" y="437" width="0.0826%" height="15" fill="rgb(208,168,36)" fg:x="916" fg:w="11"/><text x="7.1269%" y="447.50"></text></g><g><title>cfree (6 samples, 0.05%)</title><rect x="6.9144%" y="421" width="0.0450%" height="15" fill="rgb(246,171,24)" fg:x="921" fg:w="6"/><text x="7.1644%" y="431.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="6.9444%" y="405" width="0.0150%" height="15" fill="rgb(215,142,24)" fg:x="925" fg:w="2"/><text x="7.1944%" y="415.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="6.9444%" y="389" width="0.0150%" height="15" fill="rgb(250,187,7)" fg:x="925" fg:w="2"/><text x="7.1944%" y="399.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="6.9444%" y="373" width="0.0150%" height="15" fill="rgb(228,66,33)" fg:x="925" fg:w="2"/><text x="7.1944%" y="383.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="6.9444%" y="357" width="0.0150%" height="15" fill="rgb(234,215,21)" fg:x="925" fg:w="2"/><text x="7.1944%" y="367.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="6.9444%" y="341" width="0.0150%" height="15" fill="rgb(222,191,20)" fg:x="925" fg:w="2"/><text x="7.1944%" y="351.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="6.9444%" y="325" width="0.0150%" height="15" fill="rgb(245,79,54)" fg:x="925" fg:w="2"/><text x="7.1944%" y="335.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="6.9444%" y="309" width="0.0150%" height="15" fill="rgb(240,10,37)" fg:x="925" fg:w="2"/><text x="7.1944%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.10%)</title><rect x="6.8694%" y="469" width="0.0976%" height="15" fill="rgb(214,192,32)" fg:x="915" fg:w="13"/><text x="7.1194%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt;&gt; (24 samples, 0.18%)</title><rect x="6.8619%" y="501" width="0.1802%" height="15" fill="rgb(209,36,54)" fg:x="914" fg:w="24"/><text x="7.1119%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt; (24 samples, 0.18%)</title><rect x="6.8619%" y="485" width="0.1802%" height="15" fill="rgb(220,10,11)" fg:x="914" fg:w="24"/><text x="7.1119%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::connection::Connection::read_frames::{{closure}}::{{closure}}::{{closure}}::_read_frame::{{closure}}&gt; (10 samples, 0.08%)</title><rect x="6.9670%" y="469" width="0.0751%" height="15" fill="rgb(221,106,17)" fg:x="928" fg:w="10"/><text x="7.2170%" y="479.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (3 samples, 0.02%)</title><rect x="7.0420%" y="501" width="0.0225%" height="15" fill="rgb(251,142,44)" fg:x="938" fg:w="3"/><text x="7.2920%" y="511.50"></text></g><g><title>__rdl_alloc (3 samples, 0.02%)</title><rect x="7.2222%" y="389" width="0.0225%" height="15" fill="rgb(238,13,15)" fg:x="962" fg:w="3"/><text x="7.4722%" y="399.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="7.2222%" y="373" width="0.0225%" height="15" fill="rgb(208,107,27)" fg:x="962" fg:w="3"/><text x="7.4722%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.11%)</title><rect x="7.2072%" y="453" width="0.1126%" height="15" fill="rgb(205,136,37)" fg:x="960" fg:w="15"/><text x="7.4572%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.11%)</title><rect x="7.2147%" y="437" width="0.1051%" height="15" fill="rgb(250,205,27)" fg:x="961" fg:w="14"/><text x="7.4647%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.11%)</title><rect x="7.2147%" y="421" width="0.1051%" height="15" fill="rgb(210,80,43)" fg:x="961" fg:w="14"/><text x="7.4647%" y="431.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.11%)</title><rect x="7.2147%" y="405" width="0.1051%" height="15" fill="rgb(247,160,36)" fg:x="961" fg:w="14"/><text x="7.4647%" y="415.50"></text></g><g><title>malloc (9 samples, 0.07%)</title><rect x="7.2523%" y="389" width="0.0676%" height="15" fill="rgb(234,13,49)" fg:x="966" fg:w="9"/><text x="7.5023%" y="399.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame (35 samples, 0.26%)</title><rect x="7.0646%" y="501" width="0.2628%" height="15" fill="rgb(234,122,0)" fg:x="941" fg:w="35"/><text x="7.3146%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (32 samples, 0.24%)</title><rect x="7.0871%" y="485" width="0.2402%" height="15" fill="rgb(207,146,38)" fg:x="944" fg:w="32"/><text x="7.3371%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (32 samples, 0.24%)</title><rect x="7.0871%" y="469" width="0.2402%" height="15" fill="rgb(207,177,25)" fg:x="944" fg:w="32"/><text x="7.3371%" y="479.50"></text></g><g><title>rutin::connection::Connection::read_u8::_{{closure}} (2 samples, 0.02%)</title><rect x="7.3273%" y="501" width="0.0150%" height="15" fill="rgb(211,178,42)" fg:x="976" fg:w="2"/><text x="7.5773%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (191 samples, 1.43%)</title><rect x="5.9159%" y="533" width="1.4339%" height="15" fill="rgb(230,69,54)" fg:x="788" fg:w="191"/><text x="6.1659%" y="543.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (191 samples, 1.43%)</title><rect x="5.9159%" y="517" width="1.4339%" height="15" fill="rgb(214,135,41)" fg:x="788" fg:w="191"/><text x="6.1659%" y="527.50"></text></g><g><title>__tcp_send_ack.part.0 (3 samples, 0.02%)</title><rect x="7.4249%" y="197" width="0.0225%" height="15" fill="rgb(237,67,25)" fg:x="989" fg:w="3"/><text x="7.6749%" y="207.50"></text></g><g><title>__alloc_skb (3 samples, 0.02%)</title><rect x="7.4249%" y="181" width="0.0225%" height="15" fill="rgb(222,189,50)" fg:x="989" fg:w="3"/><text x="7.6749%" y="191.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.02%)</title><rect x="7.4324%" y="165" width="0.0150%" height="15" fill="rgb(245,148,34)" fg:x="990" fg:w="2"/><text x="7.6824%" y="175.50"></text></g><g><title>memcpy_erms (4 samples, 0.03%)</title><rect x="7.5150%" y="69" width="0.0300%" height="15" fill="rgb(222,29,6)" fg:x="1001" fg:w="4"/><text x="7.7650%" y="79.50"></text></g><g><title>dev_hard_start_xmit (11 samples, 0.08%)</title><rect x="7.4850%" y="117" width="0.0826%" height="15" fill="rgb(221,189,43)" fg:x="997" fg:w="11"/><text x="7.7350%" y="127.50"></text></g><g><title>netvsc_xmit (11 samples, 0.08%)</title><rect x="7.4850%" y="101" width="0.0826%" height="15" fill="rgb(207,36,27)" fg:x="997" fg:w="11"/><text x="7.7350%" y="111.50"></text></g><g><title>netvsc_send (10 samples, 0.08%)</title><rect x="7.4925%" y="85" width="0.0751%" height="15" fill="rgb(217,90,24)" fg:x="998" fg:w="10"/><text x="7.7425%" y="95.50"></text></g><g><title>netvsc_send_pkt (3 samples, 0.02%)</title><rect x="7.5450%" y="69" width="0.0225%" height="15" fill="rgb(224,66,35)" fg:x="1005" fg:w="3"/><text x="7.7950%" y="79.50"></text></g><g><title>vmbus_sendpacket (2 samples, 0.02%)</title><rect x="7.5526%" y="53" width="0.0150%" height="15" fill="rgb(221,13,50)" fg:x="1006" fg:w="2"/><text x="7.8026%" y="63.50"></text></g><g><title>hv_ringbuffer_write (2 samples, 0.02%)</title><rect x="7.5526%" y="37" width="0.0150%" height="15" fill="rgb(236,68,49)" fg:x="1006" fg:w="2"/><text x="7.8026%" y="47.50"></text></g><g><title>ip_finish_output2 (15 samples, 0.11%)</title><rect x="7.4625%" y="165" width="0.1126%" height="15" fill="rgb(229,146,28)" fg:x="994" fg:w="15"/><text x="7.7125%" y="175.50"></text></g><g><title>__dev_queue_xmit (13 samples, 0.10%)</title><rect x="7.4775%" y="149" width="0.0976%" height="15" fill="rgb(225,31,38)" fg:x="996" fg:w="13"/><text x="7.7275%" y="159.50"></text></g><g><title>sch_direct_xmit (12 samples, 0.09%)</title><rect x="7.4850%" y="133" width="0.0901%" height="15" fill="rgb(250,208,3)" fg:x="997" fg:w="12"/><text x="7.7350%" y="143.50"></text></g><g><title>__nf_conntrack_find_get.isra.0 (6 samples, 0.05%)</title><rect x="7.5826%" y="101" width="0.0450%" height="15" fill="rgb(246,54,23)" fg:x="1010" fg:w="6"/><text x="7.8326%" y="111.50"></text></g><g><title>nf_conntrack_in (8 samples, 0.06%)</title><rect x="7.5826%" y="117" width="0.0601%" height="15" fill="rgb(243,76,11)" fg:x="1010" fg:w="8"/><text x="7.8326%" y="127.50"></text></g><g><title>ip_local_out (12 samples, 0.09%)</title><rect x="7.5751%" y="165" width="0.0901%" height="15" fill="rgb(245,21,50)" fg:x="1009" fg:w="12"/><text x="7.8251%" y="175.50"></text></g><g><title>__ip_local_out (12 samples, 0.09%)</title><rect x="7.5751%" y="149" width="0.0901%" height="15" fill="rgb(228,9,43)" fg:x="1009" fg:w="12"/><text x="7.8251%" y="159.50"></text></g><g><title>nf_hook_slow (12 samples, 0.09%)</title><rect x="7.5751%" y="133" width="0.0901%" height="15" fill="rgb(208,100,47)" fg:x="1009" fg:w="12"/><text x="7.8251%" y="143.50"></text></g><g><title>nft_do_chain_ipv4 (3 samples, 0.02%)</title><rect x="7.6426%" y="117" width="0.0225%" height="15" fill="rgb(232,26,8)" fg:x="1018" fg:w="3"/><text x="7.8926%" y="127.50"></text></g><g><title>nft_do_chain (3 samples, 0.02%)</title><rect x="7.6426%" y="101" width="0.0225%" height="15" fill="rgb(216,166,38)" fg:x="1018" fg:w="3"/><text x="7.8926%" y="111.50"></text></g><g><title>nf_confirm (2 samples, 0.02%)</title><rect x="7.6727%" y="133" width="0.0150%" height="15" fill="rgb(251,202,51)" fg:x="1022" fg:w="2"/><text x="7.9227%" y="143.50"></text></g><g><title>__tcp_transmit_skb (34 samples, 0.26%)</title><rect x="7.4474%" y="197" width="0.2553%" height="15" fill="rgb(254,216,34)" fg:x="992" fg:w="34"/><text x="7.6974%" y="207.50"></text></g><g><title>__ip_queue_xmit (33 samples, 0.25%)</title><rect x="7.4550%" y="181" width="0.2477%" height="15" fill="rgb(251,32,27)" fg:x="993" fg:w="33"/><text x="7.7050%" y="191.50"></text></g><g><title>ip_output (5 samples, 0.04%)</title><rect x="7.6652%" y="165" width="0.0375%" height="15" fill="rgb(208,127,28)" fg:x="1021" fg:w="5"/><text x="7.9152%" y="175.50"></text></g><g><title>nf_hook_slow (4 samples, 0.03%)</title><rect x="7.6727%" y="149" width="0.0300%" height="15" fill="rgb(224,137,22)" fg:x="1022" fg:w="4"/><text x="7.9227%" y="159.50"></text></g><g><title>nf_nat_ipv4_out (2 samples, 0.02%)</title><rect x="7.6877%" y="133" width="0.0150%" height="15" fill="rgb(254,70,32)" fg:x="1024" fg:w="2"/><text x="7.9377%" y="143.50"></text></g><g><title>_copy_to_iter (3 samples, 0.02%)</title><rect x="7.7027%" y="165" width="0.0225%" height="15" fill="rgb(229,75,37)" fg:x="1026" fg:w="3"/><text x="7.9527%" y="175.50"></text></g><g><title>copy_user_enhanced_fast_string (3 samples, 0.02%)</title><rect x="7.7027%" y="149" width="0.0225%" height="15" fill="rgb(252,64,23)" fg:x="1026" fg:w="3"/><text x="7.9527%" y="159.50"></text></g><g><title>skb_copy_datagram_iter (4 samples, 0.03%)</title><rect x="7.7027%" y="197" width="0.0300%" height="15" fill="rgb(232,162,48)" fg:x="1026" fg:w="4"/><text x="7.9527%" y="207.50"></text></g><g><title>__skb_datagram_iter (4 samples, 0.03%)</title><rect x="7.7027%" y="181" width="0.0300%" height="15" fill="rgb(246,160,12)" fg:x="1026" fg:w="4"/><text x="7.9527%" y="191.50"></text></g><g><title>inet_recvmsg (48 samples, 0.36%)</title><rect x="7.3949%" y="245" width="0.3604%" height="15" fill="rgb(247,166,0)" fg:x="985" fg:w="48"/><text x="7.6449%" y="255.50"></text></g><g><title>tcp_recvmsg (47 samples, 0.35%)</title><rect x="7.4024%" y="229" width="0.3529%" height="15" fill="rgb(249,219,21)" fg:x="986" fg:w="47"/><text x="7.6524%" y="239.50"></text></g><g><title>tcp_recvmsg_locked (45 samples, 0.34%)</title><rect x="7.4174%" y="213" width="0.3378%" height="15" fill="rgb(205,209,3)" fg:x="988" fg:w="45"/><text x="7.6674%" y="223.50"></text></g><g><title>tcp_rcv_space_adjust (3 samples, 0.02%)</title><rect x="7.7327%" y="197" width="0.0225%" height="15" fill="rgb(243,44,1)" fg:x="1030" fg:w="3"/><text x="7.9827%" y="207.50"></text></g><g><title>__x64_sys_recvfrom (54 samples, 0.41%)</title><rect x="7.3724%" y="277" width="0.4054%" height="15" fill="rgb(206,159,16)" fg:x="982" fg:w="54"/><text x="7.6224%" y="287.50"></text></g><g><title>__sys_recvfrom (54 samples, 0.41%)</title><rect x="7.3724%" y="261" width="0.4054%" height="15" fill="rgb(244,77,30)" fg:x="982" fg:w="54"/><text x="7.6224%" y="271.50"></text></g><g><title>sockfd_lookup_light (3 samples, 0.02%)</title><rect x="7.7553%" y="245" width="0.0225%" height="15" fill="rgb(218,69,12)" fg:x="1033" fg:w="3"/><text x="8.0053%" y="255.50"></text></g><g><title>__fget_light (3 samples, 0.02%)</title><rect x="7.7553%" y="229" width="0.0225%" height="15" fill="rgb(212,87,7)" fg:x="1033" fg:w="3"/><text x="8.0053%" y="239.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (59 samples, 0.44%)</title><rect x="7.3498%" y="533" width="0.4429%" height="15" fill="rgb(245,114,25)" fg:x="979" fg:w="59"/><text x="7.5998%" y="543.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (59 samples, 0.44%)</title><rect x="7.3498%" y="517" width="0.4429%" height="15" fill="rgb(210,61,42)" fg:x="979" fg:w="59"/><text x="7.5998%" y="527.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (59 samples, 0.44%)</title><rect x="7.3498%" y="501" width="0.4429%" height="15" fill="rgb(211,52,33)" fg:x="979" fg:w="59"/><text x="7.5998%" y="511.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (59 samples, 0.44%)</title><rect x="7.3498%" y="485" width="0.4429%" height="15" fill="rgb(234,58,33)" fg:x="979" fg:w="59"/><text x="7.5998%" y="495.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (59 samples, 0.44%)</title><rect x="7.3498%" y="469" width="0.4429%" height="15" fill="rgb(220,115,36)" fg:x="979" fg:w="59"/><text x="7.5998%" y="479.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (59 samples, 0.44%)</title><rect x="7.3498%" y="453" width="0.4429%" height="15" fill="rgb(243,153,54)" fg:x="979" fg:w="59"/><text x="7.5998%" y="463.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (59 samples, 0.44%)</title><rect x="7.3498%" y="437" width="0.4429%" height="15" fill="rgb(251,47,18)" fg:x="979" fg:w="59"/><text x="7.5998%" y="447.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (59 samples, 0.44%)</title><rect x="7.3498%" y="421" width="0.4429%" height="15" fill="rgb(242,102,42)" fg:x="979" fg:w="59"/><text x="7.5998%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (59 samples, 0.44%)</title><rect x="7.3498%" y="405" width="0.4429%" height="15" fill="rgb(234,31,38)" fg:x="979" fg:w="59"/><text x="7.5998%" y="415.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (59 samples, 0.44%)</title><rect x="7.3498%" y="389" width="0.4429%" height="15" fill="rgb(221,117,51)" fg:x="979" fg:w="59"/><text x="7.5998%" y="399.50"></text></g><g><title>std::sys_common::net::TcpStream::read (59 samples, 0.44%)</title><rect x="7.3498%" y="373" width="0.4429%" height="15" fill="rgb(212,20,18)" fg:x="979" fg:w="59"/><text x="7.5998%" y="383.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (59 samples, 0.44%)</title><rect x="7.3498%" y="357" width="0.4429%" height="15" fill="rgb(245,133,36)" fg:x="979" fg:w="59"/><text x="7.5998%" y="367.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (59 samples, 0.44%)</title><rect x="7.3498%" y="341" width="0.4429%" height="15" fill="rgb(212,6,19)" fg:x="979" fg:w="59"/><text x="7.5998%" y="351.50"></text></g><g><title>recv (59 samples, 0.44%)</title><rect x="7.3498%" y="325" width="0.4429%" height="15" fill="rgb(218,1,36)" fg:x="979" fg:w="59"/><text x="7.5998%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (56 samples, 0.42%)</title><rect x="7.3724%" y="309" width="0.4204%" height="15" fill="rgb(246,84,54)" fg:x="982" fg:w="56"/><text x="7.6224%" y="319.50"></text></g><g><title>do_syscall_64 (56 samples, 0.42%)</title><rect x="7.3724%" y="293" width="0.4204%" height="15" fill="rgb(242,110,6)" fg:x="982" fg:w="56"/><text x="7.6224%" y="303.50"></text></g><g><title>syscall_trace_enter.constprop.0 (2 samples, 0.02%)</title><rect x="7.7778%" y="277" width="0.0150%" height="15" fill="rgb(214,47,5)" fg:x="1036" fg:w="2"/><text x="8.0278%" y="287.50"></text></g><g><title>__seccomp_filter (2 samples, 0.02%)</title><rect x="7.7778%" y="261" width="0.0150%" height="15" fill="rgb(218,159,25)" fg:x="1036" fg:w="2"/><text x="8.0278%" y="271.50"></text></g><g><title>[libc.so.6] (25 samples, 0.19%)</title><rect x="7.9730%" y="373" width="0.1877%" height="15" fill="rgb(215,211,28)" fg:x="1062" fg:w="25"/><text x="8.2230%" y="383.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (300 samples, 2.25%)</title><rect x="5.9159%" y="581" width="2.2523%" height="15" fill="rgb(238,59,32)" fg:x="788" fg:w="300"/><text x="6.1659%" y="591.50">r..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (300 samples, 2.25%)</title><rect x="5.9159%" y="565" width="2.2523%" height="15" fill="rgb(226,82,3)" fg:x="788" fg:w="300"/><text x="6.1659%" y="575.50">r..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (300 samples, 2.25%)</title><rect x="5.9159%" y="549" width="2.2523%" height="15" fill="rgb(240,164,32)" fg:x="788" fg:w="300"/><text x="6.1659%" y="559.50">r..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (50 samples, 0.38%)</title><rect x="7.7928%" y="533" width="0.3754%" height="15" fill="rgb(232,46,7)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (50 samples, 0.38%)</title><rect x="7.7928%" y="517" width="0.3754%" height="15" fill="rgb(229,129,53)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.38%)</title><rect x="7.7928%" y="501" width="0.3754%" height="15" fill="rgb(234,188,29)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.38%)</title><rect x="7.7928%" y="485" width="0.3754%" height="15" fill="rgb(246,141,4)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (50 samples, 0.38%)</title><rect x="7.7928%" y="469" width="0.3754%" height="15" fill="rgb(229,23,39)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (50 samples, 0.38%)</title><rect x="7.7928%" y="453" width="0.3754%" height="15" fill="rgb(206,12,3)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="463.50"></text></g><g><title>alloc::alloc::realloc (50 samples, 0.38%)</title><rect x="7.7928%" y="437" width="0.3754%" height="15" fill="rgb(252,226,20)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="447.50"></text></g><g><title>realloc (50 samples, 0.38%)</title><rect x="7.7928%" y="421" width="0.3754%" height="15" fill="rgb(216,123,35)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="431.50"></text></g><g><title>[libc.so.6] (50 samples, 0.38%)</title><rect x="7.7928%" y="405" width="0.3754%" height="15" fill="rgb(212,68,40)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="415.50"></text></g><g><title>[libc.so.6] (50 samples, 0.38%)</title><rect x="7.7928%" y="389" width="0.3754%" height="15" fill="rgb(254,125,32)" fg:x="1038" fg:w="50"/><text x="8.0428%" y="399.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (2 samples, 0.02%)</title><rect x="8.1682%" y="501" width="0.0150%" height="15" fill="rgb(253,97,22)" fg:x="1088" fg:w="2"/><text x="8.4182%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="8.1682%" y="485" width="0.0150%" height="15" fill="rgb(241,101,14)" fg:x="1088" fg:w="2"/><text x="8.4182%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="8.1682%" y="469" width="0.0150%" height="15" fill="rgb(238,103,29)" fg:x="1088" fg:w="2"/><text x="8.4182%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="8.1682%" y="453" width="0.0150%" height="15" fill="rgb(233,195,47)" fg:x="1088" fg:w="2"/><text x="8.4182%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="8.1682%" y="437" width="0.0150%" height="15" fill="rgb(246,218,30)" fg:x="1088" fg:w="2"/><text x="8.4182%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="8.1682%" y="421" width="0.0150%" height="15" fill="rgb(219,145,47)" fg:x="1088" fg:w="2"/><text x="8.4182%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="8.1682%" y="405" width="0.0150%" height="15" fill="rgb(243,12,26)" fg:x="1088" fg:w="2"/><text x="8.4182%" y="415.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="8.1682%" y="389" width="0.0150%" height="15" fill="rgb(214,87,16)" fg:x="1088" fg:w="2"/><text x="8.4182%" y="399.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (4 samples, 0.03%)</title><rect x="8.1682%" y="517" width="0.0300%" height="15" fill="rgb(208,99,42)" fg:x="1088" fg:w="4"/><text x="8.4182%" y="527.50"></text></g><g><title>flume::async::AsyncSignal::new (2 samples, 0.02%)</title><rect x="8.1832%" y="501" width="0.0150%" height="15" fill="rgb(253,99,2)" fg:x="1090" fg:w="2"/><text x="8.4332%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="8.1832%" y="485" width="0.0150%" height="15" fill="rgb(220,168,23)" fg:x="1090" fg:w="2"/><text x="8.4332%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1525" width="2.2973%" height="15" fill="rgb(242,38,24)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1535.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1509" width="2.2973%" height="15" fill="rgb(225,182,9)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1519.50">s..</text></g><g><title>std::panic::catch_unwind (306 samples, 2.30%)</title><rect x="5.9159%" y="1493" width="2.2973%" height="15" fill="rgb(243,178,37)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1503.50">s..</text></g><g><title>std::panicking::try (306 samples, 2.30%)</title><rect x="5.9159%" y="1477" width="2.2973%" height="15" fill="rgb(232,139,19)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1487.50">s..</text></g><g><title>std::panicking::try::do_call (306 samples, 2.30%)</title><rect x="5.9159%" y="1461" width="2.2973%" height="15" fill="rgb(225,201,24)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1471.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (306 samples, 2.30%)</title><rect x="5.9159%" y="1445" width="2.2973%" height="15" fill="rgb(221,47,46)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1455.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1429" width="2.2973%" height="15" fill="rgb(249,23,13)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1439.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (306 samples, 2.30%)</title><rect x="5.9159%" y="1413" width="2.2973%" height="15" fill="rgb(219,9,5)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1423.50">s..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1397" width="2.2973%" height="15" fill="rgb(254,171,16)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1407.50">t..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (306 samples, 2.30%)</title><rect x="5.9159%" y="1381" width="2.2973%" height="15" fill="rgb(230,171,20)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1391.50">t..</text></g><g><title>tokio::runtime::blocking::pool::Task::run (306 samples, 2.30%)</title><rect x="5.9159%" y="1365" width="2.2973%" height="15" fill="rgb(210,71,41)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1375.50">t..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (306 samples, 2.30%)</title><rect x="5.9159%" y="1349" width="2.2973%" height="15" fill="rgb(206,173,20)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1359.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (306 samples, 2.30%)</title><rect x="5.9159%" y="1333" width="2.2973%" height="15" fill="rgb(233,88,34)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1343.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (306 samples, 2.30%)</title><rect x="5.9159%" y="1317" width="2.2973%" height="15" fill="rgb(223,209,46)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1327.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (306 samples, 2.30%)</title><rect x="5.9159%" y="1301" width="2.2973%" height="15" fill="rgb(250,43,18)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1311.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (306 samples, 2.30%)</title><rect x="5.9159%" y="1285" width="2.2973%" height="15" fill="rgb(208,13,10)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1295.50">t..</text></g><g><title>std::panic::catch_unwind (306 samples, 2.30%)</title><rect x="5.9159%" y="1269" width="2.2973%" height="15" fill="rgb(212,200,36)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1279.50">s..</text></g><g><title>std::panicking::try (306 samples, 2.30%)</title><rect x="5.9159%" y="1253" width="2.2973%" height="15" fill="rgb(225,90,30)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1263.50">s..</text></g><g><title>std::panicking::try::do_call (306 samples, 2.30%)</title><rect x="5.9159%" y="1237" width="2.2973%" height="15" fill="rgb(236,182,39)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1247.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (306 samples, 2.30%)</title><rect x="5.9159%" y="1221" width="2.2973%" height="15" fill="rgb(212,144,35)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1231.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1205" width="2.2973%" height="15" fill="rgb(228,63,44)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1215.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (306 samples, 2.30%)</title><rect x="5.9159%" y="1189" width="2.2973%" height="15" fill="rgb(228,109,6)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1199.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (306 samples, 2.30%)</title><rect x="5.9159%" y="1173" width="2.2973%" height="15" fill="rgb(238,117,24)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1183.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1157" width="2.2973%" height="15" fill="rgb(242,26,26)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1167.50">t..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (306 samples, 2.30%)</title><rect x="5.9159%" y="1141" width="2.2973%" height="15" fill="rgb(221,92,48)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1151.50">&lt;..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1125" width="2.2973%" height="15" fill="rgb(209,209,32)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1135.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (306 samples, 2.30%)</title><rect x="5.9159%" y="1109" width="2.2973%" height="15" fill="rgb(221,70,22)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1119.50">t..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (306 samples, 2.30%)</title><rect x="5.9159%" y="1093" width="2.2973%" height="15" fill="rgb(248,145,5)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1103.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1077" width="2.2973%" height="15" fill="rgb(226,116,26)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1087.50">t..</text></g><g><title>tokio::runtime::context::set_scheduler (306 samples, 2.30%)</title><rect x="5.9159%" y="1061" width="2.2973%" height="15" fill="rgb(244,5,17)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1071.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (306 samples, 2.30%)</title><rect x="5.9159%" y="1045" width="2.2973%" height="15" fill="rgb(252,159,33)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1055.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (306 samples, 2.30%)</title><rect x="5.9159%" y="1029" width="2.2973%" height="15" fill="rgb(206,71,0)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1039.50">s..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="1013" width="2.2973%" height="15" fill="rgb(233,118,54)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1023.50">t..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (306 samples, 2.30%)</title><rect x="5.9159%" y="997" width="2.2973%" height="15" fill="rgb(234,83,48)" fg:x="788" fg:w="306"/><text x="6.1659%" y="1007.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="981" width="2.2973%" height="15" fill="rgb(228,3,54)" fg:x="788" fg:w="306"/><text x="6.1659%" y="991.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (306 samples, 2.30%)</title><rect x="5.9159%" y="965" width="2.2973%" height="15" fill="rgb(226,155,13)" fg:x="788" fg:w="306"/><text x="6.1659%" y="975.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (306 samples, 2.30%)</title><rect x="5.9159%" y="949" width="2.2973%" height="15" fill="rgb(241,28,37)" fg:x="788" fg:w="306"/><text x="6.1659%" y="959.50">t..</text></g><g><title>tokio::runtime::coop::budget (306 samples, 2.30%)</title><rect x="5.9159%" y="933" width="2.2973%" height="15" fill="rgb(233,93,10)" fg:x="788" fg:w="306"/><text x="6.1659%" y="943.50">t..</text></g><g><title>tokio::runtime::coop::with_budget (306 samples, 2.30%)</title><rect x="5.9159%" y="917" width="2.2973%" height="15" fill="rgb(225,113,19)" fg:x="788" fg:w="306"/><text x="6.1659%" y="927.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="901" width="2.2973%" height="15" fill="rgb(241,2,18)" fg:x="788" fg:w="306"/><text x="6.1659%" y="911.50">t..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (306 samples, 2.30%)</title><rect x="5.9159%" y="885" width="2.2973%" height="15" fill="rgb(228,207,21)" fg:x="788" fg:w="306"/><text x="6.1659%" y="895.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (306 samples, 2.30%)</title><rect x="5.9159%" y="869" width="2.2973%" height="15" fill="rgb(213,211,35)" fg:x="788" fg:w="306"/><text x="6.1659%" y="879.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (306 samples, 2.30%)</title><rect x="5.9159%" y="853" width="2.2973%" height="15" fill="rgb(209,83,10)" fg:x="788" fg:w="306"/><text x="6.1659%" y="863.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (306 samples, 2.30%)</title><rect x="5.9159%" y="837" width="2.2973%" height="15" fill="rgb(209,164,1)" fg:x="788" fg:w="306"/><text x="6.1659%" y="847.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (306 samples, 2.30%)</title><rect x="5.9159%" y="821" width="2.2973%" height="15" fill="rgb(213,184,43)" fg:x="788" fg:w="306"/><text x="6.1659%" y="831.50">t..</text></g><g><title>std::panic::catch_unwind (306 samples, 2.30%)</title><rect x="5.9159%" y="805" width="2.2973%" height="15" fill="rgb(231,61,34)" fg:x="788" fg:w="306"/><text x="6.1659%" y="815.50">s..</text></g><g><title>std::panicking::try (306 samples, 2.30%)</title><rect x="5.9159%" y="789" width="2.2973%" height="15" fill="rgb(235,75,3)" fg:x="788" fg:w="306"/><text x="6.1659%" y="799.50">s..</text></g><g><title>std::panicking::try::do_call (306 samples, 2.30%)</title><rect x="5.9159%" y="773" width="2.2973%" height="15" fill="rgb(220,106,47)" fg:x="788" fg:w="306"/><text x="6.1659%" y="783.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (306 samples, 2.30%)</title><rect x="5.9159%" y="757" width="2.2973%" height="15" fill="rgb(210,196,33)" fg:x="788" fg:w="306"/><text x="6.1659%" y="767.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="741" width="2.2973%" height="15" fill="rgb(229,154,42)" fg:x="788" fg:w="306"/><text x="6.1659%" y="751.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (306 samples, 2.30%)</title><rect x="5.9159%" y="725" width="2.2973%" height="15" fill="rgb(228,114,26)" fg:x="788" fg:w="306"/><text x="6.1659%" y="735.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (306 samples, 2.30%)</title><rect x="5.9159%" y="709" width="2.2973%" height="15" fill="rgb(208,144,1)" fg:x="788" fg:w="306"/><text x="6.1659%" y="719.50">t..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="693" width="2.2973%" height="15" fill="rgb(239,112,37)" fg:x="788" fg:w="306"/><text x="6.1659%" y="703.50">t..</text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="677" width="2.2973%" height="15" fill="rgb(210,96,50)" fg:x="788" fg:w="306"/><text x="6.1659%" y="687.50">r..</text></g><g><title>rutin::server::Handler::run::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="661" width="2.2973%" height="15" fill="rgb(222,178,2)" fg:x="788" fg:w="306"/><text x="6.1659%" y="671.50">r..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="645" width="2.2973%" height="15" fill="rgb(226,74,18)" fg:x="788" fg:w="306"/><text x="6.1659%" y="655.50">r..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="629" width="2.2973%" height="15" fill="rgb(225,67,54)" fg:x="788" fg:w="306"/><text x="6.1659%" y="639.50">r..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (306 samples, 2.30%)</title><rect x="5.9159%" y="613" width="2.2973%" height="15" fill="rgb(251,92,32)" fg:x="788" fg:w="306"/><text x="6.1659%" y="623.50">&lt;..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (306 samples, 2.30%)</title><rect x="5.9159%" y="597" width="2.2973%" height="15" fill="rgb(228,149,22)" fg:x="788" fg:w="306"/><text x="6.1659%" y="607.50">r..</text></g><g><title>rutin::server::BgTaskChannel::recv_from_bg_task::_{{closure}} (6 samples, 0.05%)</title><rect x="8.1682%" y="581" width="0.0450%" height="15" fill="rgb(243,54,13)" fg:x="1088" fg:w="6"/><text x="8.4182%" y="591.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.05%)</title><rect x="8.1682%" y="565" width="0.0450%" height="15" fill="rgb(243,180,28)" fg:x="1088" fg:w="6"/><text x="8.4182%" y="575.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (6 samples, 0.05%)</title><rect x="8.1682%" y="549" width="0.0450%" height="15" fill="rgb(208,167,24)" fg:x="1088" fg:w="6"/><text x="8.4182%" y="559.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (6 samples, 0.05%)</title><rect x="8.1682%" y="533" width="0.0450%" height="15" fill="rgb(245,73,45)" fg:x="1088" fg:w="6"/><text x="8.4182%" y="543.50"></text></g><g><title>flume::wait_lock (2 samples, 0.02%)</title><rect x="8.1982%" y="517" width="0.0150%" height="15" fill="rgb(237,203,48)" fg:x="1092" fg:w="2"/><text x="8.4482%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="8.1982%" y="501" width="0.0150%" height="15" fill="rgb(211,197,16)" fg:x="1092" fg:w="2"/><text x="8.4482%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.10%)</title><rect x="8.2207%" y="613" width="0.0976%" height="15" fill="rgb(243,99,51)" fg:x="1095" fg:w="13"/><text x="8.4707%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.10%)</title><rect x="8.2207%" y="597" width="0.0976%" height="15" fill="rgb(215,123,29)" fg:x="1095" fg:w="13"/><text x="8.4707%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.10%)</title><rect x="8.2207%" y="581" width="0.0976%" height="15" fill="rgb(239,186,37)" fg:x="1095" fg:w="13"/><text x="8.4707%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.10%)</title><rect x="8.2207%" y="565" width="0.0976%" height="15" fill="rgb(252,136,39)" fg:x="1095" fg:w="13"/><text x="8.4707%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.10%)</title><rect x="8.2207%" y="549" width="0.0976%" height="15" fill="rgb(223,213,32)" fg:x="1095" fg:w="13"/><text x="8.4707%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.10%)</title><rect x="8.2207%" y="533" width="0.0976%" height="15" fill="rgb(233,115,5)" fg:x="1095" fg:w="13"/><text x="8.4707%" y="543.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.10%)</title><rect x="8.2207%" y="517" width="0.0976%" height="15" fill="rgb(207,226,44)" fg:x="1095" fg:w="13"/><text x="8.4707%" y="527.50"></text></g><g><title>malloc (13 samples, 0.10%)</title><rect x="8.2207%" y="501" width="0.0976%" height="15" fill="rgb(208,126,0)" fg:x="1095" fg:w="13"/><text x="8.4707%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt;&gt; (23 samples, 0.17%)</title><rect x="8.3183%" y="613" width="0.1727%" height="15" fill="rgb(244,66,21)" fg:x="1108" fg:w="23"/><text x="8.5683%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt; (23 samples, 0.17%)</title><rect x="8.3183%" y="597" width="0.1727%" height="15" fill="rgb(222,97,12)" fg:x="1108" fg:w="23"/><text x="8.5683%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.17%)</title><rect x="8.3183%" y="581" width="0.1727%" height="15" fill="rgb(219,213,19)" fg:x="1108" fg:w="23"/><text x="8.5683%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.17%)</title><rect x="8.3183%" y="565" width="0.1727%" height="15" fill="rgb(252,169,30)" fg:x="1108" fg:w="23"/><text x="8.5683%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.17%)</title><rect x="8.3183%" y="549" width="0.1727%" height="15" fill="rgb(206,32,51)" fg:x="1108" fg:w="23"/><text x="8.5683%" y="559.50"></text></g><g><title>cfree (23 samples, 0.17%)</title><rect x="8.3183%" y="533" width="0.1727%" height="15" fill="rgb(250,172,42)" fg:x="1108" fg:w="23"/><text x="8.5683%" y="543.50"></text></g><g><title>[libc.so.6] (10 samples, 0.08%)</title><rect x="8.4159%" y="517" width="0.0751%" height="15" fill="rgb(209,34,43)" fg:x="1121" fg:w="10"/><text x="8.6659%" y="527.50"></text></g><g><title>[libc.so.6] (4 samples, 0.03%)</title><rect x="8.9865%" y="485" width="0.0300%" height="15" fill="rgb(223,11,35)" fg:x="1197" fg:w="4"/><text x="9.2365%" y="495.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame (74 samples, 0.56%)</title><rect x="8.4910%" y="613" width="0.5556%" height="15" fill="rgb(251,219,26)" fg:x="1131" fg:w="74"/><text x="8.7410%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (74 samples, 0.56%)</title><rect x="8.4910%" y="597" width="0.5556%" height="15" fill="rgb(231,119,3)" fg:x="1131" fg:w="74"/><text x="8.7410%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (74 samples, 0.56%)</title><rect x="8.4910%" y="581" width="0.5556%" height="15" fill="rgb(216,97,11)" fg:x="1131" fg:w="74"/><text x="8.7410%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (74 samples, 0.56%)</title><rect x="8.4910%" y="565" width="0.5556%" height="15" fill="rgb(223,59,9)" fg:x="1131" fg:w="74"/><text x="8.7410%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (74 samples, 0.56%)</title><rect x="8.4910%" y="549" width="0.5556%" height="15" fill="rgb(233,93,31)" fg:x="1131" fg:w="74"/><text x="8.7410%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (74 samples, 0.56%)</title><rect x="8.4910%" y="533" width="0.5556%" height="15" fill="rgb(239,81,33)" fg:x="1131" fg:w="74"/><text x="8.7410%" y="543.50"></text></g><g><title>alloc::alloc::alloc (74 samples, 0.56%)</title><rect x="8.4910%" y="517" width="0.5556%" height="15" fill="rgb(213,120,34)" fg:x="1131" fg:w="74"/><text x="8.7410%" y="527.50"></text></g><g><title>malloc (74 samples, 0.56%)</title><rect x="8.4910%" y="501" width="0.5556%" height="15" fill="rgb(243,49,53)" fg:x="1131" fg:w="74"/><text x="8.7410%" y="511.50"></text></g><g><title>asm_sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="9.0165%" y="485" width="0.0300%" height="15" fill="rgb(247,216,33)" fg:x="1201" fg:w="4"/><text x="9.2665%" y="495.50"></text></g><g><title>sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="9.0165%" y="469" width="0.0300%" height="15" fill="rgb(226,26,14)" fg:x="1201" fg:w="4"/><text x="9.2665%" y="479.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="9.0165%" y="453" width="0.0300%" height="15" fill="rgb(215,49,53)" fg:x="1201" fg:w="4"/><text x="9.2665%" y="463.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="9.0165%" y="437" width="0.0300%" height="15" fill="rgb(245,162,40)" fg:x="1201" fg:w="4"/><text x="9.2665%" y="447.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (118 samples, 0.89%)</title><rect x="8.2207%" y="693" width="0.8859%" height="15" fill="rgb(229,68,17)" fg:x="1095" fg:w="118"/><text x="8.4707%" y="703.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (118 samples, 0.89%)</title><rect x="8.2207%" y="677" width="0.8859%" height="15" fill="rgb(213,182,10)" fg:x="1095" fg:w="118"/><text x="8.4707%" y="687.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (118 samples, 0.89%)</title><rect x="8.2207%" y="661" width="0.8859%" height="15" fill="rgb(245,125,30)" fg:x="1095" fg:w="118"/><text x="8.4707%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (118 samples, 0.89%)</title><rect x="8.2207%" y="645" width="0.8859%" height="15" fill="rgb(232,202,2)" fg:x="1095" fg:w="118"/><text x="8.4707%" y="655.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (118 samples, 0.89%)</title><rect x="8.2207%" y="629" width="0.8859%" height="15" fill="rgb(237,140,51)" fg:x="1095" fg:w="118"/><text x="8.4707%" y="639.50"></text></g><g><title>rutin::connection::Connection::read_u8::_{{closure}} (8 samples, 0.06%)</title><rect x="9.0465%" y="613" width="0.0601%" height="15" fill="rgb(236,157,25)" fg:x="1205" fg:w="8"/><text x="9.2965%" y="623.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (4 samples, 0.03%)</title><rect x="9.0766%" y="597" width="0.0300%" height="15" fill="rgb(219,209,0)" fg:x="1209" fg:w="4"/><text x="9.3266%" y="607.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (4 samples, 0.03%)</title><rect x="9.0766%" y="581" width="0.0300%" height="15" fill="rgb(240,116,54)" fg:x="1209" fg:w="4"/><text x="9.3266%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (4 samples, 0.03%)</title><rect x="9.0766%" y="565" width="0.0300%" height="15" fill="rgb(216,10,36)" fg:x="1209" fg:w="4"/><text x="9.3266%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (119 samples, 0.89%)</title><rect x="8.2207%" y="1525" width="0.8934%" height="15" fill="rgb(222,72,44)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1535.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="1509" width="0.8934%" height="15" fill="rgb(232,159,9)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1519.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (119 samples, 0.89%)</title><rect x="8.2207%" y="1493" width="0.8934%" height="15" fill="rgb(210,39,32)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1503.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (119 samples, 0.89%)</title><rect x="8.2207%" y="1477" width="0.8934%" height="15" fill="rgb(216,194,45)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1487.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (119 samples, 0.89%)</title><rect x="8.2207%" y="1461" width="0.8934%" height="15" fill="rgb(218,18,35)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1471.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (119 samples, 0.89%)</title><rect x="8.2207%" y="1445" width="0.8934%" height="15" fill="rgb(207,83,51)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1455.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (119 samples, 0.89%)</title><rect x="8.2207%" y="1429" width="0.8934%" height="15" fill="rgb(225,63,43)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1439.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (119 samples, 0.89%)</title><rect x="8.2207%" y="1413" width="0.8934%" height="15" fill="rgb(207,57,36)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (119 samples, 0.89%)</title><rect x="8.2207%" y="1397" width="0.8934%" height="15" fill="rgb(216,99,33)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (119 samples, 0.89%)</title><rect x="8.2207%" y="1381" width="0.8934%" height="15" fill="rgb(225,42,16)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1391.50"></text></g><g><title>std::panicking::try (119 samples, 0.89%)</title><rect x="8.2207%" y="1365" width="0.8934%" height="15" fill="rgb(220,201,45)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (119 samples, 0.89%)</title><rect x="8.2207%" y="1349" width="0.8934%" height="15" fill="rgb(225,33,4)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1359.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (119 samples, 0.89%)</title><rect x="8.2207%" y="1333" width="0.8934%" height="15" fill="rgb(224,33,50)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="1317" width="0.8934%" height="15" fill="rgb(246,198,51)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1327.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (119 samples, 0.89%)</title><rect x="8.2207%" y="1301" width="0.8934%" height="15" fill="rgb(205,22,4)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1311.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (119 samples, 0.89%)</title><rect x="8.2207%" y="1285" width="0.8934%" height="15" fill="rgb(206,3,8)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1295.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="1269" width="0.8934%" height="15" fill="rgb(251,23,15)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1279.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (119 samples, 0.89%)</title><rect x="8.2207%" y="1253" width="0.8934%" height="15" fill="rgb(252,88,28)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="1237" width="0.8934%" height="15" fill="rgb(212,127,14)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (119 samples, 0.89%)</title><rect x="8.2207%" y="1221" width="0.8934%" height="15" fill="rgb(247,145,37)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1231.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (119 samples, 0.89%)</title><rect x="8.2207%" y="1205" width="0.8934%" height="15" fill="rgb(209,117,53)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="1189" width="0.8934%" height="15" fill="rgb(212,90,42)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1199.50"></text></g><g><title>tokio::runtime::context::set_scheduler (119 samples, 0.89%)</title><rect x="8.2207%" y="1173" width="0.8934%" height="15" fill="rgb(218,164,37)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (119 samples, 0.89%)</title><rect x="8.2207%" y="1157" width="0.8934%" height="15" fill="rgb(246,65,34)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (119 samples, 0.89%)</title><rect x="8.2207%" y="1141" width="0.8934%" height="15" fill="rgb(231,100,33)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1151.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="1125" width="0.8934%" height="15" fill="rgb(228,126,14)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1135.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (119 samples, 0.89%)</title><rect x="8.2207%" y="1109" width="0.8934%" height="15" fill="rgb(215,173,21)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="1093" width="0.8934%" height="15" fill="rgb(210,6,40)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (119 samples, 0.89%)</title><rect x="8.2207%" y="1077" width="0.8934%" height="15" fill="rgb(212,48,18)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (119 samples, 0.89%)</title><rect x="8.2207%" y="1061" width="0.8934%" height="15" fill="rgb(230,214,11)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1071.50"></text></g><g><title>tokio::runtime::coop::budget (119 samples, 0.89%)</title><rect x="8.2207%" y="1045" width="0.8934%" height="15" fill="rgb(254,105,39)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1055.50"></text></g><g><title>tokio::runtime::coop::with_budget (119 samples, 0.89%)</title><rect x="8.2207%" y="1029" width="0.8934%" height="15" fill="rgb(245,158,5)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="1013" width="0.8934%" height="15" fill="rgb(249,208,11)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1023.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (119 samples, 0.89%)</title><rect x="8.2207%" y="997" width="0.8934%" height="15" fill="rgb(210,39,28)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="1007.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (119 samples, 0.89%)</title><rect x="8.2207%" y="981" width="0.8934%" height="15" fill="rgb(211,56,53)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (119 samples, 0.89%)</title><rect x="8.2207%" y="965" width="0.8934%" height="15" fill="rgb(226,201,30)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (119 samples, 0.89%)</title><rect x="8.2207%" y="949" width="0.8934%" height="15" fill="rgb(239,101,34)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (119 samples, 0.89%)</title><rect x="8.2207%" y="933" width="0.8934%" height="15" fill="rgb(226,209,5)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="943.50"></text></g><g><title>std::panic::catch_unwind (119 samples, 0.89%)</title><rect x="8.2207%" y="917" width="0.8934%" height="15" fill="rgb(250,105,47)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="927.50"></text></g><g><title>std::panicking::try (119 samples, 0.89%)</title><rect x="8.2207%" y="901" width="0.8934%" height="15" fill="rgb(230,72,3)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="911.50"></text></g><g><title>std::panicking::try::do_call (119 samples, 0.89%)</title><rect x="8.2207%" y="885" width="0.8934%" height="15" fill="rgb(232,218,39)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (119 samples, 0.89%)</title><rect x="8.2207%" y="869" width="0.8934%" height="15" fill="rgb(248,166,6)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="853" width="0.8934%" height="15" fill="rgb(247,89,20)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (119 samples, 0.89%)</title><rect x="8.2207%" y="837" width="0.8934%" height="15" fill="rgb(248,130,54)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (119 samples, 0.89%)</title><rect x="8.2207%" y="821" width="0.8934%" height="15" fill="rgb(234,196,4)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="831.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="805" width="0.8934%" height="15" fill="rgb(250,143,31)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="815.50"></text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="789" width="0.8934%" height="15" fill="rgb(211,110,34)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="799.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="773" width="0.8934%" height="15" fill="rgb(215,124,48)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="783.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="757" width="0.8934%" height="15" fill="rgb(216,46,13)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="767.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="741" width="0.8934%" height="15" fill="rgb(205,184,25)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="751.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (119 samples, 0.89%)</title><rect x="8.2207%" y="725" width="0.8934%" height="15" fill="rgb(228,1,10)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="735.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (119 samples, 0.89%)</title><rect x="8.2207%" y="709" width="0.8934%" height="15" fill="rgb(213,116,27)" fg:x="1095" fg:w="119"/><text x="8.4707%" y="719.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="9.3468%" y="533" width="0.0225%" height="15" fill="rgb(241,95,50)" fg:x="1245" fg:w="3"/><text x="9.5968%" y="543.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="9.3468%" y="517" width="0.0225%" height="15" fill="rgb(238,48,32)" fg:x="1245" fg:w="3"/><text x="9.5968%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt;&gt; (36 samples, 0.27%)</title><rect x="9.1216%" y="645" width="0.2703%" height="15" fill="rgb(235,113,49)" fg:x="1215" fg:w="36"/><text x="9.3716%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;rutin::frame::Frame,rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt; (36 samples, 0.27%)</title><rect x="9.1216%" y="629" width="0.2703%" height="15" fill="rgb(205,127,43)" fg:x="1215" fg:w="36"/><text x="9.3716%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.27%)</title><rect x="9.1216%" y="613" width="0.2703%" height="15" fill="rgb(250,162,2)" fg:x="1215" fg:w="36"/><text x="9.3716%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.27%)</title><rect x="9.1216%" y="597" width="0.2703%" height="15" fill="rgb(220,13,41)" fg:x="1215" fg:w="36"/><text x="9.3716%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.27%)</title><rect x="9.1216%" y="581" width="0.2703%" height="15" fill="rgb(249,221,25)" fg:x="1215" fg:w="36"/><text x="9.3716%" y="591.50"></text></g><g><title>cfree (36 samples, 0.27%)</title><rect x="9.1216%" y="565" width="0.2703%" height="15" fill="rgb(215,208,19)" fg:x="1215" fg:w="36"/><text x="9.3716%" y="575.50"></text></g><g><title>[libc.so.6] (36 samples, 0.27%)</title><rect x="9.1216%" y="549" width="0.2703%" height="15" fill="rgb(236,175,2)" fg:x="1215" fg:w="36"/><text x="9.3716%" y="559.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="9.3694%" y="533" width="0.0225%" height="15" fill="rgb(241,52,2)" fg:x="1248" fg:w="3"/><text x="9.6194%" y="543.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="9.3694%" y="517" width="0.0225%" height="15" fill="rgb(248,140,14)" fg:x="1248" fg:w="3"/><text x="9.6194%" y="527.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="9.3694%" y="501" width="0.0225%" height="15" fill="rgb(253,22,42)" fg:x="1248" fg:w="3"/><text x="9.6194%" y="511.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="9.3694%" y="485" width="0.0225%" height="15" fill="rgb(234,61,47)" fg:x="1248" fg:w="3"/><text x="9.6194%" y="495.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="9.3769%" y="469" width="0.0150%" height="15" fill="rgb(208,226,15)" fg:x="1249" fg:w="2"/><text x="9.6269%" y="479.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="9.3769%" y="453" width="0.0150%" height="15" fill="rgb(217,221,4)" fg:x="1249" fg:w="2"/><text x="9.6269%" y="463.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="9.3769%" y="437" width="0.0150%" height="15" fill="rgb(212,174,34)" fg:x="1249" fg:w="2"/><text x="9.6269%" y="447.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="9.3769%" y="421" width="0.0150%" height="15" fill="rgb(253,83,4)" fg:x="1249" fg:w="2"/><text x="9.6269%" y="431.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="9.3769%" y="405" width="0.0150%" height="15" fill="rgb(250,195,49)" fg:x="1249" fg:w="2"/><text x="9.6269%" y="415.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="9.3769%" y="389" width="0.0150%" height="15" fill="rgb(241,192,25)" fg:x="1249" fg:w="2"/><text x="9.6269%" y="399.50"></text></g><g><title>atoi::atoi (4 samples, 0.03%)</title><rect x="9.6547%" y="629" width="0.0300%" height="15" fill="rgb(208,124,10)" fg:x="1286" fg:w="4"/><text x="9.9047%" y="639.50"></text></g><g><title>&lt;I as atoi::FromRadix10SignedChecked&gt;::from_radix_10_signed_checked (4 samples, 0.03%)</title><rect x="9.6547%" y="613" width="0.0300%" height="15" fill="rgb(222,33,0)" fg:x="1286" fg:w="4"/><text x="9.9047%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (2 samples, 0.02%)</title><rect x="9.6922%" y="597" width="0.0150%" height="15" fill="rgb(234,209,28)" fg:x="1291" fg:w="2"/><text x="9.9422%" y="607.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (69 samples, 0.52%)</title><rect x="9.3919%" y="645" width="0.5180%" height="15" fill="rgb(224,11,23)" fg:x="1251" fg:w="69"/><text x="9.6419%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (30 samples, 0.23%)</title><rect x="9.6847%" y="629" width="0.2252%" height="15" fill="rgb(232,99,1)" fg:x="1290" fg:w="30"/><text x="9.9347%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (30 samples, 0.23%)</title><rect x="9.6847%" y="613" width="0.2252%" height="15" fill="rgb(237,95,45)" fg:x="1290" fg:w="30"/><text x="9.9347%" y="623.50"></text></g><g><title>bytes::bytes_mut::release_shared (27 samples, 0.20%)</title><rect x="9.7072%" y="597" width="0.2027%" height="15" fill="rgb(208,109,11)" fg:x="1293" fg:w="27"/><text x="9.9572%" y="607.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="9.8949%" y="581" width="0.0150%" height="15" fill="rgb(216,190,48)" fg:x="1318" fg:w="2"/><text x="10.1449%" y="591.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="9.8949%" y="565" width="0.0150%" height="15" fill="rgb(251,171,36)" fg:x="1318" fg:w="2"/><text x="10.1449%" y="575.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="9.8949%" y="549" width="0.0150%" height="15" fill="rgb(230,62,22)" fg:x="1318" fg:w="2"/><text x="10.1449%" y="559.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="9.8949%" y="533" width="0.0150%" height="15" fill="rgb(225,114,35)" fg:x="1318" fg:w="2"/><text x="10.1449%" y="543.50"></text></g><g><title>[libc.so.6] (6 samples, 0.05%)</title><rect x="10.2553%" y="501" width="0.0450%" height="15" fill="rgb(215,118,42)" fg:x="1366" fg:w="6"/><text x="10.5053%" y="511.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame (54 samples, 0.41%)</title><rect x="9.9099%" y="645" width="0.4054%" height="15" fill="rgb(243,119,21)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (54 samples, 0.41%)</title><rect x="9.9099%" y="629" width="0.4054%" height="15" fill="rgb(252,177,53)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (54 samples, 0.41%)</title><rect x="9.9099%" y="613" width="0.4054%" height="15" fill="rgb(237,209,29)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (54 samples, 0.41%)</title><rect x="9.9099%" y="597" width="0.4054%" height="15" fill="rgb(212,65,23)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.41%)</title><rect x="9.9099%" y="581" width="0.4054%" height="15" fill="rgb(230,222,46)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.41%)</title><rect x="9.9099%" y="565" width="0.4054%" height="15" fill="rgb(215,135,32)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="575.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.41%)</title><rect x="9.9099%" y="549" width="0.4054%" height="15" fill="rgb(246,101,22)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="559.50"></text></g><g><title>malloc (54 samples, 0.41%)</title><rect x="9.9099%" y="533" width="0.4054%" height="15" fill="rgb(206,107,13)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="543.50"></text></g><g><title>[libc.so.6] (54 samples, 0.41%)</title><rect x="9.9099%" y="517" width="0.4054%" height="15" fill="rgb(250,100,44)" fg:x="1320" fg:w="54"/><text x="10.1599%" y="527.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="10.3003%" y="501" width="0.0150%" height="15" fill="rgb(231,147,38)" fg:x="1372" fg:w="2"/><text x="10.5503%" y="511.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="10.3003%" y="485" width="0.0150%" height="15" fill="rgb(229,8,40)" fg:x="1372" fg:w="2"/><text x="10.5503%" y="495.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="10.3003%" y="469" width="0.0150%" height="15" fill="rgb(221,135,30)" fg:x="1372" fg:w="2"/><text x="10.5503%" y="479.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="10.3003%" y="453" width="0.0150%" height="15" fill="rgb(249,193,18)" fg:x="1372" fg:w="2"/><text x="10.5503%" y="463.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (164 samples, 1.23%)</title><rect x="9.1141%" y="1525" width="1.2312%" height="15" fill="rgb(209,133,39)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1535.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (164 samples, 1.23%)</title><rect x="9.1141%" y="1509" width="1.2312%" height="15" fill="rgb(232,100,14)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1519.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (164 samples, 1.23%)</title><rect x="9.1141%" y="1493" width="1.2312%" height="15" fill="rgb(224,185,1)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1503.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="1477" width="1.2312%" height="15" fill="rgb(223,139,8)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1487.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="1461" width="1.2312%" height="15" fill="rgb(232,213,38)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (164 samples, 1.23%)</title><rect x="9.1141%" y="1445" width="1.2312%" height="15" fill="rgb(207,94,22)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1455.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (164 samples, 1.23%)</title><rect x="9.1141%" y="1429" width="1.2312%" height="15" fill="rgb(219,183,54)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (164 samples, 1.23%)</title><rect x="9.1141%" y="1413" width="1.2312%" height="15" fill="rgb(216,185,54)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1423.50"></text></g><g><title>std::panicking::try (164 samples, 1.23%)</title><rect x="9.1141%" y="1397" width="1.2312%" height="15" fill="rgb(254,217,39)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (164 samples, 1.23%)</title><rect x="9.1141%" y="1381" width="1.2312%" height="15" fill="rgb(240,178,23)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (164 samples, 1.23%)</title><rect x="9.1141%" y="1365" width="1.2312%" height="15" fill="rgb(218,11,47)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1375.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="1349" width="1.2312%" height="15" fill="rgb(218,51,51)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="1333" width="1.2312%" height="15" fill="rgb(238,126,27)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1343.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (164 samples, 1.23%)</title><rect x="9.1141%" y="1317" width="1.2312%" height="15" fill="rgb(249,202,22)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1327.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="1301" width="1.2312%" height="15" fill="rgb(254,195,49)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1311.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="1285" width="1.2312%" height="15" fill="rgb(208,123,14)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="1269" width="1.2312%" height="15" fill="rgb(224,200,8)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (164 samples, 1.23%)</title><rect x="9.1141%" y="1253" width="1.2312%" height="15" fill="rgb(217,61,36)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1263.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (164 samples, 1.23%)</title><rect x="9.1141%" y="1237" width="1.2312%" height="15" fill="rgb(206,35,45)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="1221" width="1.2312%" height="15" fill="rgb(217,65,33)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1231.50"></text></g><g><title>tokio::runtime::context::set_scheduler (164 samples, 1.23%)</title><rect x="9.1141%" y="1205" width="1.2312%" height="15" fill="rgb(222,158,48)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (164 samples, 1.23%)</title><rect x="9.1141%" y="1189" width="1.2312%" height="15" fill="rgb(254,2,54)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (164 samples, 1.23%)</title><rect x="9.1141%" y="1173" width="1.2312%" height="15" fill="rgb(250,143,38)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1183.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="1157" width="1.2312%" height="15" fill="rgb(248,25,0)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1167.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (164 samples, 1.23%)</title><rect x="9.1141%" y="1141" width="1.2312%" height="15" fill="rgb(206,152,27)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="1125" width="1.2312%" height="15" fill="rgb(240,77,30)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (164 samples, 1.23%)</title><rect x="9.1141%" y="1109" width="1.2312%" height="15" fill="rgb(231,5,3)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (164 samples, 1.23%)</title><rect x="9.1141%" y="1093" width="1.2312%" height="15" fill="rgb(207,226,32)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1103.50"></text></g><g><title>tokio::runtime::coop::budget (164 samples, 1.23%)</title><rect x="9.1141%" y="1077" width="1.2312%" height="15" fill="rgb(222,207,47)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1087.50"></text></g><g><title>tokio::runtime::coop::with_budget (164 samples, 1.23%)</title><rect x="9.1141%" y="1061" width="1.2312%" height="15" fill="rgb(229,115,45)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="1045" width="1.2312%" height="15" fill="rgb(224,191,6)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1055.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (164 samples, 1.23%)</title><rect x="9.1141%" y="1029" width="1.2312%" height="15" fill="rgb(230,227,24)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1039.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="1013" width="1.2312%" height="15" fill="rgb(228,80,19)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="997" width="1.2312%" height="15" fill="rgb(247,229,0)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (164 samples, 1.23%)</title><rect x="9.1141%" y="981" width="1.2312%" height="15" fill="rgb(237,194,15)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (164 samples, 1.23%)</title><rect x="9.1141%" y="965" width="1.2312%" height="15" fill="rgb(219,203,20)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="975.50"></text></g><g><title>std::panic::catch_unwind (164 samples, 1.23%)</title><rect x="9.1141%" y="949" width="1.2312%" height="15" fill="rgb(234,128,8)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="959.50"></text></g><g><title>std::panicking::try (164 samples, 1.23%)</title><rect x="9.1141%" y="933" width="1.2312%" height="15" fill="rgb(248,202,8)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="943.50"></text></g><g><title>std::panicking::try::do_call (164 samples, 1.23%)</title><rect x="9.1141%" y="917" width="1.2312%" height="15" fill="rgb(206,104,37)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="927.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (164 samples, 1.23%)</title><rect x="9.1141%" y="901" width="1.2312%" height="15" fill="rgb(223,8,27)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="885" width="1.2312%" height="15" fill="rgb(216,217,28)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="869" width="1.2312%" height="15" fill="rgb(249,199,1)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (164 samples, 1.23%)</title><rect x="9.1141%" y="853" width="1.2312%" height="15" fill="rgb(240,85,17)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="837" width="1.2312%" height="15" fill="rgb(206,108,45)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="847.50"></text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="821" width="1.2312%" height="15" fill="rgb(245,210,41)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="831.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="805" width="1.2312%" height="15" fill="rgb(206,13,37)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="815.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="789" width="1.2312%" height="15" fill="rgb(250,61,18)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="799.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="773" width="1.2312%" height="15" fill="rgb(235,172,48)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="783.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="757" width="1.2312%" height="15" fill="rgb(249,201,17)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="767.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="741" width="1.2312%" height="15" fill="rgb(219,208,6)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="751.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="725" width="1.2312%" height="15" fill="rgb(248,31,23)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="735.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="709" width="1.2312%" height="15" fill="rgb(245,15,42)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="719.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="693" width="1.2312%" height="15" fill="rgb(222,217,39)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (164 samples, 1.23%)</title><rect x="9.1141%" y="677" width="1.2312%" height="15" fill="rgb(210,219,27)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="687.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (164 samples, 1.23%)</title><rect x="9.1141%" y="661" width="1.2312%" height="15" fill="rgb(252,166,36)" fg:x="1214" fg:w="164"/><text x="9.3641%" y="671.50"></text></g><g><title>rutin::connection::Connection::read_u8::_{{closure}} (4 samples, 0.03%)</title><rect x="10.3153%" y="645" width="0.0300%" height="15" fill="rgb(245,132,34)" fg:x="1374" fg:w="4"/><text x="10.5653%" y="655.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (4 samples, 0.03%)</title><rect x="10.3153%" y="629" width="0.0300%" height="15" fill="rgb(236,54,3)" fg:x="1374" fg:w="4"/><text x="10.5653%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (4 samples, 0.03%)</title><rect x="10.3153%" y="613" width="0.0300%" height="15" fill="rgb(241,173,43)" fg:x="1374" fg:w="4"/><text x="10.5653%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (4 samples, 0.03%)</title><rect x="10.3153%" y="597" width="0.0300%" height="15" fill="rgb(215,190,9)" fg:x="1374" fg:w="4"/><text x="10.5653%" y="607.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (5 samples, 0.04%)</title><rect x="10.3453%" y="901" width="0.0375%" height="15" fill="rgb(242,101,16)" fg:x="1378" fg:w="5"/><text x="10.5953%" y="911.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (5 samples, 0.04%)</title><rect x="10.3453%" y="885" width="0.0375%" height="15" fill="rgb(223,190,21)" fg:x="1378" fg:w="5"/><text x="10.5953%" y="895.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.05%)</title><rect x="10.3453%" y="965" width="0.0526%" height="15" fill="rgb(215,228,25)" fg:x="1378" fg:w="7"/><text x="10.5953%" y="975.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (7 samples, 0.05%)</title><rect x="10.3453%" y="949" width="0.0526%" height="15" fill="rgb(225,36,22)" fg:x="1378" fg:w="7"/><text x="10.5953%" y="959.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (7 samples, 0.05%)</title><rect x="10.3453%" y="933" width="0.0526%" height="15" fill="rgb(251,106,46)" fg:x="1378" fg:w="7"/><text x="10.5953%" y="943.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}} (7 samples, 0.05%)</title><rect x="10.3453%" y="917" width="0.0526%" height="15" fill="rgb(208,90,1)" fg:x="1378" fg:w="7"/><text x="10.5953%" y="927.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.02%)</title><rect x="10.3829%" y="901" width="0.0150%" height="15" fill="rgb(243,10,4)" fg:x="1383" fg:w="2"/><text x="10.6329%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="10.5556%" y="693" width="0.0225%" height="15" fill="rgb(212,137,27)" fg:x="1406" fg:w="3"/><text x="10.8056%" y="703.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (32 samples, 0.24%)</title><rect x="10.3453%" y="1077" width="0.2402%" height="15" fill="rgb(231,220,49)" fg:x="1378" fg:w="32"/><text x="10.5953%" y="1087.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="10.3453%" y="1061" width="0.2402%" height="15" fill="rgb(237,96,20)" fg:x="1378" fg:w="32"/><text x="10.5953%" y="1071.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (32 samples, 0.24%)</title><rect x="10.3453%" y="1045" width="0.2402%" height="15" fill="rgb(239,229,30)" fg:x="1378" fg:w="32"/><text x="10.5953%" y="1055.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="10.3453%" y="1029" width="0.2402%" height="15" fill="rgb(219,65,33)" fg:x="1378" fg:w="32"/><text x="10.5953%" y="1039.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="10.3453%" y="1013" width="0.2402%" height="15" fill="rgb(243,134,7)" fg:x="1378" fg:w="32"/><text x="10.5953%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (32 samples, 0.24%)</title><rect x="10.3453%" y="997" width="0.2402%" height="15" fill="rgb(216,177,54)" fg:x="1378" fg:w="32"/><text x="10.5953%" y="1007.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (32 samples, 0.24%)</title><rect x="10.3453%" y="981" width="0.2402%" height="15" fill="rgb(211,160,20)" fg:x="1378" fg:w="32"/><text x="10.5953%" y="991.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (25 samples, 0.19%)</title><rect x="10.3979%" y="965" width="0.1877%" height="15" fill="rgb(239,85,39)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="975.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}} (25 samples, 0.19%)</title><rect x="10.3979%" y="949" width="0.1877%" height="15" fill="rgb(232,125,22)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="959.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (25 samples, 0.19%)</title><rect x="10.3979%" y="933" width="0.1877%" height="15" fill="rgb(244,57,34)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="943.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (25 samples, 0.19%)</title><rect x="10.3979%" y="917" width="0.1877%" height="15" fill="rgb(214,203,32)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="927.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (25 samples, 0.19%)</title><rect x="10.3979%" y="901" width="0.1877%" height="15" fill="rgb(207,58,43)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="911.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (25 samples, 0.19%)</title><rect x="10.3979%" y="885" width="0.1877%" height="15" fill="rgb(215,193,15)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (25 samples, 0.19%)</title><rect x="10.3979%" y="869" width="0.1877%" height="15" fill="rgb(232,15,44)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25 samples, 0.19%)</title><rect x="10.3979%" y="853" width="0.1877%" height="15" fill="rgb(212,3,48)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.19%)</title><rect x="10.3979%" y="837" width="0.1877%" height="15" fill="rgb(218,128,7)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.19%)</title><rect x="10.3979%" y="821" width="0.1877%" height="15" fill="rgb(226,216,39)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.19%)</title><rect x="10.3979%" y="805" width="0.1877%" height="15" fill="rgb(243,47,51)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.19%)</title><rect x="10.3979%" y="789" width="0.1877%" height="15" fill="rgb(241,183,40)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.19%)</title><rect x="10.3979%" y="773" width="0.1877%" height="15" fill="rgb(231,217,32)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="783.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.19%)</title><rect x="10.3979%" y="757" width="0.1877%" height="15" fill="rgb(229,61,38)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="767.50"></text></g><g><title>malloc (25 samples, 0.19%)</title><rect x="10.3979%" y="741" width="0.1877%" height="15" fill="rgb(225,210,5)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="751.50"></text></g><g><title>[libc.so.6] (25 samples, 0.19%)</title><rect x="10.3979%" y="725" width="0.1877%" height="15" fill="rgb(231,79,45)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="735.50"></text></g><g><title>[libc.so.6] (25 samples, 0.19%)</title><rect x="10.3979%" y="709" width="0.1877%" height="15" fill="rgb(224,100,7)" fg:x="1385" fg:w="25"/><text x="10.6479%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.14%)</title><rect x="10.8033%" y="949" width="0.1426%" height="15" fill="rgb(241,198,18)" fg:x="1439" fg:w="19"/><text x="11.0533%" y="959.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="10.9459%" y="949" width="0.0225%" height="15" fill="rgb(252,97,53)" fg:x="1458" fg:w="3"/><text x="11.1959%" y="959.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="10.9459%" y="933" width="0.0225%" height="15" fill="rgb(220,88,7)" fg:x="1458" fg:w="3"/><text x="11.1959%" y="943.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="10.9459%" y="917" width="0.0225%" height="15" fill="rgb(213,176,14)" fg:x="1458" fg:w="3"/><text x="11.1959%" y="927.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="10.9459%" y="901" width="0.0225%" height="15" fill="rgb(246,73,7)" fg:x="1458" fg:w="3"/><text x="11.1959%" y="911.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="10.9535%" y="885" width="0.0150%" height="15" fill="rgb(245,64,36)" fg:x="1459" fg:w="2"/><text x="11.2035%" y="895.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="10.9535%" y="869" width="0.0150%" height="15" fill="rgb(245,80,10)" fg:x="1459" fg:w="2"/><text x="11.2035%" y="879.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="10.9535%" y="853" width="0.0150%" height="15" fill="rgb(232,107,50)" fg:x="1459" fg:w="2"/><text x="11.2035%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (8 samples, 0.06%)</title><rect x="10.9685%" y="949" width="0.0601%" height="15" fill="rgb(253,3,0)" fg:x="1461" fg:w="8"/><text x="11.2185%" y="959.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="11.9520%" y="565" width="0.0150%" height="15" fill="rgb(212,99,53)" fg:x="1592" fg:w="2"/><text x="12.2020%" y="575.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="11.9520%" y="549" width="0.0150%" height="15" fill="rgb(249,111,54)" fg:x="1592" fg:w="2"/><text x="12.2020%" y="559.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="11.9520%" y="533" width="0.0150%" height="15" fill="rgb(249,55,30)" fg:x="1592" fg:w="2"/><text x="12.2020%" y="543.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="11.9520%" y="517" width="0.0150%" height="15" fill="rgb(237,47,42)" fg:x="1592" fg:w="2"/><text x="12.2020%" y="527.50"></text></g><g><title>asm_sysvec_hyperv_callback (6 samples, 0.05%)</title><rect x="11.9294%" y="757" width="0.0450%" height="15" fill="rgb(211,20,18)" fg:x="1589" fg:w="6"/><text x="12.1794%" y="767.50"></text></g><g><title>sysvec_hyperv_callback (6 samples, 0.05%)</title><rect x="11.9294%" y="741" width="0.0450%" height="15" fill="rgb(231,203,46)" fg:x="1589" fg:w="6"/><text x="12.1794%" y="751.50"></text></g><g><title>irq_exit_rcu (6 samples, 0.05%)</title><rect x="11.9294%" y="725" width="0.0450%" height="15" fill="rgb(237,142,3)" fg:x="1589" fg:w="6"/><text x="12.1794%" y="735.50"></text></g><g><title>__softirqentry_text_start (6 samples, 0.05%)</title><rect x="11.9294%" y="709" width="0.0450%" height="15" fill="rgb(241,107,1)" fg:x="1589" fg:w="6"/><text x="12.1794%" y="719.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="11.9520%" y="693" width="0.0225%" height="15" fill="rgb(229,83,13)" fg:x="1592" fg:w="3"/><text x="12.2020%" y="703.50"></text></g><g><title>__napi_poll (3 samples, 0.02%)</title><rect x="11.9520%" y="677" width="0.0225%" height="15" fill="rgb(241,91,40)" fg:x="1592" fg:w="3"/><text x="12.2020%" y="687.50"></text></g><g><title>netvsc_poll (3 samples, 0.02%)</title><rect x="11.9520%" y="661" width="0.0225%" height="15" fill="rgb(225,3,45)" fg:x="1592" fg:w="3"/><text x="12.2020%" y="671.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="11.9520%" y="645" width="0.0225%" height="15" fill="rgb(244,223,14)" fg:x="1592" fg:w="3"/><text x="12.2020%" y="655.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="11.9520%" y="629" width="0.0225%" height="15" fill="rgb(224,124,37)" fg:x="1592" fg:w="3"/><text x="12.2020%" y="639.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="11.9520%" y="613" width="0.0225%" height="15" fill="rgb(251,171,30)" fg:x="1592" fg:w="3"/><text x="12.2020%" y="623.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="11.9520%" y="597" width="0.0225%" height="15" fill="rgb(236,46,54)" fg:x="1592" fg:w="3"/><text x="12.2020%" y="607.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="11.9520%" y="581" width="0.0225%" height="15" fill="rgb(245,213,5)" fg:x="1592" fg:w="3"/><text x="12.2020%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.98%)</title><rect x="11.0285%" y="917" width="0.9760%" height="15" fill="rgb(230,144,27)" fg:x="1469" fg:w="130"/><text x="11.2785%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rutin::frame::Frame]&gt; (129 samples, 0.97%)</title><rect x="11.0360%" y="901" width="0.9685%" height="15" fill="rgb(220,86,6)" fg:x="1470" fg:w="129"/><text x="11.2860%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::frame::Frame&gt; (121 samples, 0.91%)</title><rect x="11.0961%" y="885" width="0.9084%" height="15" fill="rgb(240,20,13)" fg:x="1478" fg:w="121"/><text x="11.3461%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::frame::Bulk&gt; (111 samples, 0.83%)</title><rect x="11.1712%" y="869" width="0.8333%" height="15" fill="rgb(217,89,34)" fg:x="1488" fg:w="111"/><text x="11.4212%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (98 samples, 0.74%)</title><rect x="11.2688%" y="853" width="0.7357%" height="15" fill="rgb(229,13,5)" fg:x="1501" fg:w="98"/><text x="11.5188%" y="863.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (98 samples, 0.74%)</title><rect x="11.2688%" y="837" width="0.7357%" height="15" fill="rgb(244,67,35)" fg:x="1501" fg:w="98"/><text x="11.5188%" y="847.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (96 samples, 0.72%)</title><rect x="11.2838%" y="821" width="0.7207%" height="15" fill="rgb(221,40,2)" fg:x="1503" fg:w="96"/><text x="11.5338%" y="831.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (95 samples, 0.71%)</title><rect x="11.2913%" y="805" width="0.7132%" height="15" fill="rgb(237,157,21)" fg:x="1504" fg:w="95"/><text x="11.5413%" y="815.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (95 samples, 0.71%)</title><rect x="11.2913%" y="789" width="0.7132%" height="15" fill="rgb(222,94,11)" fg:x="1504" fg:w="95"/><text x="11.5413%" y="799.50"></text></g><g><title>bytes::bytes_mut::release_shared (70 samples, 0.53%)</title><rect x="11.4790%" y="773" width="0.5255%" height="15" fill="rgb(249,113,6)" fg:x="1529" fg:w="70"/><text x="11.7290%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.03%)</title><rect x="11.9745%" y="757" width="0.0300%" height="15" fill="rgb(238,137,36)" fg:x="1595" fg:w="4"/><text x="12.2245%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.03%)</title><rect x="11.9745%" y="741" width="0.0300%" height="15" fill="rgb(210,102,26)" fg:x="1595" fg:w="4"/><text x="12.2245%" y="751.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="12.0345%" y="853" width="0.0150%" height="15" fill="rgb(218,30,30)" fg:x="1603" fg:w="2"/><text x="12.2845%" y="863.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="12.0345%" y="837" width="0.0150%" height="15" fill="rgb(214,67,26)" fg:x="1603" fg:w="2"/><text x="12.2845%" y="847.50"></text></g><g><title>__rust_dealloc (6 samples, 0.05%)</title><rect x="12.0495%" y="853" width="0.0450%" height="15" fill="rgb(251,9,53)" fg:x="1605" fg:w="6"/><text x="12.2995%" y="863.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="12.2147%" y="837" width="0.0150%" height="15" fill="rgb(228,204,25)" fg:x="1627" fg:w="2"/><text x="12.4647%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::frame::Bulks&gt; (161 samples, 1.21%)</title><rect x="11.0285%" y="949" width="1.2087%" height="15" fill="rgb(207,153,8)" fg:x="1469" fg:w="161"/><text x="11.2785%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rutin::frame::Frame&gt;&gt; (161 samples, 1.21%)</title><rect x="11.0285%" y="933" width="1.2087%" height="15" fill="rgb(242,9,16)" fg:x="1469" fg:w="161"/><text x="11.2785%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rutin::frame::Frame&gt;&gt; (31 samples, 0.23%)</title><rect x="12.0045%" y="917" width="0.2327%" height="15" fill="rgb(217,211,10)" fg:x="1599" fg:w="31"/><text x="12.2545%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.23%)</title><rect x="12.0045%" y="901" width="0.2327%" height="15" fill="rgb(219,228,52)" fg:x="1599" fg:w="31"/><text x="12.2545%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.23%)</title><rect x="12.0120%" y="885" width="0.2252%" height="15" fill="rgb(231,92,29)" fg:x="1600" fg:w="30"/><text x="12.2620%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.23%)</title><rect x="12.0120%" y="869" width="0.2252%" height="15" fill="rgb(232,8,23)" fg:x="1600" fg:w="30"/><text x="12.2620%" y="879.50"></text></g><g><title>cfree (19 samples, 0.14%)</title><rect x="12.0946%" y="853" width="0.1426%" height="15" fill="rgb(216,211,34)" fg:x="1611" fg:w="19"/><text x="12.3446%" y="863.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="12.6802%" y="933" width="0.0150%" height="15" fill="rgb(236,151,0)" fg:x="1689" fg:w="2"/><text x="12.9302%" y="943.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="12.6802%" y="917" width="0.0150%" height="15" fill="rgb(209,168,3)" fg:x="1689" fg:w="2"/><text x="12.9302%" y="927.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="12.6802%" y="901" width="0.0150%" height="15" fill="rgb(208,129,28)" fg:x="1689" fg:w="2"/><text x="12.9302%" y="911.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="12.6802%" y="885" width="0.0150%" height="15" fill="rgb(229,78,22)" fg:x="1689" fg:w="2"/><text x="12.9302%" y="895.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="12.6802%" y="869" width="0.0150%" height="15" fill="rgb(228,187,13)" fg:x="1689" fg:w="2"/><text x="12.9302%" y="879.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="12.6802%" y="853" width="0.0150%" height="15" fill="rgb(240,119,24)" fg:x="1689" fg:w="2"/><text x="12.9302%" y="863.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="12.6802%" y="837" width="0.0150%" height="15" fill="rgb(209,194,42)" fg:x="1689" fg:w="2"/><text x="12.9302%" y="847.50"></text></g><g><title>bytes::bytes::Bytes::with_vtable (5 samples, 0.04%)</title><rect x="12.7628%" y="885" width="0.0375%" height="15" fill="rgb(247,200,46)" fg:x="1700" fg:w="5"/><text x="13.0128%" y="895.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="13.4234%" y="869" width="0.0225%" height="15" fill="rgb(218,76,16)" fg:x="1788" fg:w="3"/><text x="13.6734%" y="879.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="13.4234%" y="853" width="0.0225%" height="15" fill="rgb(225,21,48)" fg:x="1788" fg:w="3"/><text x="13.6734%" y="863.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="13.4234%" y="837" width="0.0225%" height="15" fill="rgb(239,223,50)" fg:x="1788" fg:w="3"/><text x="13.6734%" y="847.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="13.4234%" y="821" width="0.0225%" height="15" fill="rgb(244,45,21)" fg:x="1788" fg:w="3"/><text x="13.6734%" y="831.50"></text></g><g><title>bytes::bytes_mut::increment_shared (98 samples, 0.74%)</title><rect x="12.8003%" y="885" width="0.7357%" height="15" fill="rgb(232,33,43)" fg:x="1705" fg:w="98"/><text x="13.0503%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.09%)</title><rect x="13.4459%" y="869" width="0.0901%" height="15" fill="rgb(209,8,3)" fg:x="1791" fg:w="12"/><text x="13.6959%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.09%)</title><rect x="13.4459%" y="853" width="0.0901%" height="15" fill="rgb(214,25,53)" fg:x="1791" fg:w="12"/><text x="13.6959%" y="863.50"></text></g><g><title>rutin::frame::Bulks::pop_front (195 samples, 1.46%)</title><rect x="12.2372%" y="949" width="1.4640%" height="15" fill="rgb(254,186,54)" fg:x="1630" fg:w="195"/><text x="12.4872%" y="959.50"></text></g><g><title>rutin::frame::Bulk::to_bytes (134 samples, 1.01%)</title><rect x="12.6952%" y="933" width="1.0060%" height="15" fill="rgb(208,174,49)" fg:x="1691" fg:w="134"/><text x="12.9452%" y="943.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (129 samples, 0.97%)</title><rect x="12.7327%" y="917" width="0.9685%" height="15" fill="rgb(233,191,51)" fg:x="1696" fg:w="129"/><text x="12.9827%" y="927.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (125 samples, 0.94%)</title><rect x="12.7628%" y="901" width="0.9384%" height="15" fill="rgb(222,134,10)" fg:x="1700" fg:w="125"/><text x="13.0128%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (22 samples, 0.17%)</title><rect x="13.5360%" y="885" width="0.1652%" height="15" fill="rgb(230,226,20)" fg:x="1803" fg:w="22"/><text x="13.7860%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.17%)</title><rect x="13.5360%" y="869" width="0.1652%" height="15" fill="rgb(251,111,25)" fg:x="1803" fg:w="22"/><text x="13.7860%" y="879.50"></text></g><g><title>tokio::runtime::context::set_scheduler (454 samples, 3.41%)</title><rect x="10.3453%" y="1525" width="3.4084%" height="15" fill="rgb(224,40,46)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1535.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (454 samples, 3.41%)</title><rect x="10.3453%" y="1509" width="3.4084%" height="15" fill="rgb(236,108,47)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1519.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (454 samples, 3.41%)</title><rect x="10.3453%" y="1493" width="3.4084%" height="15" fill="rgb(234,93,0)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1503.50">std..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1477" width="3.4084%" height="15" fill="rgb(224,213,32)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1487.50">tok..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (454 samples, 3.41%)</title><rect x="10.3453%" y="1461" width="3.4084%" height="15" fill="rgb(251,11,48)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1471.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1445" width="3.4084%" height="15" fill="rgb(236,173,5)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1455.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (454 samples, 3.41%)</title><rect x="10.3453%" y="1429" width="3.4084%" height="15" fill="rgb(230,95,12)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1439.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (454 samples, 3.41%)</title><rect x="10.3453%" y="1413" width="3.4084%" height="15" fill="rgb(232,209,1)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1423.50">tok..</text></g><g><title>tokio::runtime::coop::budget (454 samples, 3.41%)</title><rect x="10.3453%" y="1397" width="3.4084%" height="15" fill="rgb(232,6,1)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1407.50">tok..</text></g><g><title>tokio::runtime::coop::with_budget (454 samples, 3.41%)</title><rect x="10.3453%" y="1381" width="3.4084%" height="15" fill="rgb(210,224,50)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1391.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1365" width="3.4084%" height="15" fill="rgb(228,127,35)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1375.50">tok..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (454 samples, 3.41%)</title><rect x="10.3453%" y="1349" width="3.4084%" height="15" fill="rgb(245,102,45)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1359.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (454 samples, 3.41%)</title><rect x="10.3453%" y="1333" width="3.4084%" height="15" fill="rgb(214,1,49)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1343.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (454 samples, 3.41%)</title><rect x="10.3453%" y="1317" width="3.4084%" height="15" fill="rgb(226,163,40)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1327.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (454 samples, 3.41%)</title><rect x="10.3453%" y="1301" width="3.4084%" height="15" fill="rgb(239,212,28)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1311.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (454 samples, 3.41%)</title><rect x="10.3453%" y="1285" width="3.4084%" height="15" fill="rgb(220,20,13)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1295.50">tok..</text></g><g><title>std::panic::catch_unwind (454 samples, 3.41%)</title><rect x="10.3453%" y="1269" width="3.4084%" height="15" fill="rgb(210,164,35)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1279.50">std..</text></g><g><title>std::panicking::try (454 samples, 3.41%)</title><rect x="10.3453%" y="1253" width="3.4084%" height="15" fill="rgb(248,109,41)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1263.50">std..</text></g><g><title>std::panicking::try::do_call (454 samples, 3.41%)</title><rect x="10.3453%" y="1237" width="3.4084%" height="15" fill="rgb(238,23,50)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1247.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (454 samples, 3.41%)</title><rect x="10.3453%" y="1221" width="3.4084%" height="15" fill="rgb(211,48,49)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1231.50">&lt;co..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1205" width="3.4084%" height="15" fill="rgb(223,36,21)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1215.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (454 samples, 3.41%)</title><rect x="10.3453%" y="1189" width="3.4084%" height="15" fill="rgb(207,123,46)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1199.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (454 samples, 3.41%)</title><rect x="10.3453%" y="1173" width="3.4084%" height="15" fill="rgb(240,218,32)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1183.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1157" width="3.4084%" height="15" fill="rgb(252,5,43)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1167.50">tok..</text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1141" width="3.4084%" height="15" fill="rgb(252,84,19)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1151.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1125" width="3.4084%" height="15" fill="rgb(243,152,39)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1135.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1109" width="3.4084%" height="15" fill="rgb(234,160,15)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1119.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (454 samples, 3.41%)</title><rect x="10.3453%" y="1093" width="3.4084%" height="15" fill="rgb(237,34,20)" fg:x="1378" fg:w="454"/><text x="10.5953%" y="1103.50">rut..</text></g><g><title>rutin::cmd::dispatch::_{{closure}} (422 samples, 3.17%)</title><rect x="10.5856%" y="1077" width="3.1682%" height="15" fill="rgb(229,97,13)" fg:x="1410" fg:w="422"/><text x="10.8356%" y="1087.50">rut..</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}} (422 samples, 3.17%)</title><rect x="10.5856%" y="1061" width="3.1682%" height="15" fill="rgb(234,71,50)" fg:x="1410" fg:w="422"/><text x="10.8356%" y="1071.50">rut..</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}} (422 samples, 3.17%)</title><rect x="10.5856%" y="1045" width="3.1682%" height="15" fill="rgb(253,155,4)" fg:x="1410" fg:w="422"/><text x="10.8356%" y="1055.50">rut..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}} (422 samples, 3.17%)</title><rect x="10.5856%" y="1029" width="3.1682%" height="15" fill="rgb(222,185,37)" fg:x="1410" fg:w="422"/><text x="10.8356%" y="1039.50">rut..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}} (422 samples, 3.17%)</title><rect x="10.5856%" y="1013" width="3.1682%" height="15" fill="rgb(251,177,13)" fg:x="1410" fg:w="422"/><text x="10.8356%" y="1023.50">rut..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}} (422 samples, 3.17%)</title><rect x="10.5856%" y="997" width="3.1682%" height="15" fill="rgb(250,179,40)" fg:x="1410" fg:w="422"/><text x="10.8356%" y="1007.50">rut..</text></g><g><title>rutin::cmd::CmdExecutor::apply::_{{closure}} (422 samples, 3.17%)</title><rect x="10.5856%" y="981" width="3.1682%" height="15" fill="rgb(242,44,2)" fg:x="1410" fg:w="422"/><text x="10.8356%" y="991.50">rut..</text></g><g><title>&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::parse (422 samples, 3.17%)</title><rect x="10.5856%" y="965" width="3.1682%" height="15" fill="rgb(216,177,13)" fg:x="1410" fg:w="422"/><text x="10.8356%" y="975.50">&lt;ru..</text></g><g><title>rutin::frame::Frame::into_bulks (7 samples, 0.05%)</title><rect x="13.7012%" y="949" width="0.0526%" height="15" fill="rgb(216,106,43)" fg:x="1825" fg:w="7"/><text x="13.9512%" y="959.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_end (4 samples, 0.03%)</title><rect x="14.0315%" y="981" width="0.0300%" height="15" fill="rgb(216,183,2)" fg:x="1869" fg:w="4"/><text x="14.2815%" y="991.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="14.2192%" y="965" width="0.0150%" height="15" fill="rgb(249,75,3)" fg:x="1894" fg:w="2"/><text x="14.4692%" y="975.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="14.2192%" y="949" width="0.0150%" height="15" fill="rgb(219,67,39)" fg:x="1894" fg:w="2"/><text x="14.4692%" y="959.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="14.2192%" y="933" width="0.0150%" height="15" fill="rgb(253,228,2)" fg:x="1894" fg:w="2"/><text x="14.4692%" y="943.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="14.2192%" y="917" width="0.0150%" height="15" fill="rgb(235,138,27)" fg:x="1894" fg:w="2"/><text x="14.4692%" y="927.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (25 samples, 0.19%)</title><rect x="14.0616%" y="981" width="0.1877%" height="15" fill="rgb(236,97,51)" fg:x="1873" fg:w="25"/><text x="14.3116%" y="991.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (2 samples, 0.02%)</title><rect x="14.2342%" y="965" width="0.0150%" height="15" fill="rgb(240,80,30)" fg:x="1896" fg:w="2"/><text x="14.4842%" y="975.50"></text></g><g><title>bytes::bytes_mut::increment_shared (63 samples, 0.47%)</title><rect x="14.2492%" y="965" width="0.4730%" height="15" fill="rgb(230,178,19)" fg:x="1898" fg:w="63"/><text x="14.4992%" y="975.50"></text></g><g><title>asm_sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="14.6922%" y="949" width="0.0300%" height="15" fill="rgb(210,190,27)" fg:x="1957" fg:w="4"/><text x="14.9422%" y="959.50"></text></g><g><title>sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="14.6922%" y="933" width="0.0300%" height="15" fill="rgb(222,107,31)" fg:x="1957" fg:w="4"/><text x="14.9422%" y="943.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="14.6922%" y="917" width="0.0300%" height="15" fill="rgb(216,127,34)" fg:x="1957" fg:w="4"/><text x="14.9422%" y="927.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="14.6922%" y="901" width="0.0300%" height="15" fill="rgb(234,116,52)" fg:x="1957" fg:w="4"/><text x="14.9422%" y="911.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (135 samples, 1.01%)</title><rect x="13.7538%" y="1173" width="1.0135%" height="15" fill="rgb(222,124,15)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1183.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (135 samples, 1.01%)</title><rect x="13.7538%" y="1157" width="1.0135%" height="15" fill="rgb(231,179,28)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1167.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (135 samples, 1.01%)</title><rect x="13.7538%" y="1141" width="1.0135%" height="15" fill="rgb(226,93,45)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1151.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (135 samples, 1.01%)</title><rect x="13.7538%" y="1125" width="1.0135%" height="15" fill="rgb(215,8,51)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1135.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (135 samples, 1.01%)</title><rect x="13.7538%" y="1109" width="1.0135%" height="15" fill="rgb(223,106,5)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (135 samples, 1.01%)</title><rect x="13.7538%" y="1093" width="1.0135%" height="15" fill="rgb(250,191,5)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1103.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (135 samples, 1.01%)</title><rect x="13.7538%" y="1077" width="1.0135%" height="15" fill="rgb(242,132,44)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (135 samples, 1.01%)</title><rect x="13.7538%" y="1061" width="1.0135%" height="15" fill="rgb(251,152,29)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1071.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (135 samples, 1.01%)</title><rect x="13.7538%" y="1045" width="1.0135%" height="15" fill="rgb(218,179,5)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1055.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (135 samples, 1.01%)</title><rect x="13.7538%" y="1029" width="1.0135%" height="15" fill="rgb(227,67,19)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1039.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}} (135 samples, 1.01%)</title><rect x="13.7538%" y="1013" width="1.0135%" height="15" fill="rgb(233,119,31)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1023.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (135 samples, 1.01%)</title><rect x="13.7538%" y="997" width="1.0135%" height="15" fill="rgb(241,120,22)" fg:x="1832" fg:w="135"/><text x="14.0038%" y="1007.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (69 samples, 0.52%)</title><rect x="14.2492%" y="981" width="0.5180%" height="15" fill="rgb(224,102,30)" fg:x="1898" fg:w="69"/><text x="14.4992%" y="991.50"></text></g><g><title>core::ptr::read (6 samples, 0.05%)</title><rect x="14.7222%" y="965" width="0.0450%" height="15" fill="rgb(210,164,37)" fg:x="1961" fg:w="6"/><text x="14.9722%" y="975.50"></text></g><g><title>[libc.so.6] (6 samples, 0.05%)</title><rect x="15.1802%" y="917" width="0.0450%" height="15" fill="rgb(226,191,16)" fg:x="2022" fg:w="6"/><text x="15.4302%" y="927.50"></text></g><g><title>[libc.so.6] (6 samples, 0.05%)</title><rect x="15.1802%" y="901" width="0.0450%" height="15" fill="rgb(214,40,45)" fg:x="2022" fg:w="6"/><text x="15.4302%" y="911.50"></text></g><g><title>&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::parse (62 samples, 0.47%)</title><rect x="14.7673%" y="1061" width="0.4655%" height="15" fill="rgb(244,29,26)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::frame::Bulks&gt; (62 samples, 0.47%)</title><rect x="14.7673%" y="1045" width="0.4655%" height="15" fill="rgb(216,16,5)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rutin::frame::Frame&gt;&gt; (62 samples, 0.47%)</title><rect x="14.7673%" y="1029" width="0.4655%" height="15" fill="rgb(249,76,35)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rutin::frame::Frame&gt;&gt; (62 samples, 0.47%)</title><rect x="14.7673%" y="1013" width="0.4655%" height="15" fill="rgb(207,11,44)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.47%)</title><rect x="14.7673%" y="997" width="0.4655%" height="15" fill="rgb(228,190,49)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (62 samples, 0.47%)</title><rect x="14.7673%" y="981" width="0.4655%" height="15" fill="rgb(214,173,12)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (62 samples, 0.47%)</title><rect x="14.7673%" y="965" width="0.4655%" height="15" fill="rgb(218,26,35)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="975.50"></text></g><g><title>cfree (62 samples, 0.47%)</title><rect x="14.7673%" y="949" width="0.4655%" height="15" fill="rgb(220,200,19)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="959.50"></text></g><g><title>[libc.so.6] (62 samples, 0.47%)</title><rect x="14.7673%" y="933" width="0.4655%" height="15" fill="rgb(239,95,49)" fg:x="1967" fg:w="62"/><text x="15.0173%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.11%)</title><rect x="15.7432%" y="997" width="0.1051%" height="15" fill="rgb(235,85,53)" fg:x="2097" fg:w="14"/><text x="15.9932%" y="1007.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}}::_{{closure}}::_write_frame::_{{closure}} (14 samples, 0.11%)</title><rect x="15.7432%" y="981" width="0.1051%" height="15" fill="rgb(233,133,31)" fg:x="2097" fg:w="14"/><text x="15.9932%" y="991.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="15.8333%" y="965" width="0.0150%" height="15" fill="rgb(218,25,20)" fg:x="2109" fg:w="2"/><text x="16.0833%" y="975.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="15.8333%" y="949" width="0.0150%" height="15" fill="rgb(252,210,38)" fg:x="2109" fg:w="2"/><text x="16.0833%" y="959.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="15.8333%" y="933" width="0.0150%" height="15" fill="rgb(242,134,21)" fg:x="2109" fg:w="2"/><text x="16.0833%" y="943.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="15.8333%" y="917" width="0.0150%" height="15" fill="rgb(213,28,48)" fg:x="2109" fg:w="2"/><text x="16.0833%" y="927.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="15.8483%" y="997" width="0.0150%" height="15" fill="rgb(250,196,2)" fg:x="2111" fg:w="2"/><text x="16.0983%" y="1007.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="15.8483%" y="981" width="0.0150%" height="15" fill="rgb(227,5,17)" fg:x="2111" fg:w="2"/><text x="16.0983%" y="991.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="15.8483%" y="965" width="0.0150%" height="15" fill="rgb(221,226,24)" fg:x="2111" fg:w="2"/><text x="16.0983%" y="975.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="15.8483%" y="949" width="0.0150%" height="15" fill="rgb(211,5,48)" fg:x="2111" fg:w="2"/><text x="16.0983%" y="959.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.03%)</title><rect x="15.9159%" y="917" width="0.0300%" height="15" fill="rgb(219,150,6)" fg:x="2120" fg:w="4"/><text x="16.1659%" y="927.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.03%)</title><rect x="15.9159%" y="901" width="0.0300%" height="15" fill="rgb(251,46,16)" fg:x="2120" fg:w="4"/><text x="16.1659%" y="911.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="15.9459%" y="917" width="0.0150%" height="15" fill="rgb(220,204,40)" fg:x="2124" fg:w="2"/><text x="16.1959%" y="927.50"></text></g><g><title>[libc.so.6] (8 samples, 0.06%)</title><rect x="16.3514%" y="901" width="0.0601%" height="15" fill="rgb(211,85,2)" fg:x="2178" fg:w="8"/><text x="16.6014%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (68 samples, 0.51%)</title><rect x="15.9084%" y="949" width="0.5105%" height="15" fill="rgb(229,17,7)" fg:x="2119" fg:w="68"/><text x="16.1584%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (68 samples, 0.51%)</title><rect x="15.9084%" y="933" width="0.5105%" height="15" fill="rgb(239,72,28)" fg:x="2119" fg:w="68"/><text x="16.1584%" y="943.50"></text></g><g><title>cfree (61 samples, 0.46%)</title><rect x="15.9610%" y="917" width="0.4580%" height="15" fill="rgb(230,47,54)" fg:x="2126" fg:w="61"/><text x="16.2110%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.56%)</title><rect x="15.8709%" y="965" width="0.5556%" height="15" fill="rgb(214,50,8)" fg:x="2114" fg:w="74"/><text x="16.1209%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt;&gt; (94 samples, 0.71%)</title><rect x="15.8634%" y="997" width="0.7057%" height="15" fill="rgb(216,198,43)" fg:x="2113" fg:w="94"/><text x="16.1134%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt; (94 samples, 0.71%)</title><rect x="15.8634%" y="981" width="0.7057%" height="15" fill="rgb(234,20,35)" fg:x="2113" fg:w="94"/><text x="16.1134%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::connection::Connection::write_frame::{{closure}}::{{closure}}::{{closure}}::_write_frame::{{closure}}&gt; (19 samples, 0.14%)</title><rect x="16.4264%" y="965" width="0.1426%" height="15" fill="rgb(254,45,19)" fg:x="2188" fg:w="19"/><text x="16.6764%" y="975.50"></text></g><g><title>rutin::connection::Connection::flush::_{{closure}} (3 samples, 0.02%)</title><rect x="16.5691%" y="997" width="0.0225%" height="15" fill="rgb(219,14,44)" fg:x="2207" fg:w="3"/><text x="16.8191%" y="1007.50"></text></g><g><title>&lt;tokio::io::util::flush::Flush&lt;A&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="16.5691%" y="981" width="0.0225%" height="15" fill="rgb(217,220,26)" fg:x="2207" fg:w="3"/><text x="16.8191%" y="991.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_flush (3 samples, 0.02%)</title><rect x="16.5691%" y="965" width="0.0225%" height="15" fill="rgb(213,158,28)" fg:x="2207" fg:w="3"/><text x="16.8191%" y="975.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (3 samples, 0.02%)</title><rect x="16.5691%" y="949" width="0.0225%" height="15" fill="rgb(252,51,52)" fg:x="2207" fg:w="3"/><text x="16.8191%" y="959.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.02%)</title><rect x="16.5766%" y="933" width="0.0150%" height="15" fill="rgb(246,89,16)" fg:x="2208" fg:w="2"/><text x="16.8266%" y="943.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (2 samples, 0.02%)</title><rect x="16.5766%" y="917" width="0.0150%" height="15" fill="rgb(216,158,49)" fg:x="2208" fg:w="2"/><text x="16.8266%" y="927.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}} (172 samples, 1.29%)</title><rect x="15.4354%" y="1029" width="1.2913%" height="15" fill="rgb(236,107,19)" fg:x="2056" fg:w="172"/><text x="15.6854%" y="1039.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}}::_{{closure}} (164 samples, 1.23%)</title><rect x="15.4955%" y="1013" width="1.2312%" height="15" fill="rgb(228,185,30)" fg:x="2064" fg:w="164"/><text x="15.7455%" y="1023.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}}::_{{closure}}::_write_frame (18 samples, 0.14%)</title><rect x="16.5916%" y="997" width="0.1351%" height="15" fill="rgb(246,134,8)" fg:x="2210" fg:w="18"/><text x="16.8416%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (397 samples, 2.98%)</title><rect x="13.7538%" y="1525" width="2.9805%" height="15" fill="rgb(214,143,50)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1535.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (397 samples, 2.98%)</title><rect x="13.7538%" y="1509" width="2.9805%" height="15" fill="rgb(228,75,8)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1519.50">tok..</text></g><g><title>tokio::runtime::coop::budget (397 samples, 2.98%)</title><rect x="13.7538%" y="1493" width="2.9805%" height="15" fill="rgb(207,175,4)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1503.50">tok..</text></g><g><title>tokio::runtime::coop::with_budget (397 samples, 2.98%)</title><rect x="13.7538%" y="1477" width="2.9805%" height="15" fill="rgb(205,108,24)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1487.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (397 samples, 2.98%)</title><rect x="13.7538%" y="1461" width="2.9805%" height="15" fill="rgb(244,120,49)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1471.50">tok..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (397 samples, 2.98%)</title><rect x="13.7538%" y="1445" width="2.9805%" height="15" fill="rgb(223,47,38)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1455.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (397 samples, 2.98%)</title><rect x="13.7538%" y="1429" width="2.9805%" height="15" fill="rgb(229,179,11)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1439.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (397 samples, 2.98%)</title><rect x="13.7538%" y="1413" width="2.9805%" height="15" fill="rgb(231,122,1)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1423.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (397 samples, 2.98%)</title><rect x="13.7538%" y="1397" width="2.9805%" height="15" fill="rgb(245,119,9)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1407.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (397 samples, 2.98%)</title><rect x="13.7538%" y="1381" width="2.9805%" height="15" fill="rgb(241,163,25)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1391.50">tok..</text></g><g><title>std::panic::catch_unwind (397 samples, 2.98%)</title><rect x="13.7538%" y="1365" width="2.9805%" height="15" fill="rgb(217,214,3)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1375.50">std..</text></g><g><title>std::panicking::try (397 samples, 2.98%)</title><rect x="13.7538%" y="1349" width="2.9805%" height="15" fill="rgb(240,86,28)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1359.50">std..</text></g><g><title>std::panicking::try::do_call (397 samples, 2.98%)</title><rect x="13.7538%" y="1333" width="2.9805%" height="15" fill="rgb(215,47,9)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1343.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (397 samples, 2.98%)</title><rect x="13.7538%" y="1317" width="2.9805%" height="15" fill="rgb(252,25,45)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1327.50">&lt;co..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (397 samples, 2.98%)</title><rect x="13.7538%" y="1301" width="2.9805%" height="15" fill="rgb(251,164,9)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1311.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (397 samples, 2.98%)</title><rect x="13.7538%" y="1285" width="2.9805%" height="15" fill="rgb(233,194,0)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1295.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (397 samples, 2.98%)</title><rect x="13.7538%" y="1269" width="2.9805%" height="15" fill="rgb(249,111,24)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1279.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (397 samples, 2.98%)</title><rect x="13.7538%" y="1253" width="2.9805%" height="15" fill="rgb(250,223,3)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1263.50">tok..</text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (397 samples, 2.98%)</title><rect x="13.7538%" y="1237" width="2.9805%" height="15" fill="rgb(236,178,37)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1247.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}} (397 samples, 2.98%)</title><rect x="13.7538%" y="1221" width="2.9805%" height="15" fill="rgb(241,158,50)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1231.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (397 samples, 2.98%)</title><rect x="13.7538%" y="1205" width="2.9805%" height="15" fill="rgb(213,121,41)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1215.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (397 samples, 2.98%)</title><rect x="13.7538%" y="1189" width="2.9805%" height="15" fill="rgb(240,92,3)" fg:x="1832" fg:w="397"/><text x="14.0038%" y="1199.50">rut..</text></g><g><title>rutin::cmd::dispatch::_{{closure}} (262 samples, 1.97%)</title><rect x="14.7673%" y="1173" width="1.9670%" height="15" fill="rgb(205,123,3)" fg:x="1967" fg:w="262"/><text x="15.0173%" y="1183.50">r..</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}} (262 samples, 1.97%)</title><rect x="14.7673%" y="1157" width="1.9670%" height="15" fill="rgb(205,97,47)" fg:x="1967" fg:w="262"/><text x="15.0173%" y="1167.50">r..</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}} (262 samples, 1.97%)</title><rect x="14.7673%" y="1141" width="1.9670%" height="15" fill="rgb(247,152,14)" fg:x="1967" fg:w="262"/><text x="15.0173%" y="1151.50">r..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}} (262 samples, 1.97%)</title><rect x="14.7673%" y="1125" width="1.9670%" height="15" fill="rgb(248,195,53)" fg:x="1967" fg:w="262"/><text x="15.0173%" y="1135.50">r..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}} (262 samples, 1.97%)</title><rect x="14.7673%" y="1109" width="1.9670%" height="15" fill="rgb(226,201,16)" fg:x="1967" fg:w="262"/><text x="15.0173%" y="1119.50">r..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}} (262 samples, 1.97%)</title><rect x="14.7673%" y="1093" width="1.9670%" height="15" fill="rgb(205,98,0)" fg:x="1967" fg:w="262"/><text x="15.0173%" y="1103.50">r..</text></g><g><title>rutin::cmd::CmdExecutor::apply::_{{closure}} (262 samples, 1.97%)</title><rect x="14.7673%" y="1077" width="1.9670%" height="15" fill="rgb(214,191,48)" fg:x="1967" fg:w="262"/><text x="15.0173%" y="1087.50">r..</text></g><g><title>rutin::cmd::CmdExecutor::execute::_{{closure}} (200 samples, 1.50%)</title><rect x="15.2327%" y="1061" width="1.5015%" height="15" fill="rgb(237,112,39)" fg:x="2029" fg:w="200"/><text x="15.4827%" y="1071.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}} (200 samples, 1.50%)</title><rect x="15.2327%" y="1045" width="1.5015%" height="15" fill="rgb(247,203,27)" fg:x="2029" fg:w="200"/><text x="15.4827%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt;&gt; (11 samples, 0.08%)</title><rect x="16.7342%" y="1013" width="0.0826%" height="15" fill="rgb(235,124,28)" fg:x="2229" fg:w="11"/><text x="16.9842%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),rutin::connection::ConnError&gt;+core::marker::Send&gt;&gt; (11 samples, 0.08%)</title><rect x="16.7342%" y="997" width="0.0826%" height="15" fill="rgb(208,207,46)" fg:x="2229" fg:w="11"/><text x="16.9842%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.08%)</title><rect x="16.7342%" y="981" width="0.0826%" height="15" fill="rgb(234,176,4)" fg:x="2229" fg:w="11"/><text x="16.9842%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.08%)</title><rect x="16.7342%" y="965" width="0.0826%" height="15" fill="rgb(230,133,28)" fg:x="2229" fg:w="11"/><text x="16.9842%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.08%)</title><rect x="16.7342%" y="949" width="0.0826%" height="15" fill="rgb(211,137,40)" fg:x="2229" fg:w="11"/><text x="16.9842%" y="959.50"></text></g><g><title>cfree (11 samples, 0.08%)</title><rect x="16.7342%" y="933" width="0.0826%" height="15" fill="rgb(254,35,13)" fg:x="2229" fg:w="11"/><text x="16.9842%" y="943.50"></text></g><g><title>[libc.so.6] (11 samples, 0.08%)</title><rect x="16.7342%" y="917" width="0.0826%" height="15" fill="rgb(225,49,51)" fg:x="2229" fg:w="11"/><text x="16.9842%" y="927.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="16.8168%" y="885" width="0.0150%" height="15" fill="rgb(251,10,15)" fg:x="2240" fg:w="2"/><text x="17.0668%" y="895.50"></text></g><g><title>rutin::connection::Connection::flush::_{{closure}} (7 samples, 0.05%)</title><rect x="16.8168%" y="1013" width="0.0526%" height="15" fill="rgb(228,207,15)" fg:x="2240" fg:w="7"/><text x="17.0668%" y="1023.50"></text></g><g><title>&lt;tokio::io::util::flush::Flush&lt;A&gt; as core::future::future::Future&gt;::poll (7 samples, 0.05%)</title><rect x="16.8168%" y="997" width="0.0526%" height="15" fill="rgb(241,99,19)" fg:x="2240" fg:w="7"/><text x="17.0668%" y="1007.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_flush (7 samples, 0.05%)</title><rect x="16.8168%" y="981" width="0.0526%" height="15" fill="rgb(207,104,49)" fg:x="2240" fg:w="7"/><text x="17.0668%" y="991.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (7 samples, 0.05%)</title><rect x="16.8168%" y="965" width="0.0526%" height="15" fill="rgb(234,99,18)" fg:x="2240" fg:w="7"/><text x="17.0668%" y="975.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (7 samples, 0.05%)</title><rect x="16.8168%" y="949" width="0.0526%" height="15" fill="rgb(213,191,49)" fg:x="2240" fg:w="7"/><text x="17.0668%" y="959.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (7 samples, 0.05%)</title><rect x="16.8168%" y="933" width="0.0526%" height="15" fill="rgb(210,226,19)" fg:x="2240" fg:w="7"/><text x="17.0668%" y="943.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (7 samples, 0.05%)</title><rect x="16.8168%" y="917" width="0.0526%" height="15" fill="rgb(229,97,18)" fg:x="2240" fg:w="7"/><text x="17.0668%" y="927.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (7 samples, 0.05%)</title><rect x="16.8168%" y="901" width="0.0526%" height="15" fill="rgb(211,167,15)" fg:x="2240" fg:w="7"/><text x="17.0668%" y="911.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (5 samples, 0.04%)</title><rect x="16.8318%" y="885" width="0.0375%" height="15" fill="rgb(210,169,34)" fg:x="2242" fg:w="5"/><text x="17.0818%" y="895.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (5 samples, 0.04%)</title><rect x="16.8318%" y="869" width="0.0375%" height="15" fill="rgb(241,121,31)" fg:x="2242" fg:w="5"/><text x="17.0818%" y="879.50"></text></g><g><title>[libc.so.6] (34 samples, 0.26%)</title><rect x="16.8694%" y="965" width="0.2553%" height="15" fill="rgb(232,40,11)" fg:x="2247" fg:w="34"/><text x="17.1194%" y="975.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="17.1096%" y="949" width="0.0150%" height="15" fill="rgb(205,86,26)" fg:x="2279" fg:w="2"/><text x="17.3596%" y="959.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="17.1096%" y="933" width="0.0150%" height="15" fill="rgb(231,126,28)" fg:x="2279" fg:w="2"/><text x="17.3596%" y="943.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="17.1096%" y="917" width="0.0150%" height="15" fill="rgb(219,221,18)" fg:x="2279" fg:w="2"/><text x="17.3596%" y="927.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="17.1096%" y="901" width="0.0150%" height="15" fill="rgb(211,40,0)" fg:x="2279" fg:w="2"/><text x="17.3596%" y="911.50"></text></g><g><title>__rdl_alloc (8 samples, 0.06%)</title><rect x="17.1622%" y="901" width="0.0601%" height="15" fill="rgb(239,85,43)" fg:x="2286" fg:w="8"/><text x="17.4122%" y="911.50"></text></g><g><title>__rust_alloc (10 samples, 0.08%)</title><rect x="17.2222%" y="901" width="0.0751%" height="15" fill="rgb(231,55,21)" fg:x="2294" fg:w="10"/><text x="17.4722%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (103 samples, 0.77%)</title><rect x="16.7342%" y="1525" width="0.7733%" height="15" fill="rgb(225,184,43)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1535.50"></text></g><g><title>tokio::runtime::coop::budget (103 samples, 0.77%)</title><rect x="16.7342%" y="1509" width="0.7733%" height="15" fill="rgb(251,158,41)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1519.50"></text></g><g><title>tokio::runtime::coop::with_budget (103 samples, 0.77%)</title><rect x="16.7342%" y="1493" width="0.7733%" height="15" fill="rgb(234,159,37)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1477" width="0.7733%" height="15" fill="rgb(216,204,22)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1487.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (103 samples, 0.77%)</title><rect x="16.7342%" y="1461" width="0.7733%" height="15" fill="rgb(214,17,3)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1471.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (103 samples, 0.77%)</title><rect x="16.7342%" y="1445" width="0.7733%" height="15" fill="rgb(212,111,17)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1455.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (103 samples, 0.77%)</title><rect x="16.7342%" y="1429" width="0.7733%" height="15" fill="rgb(221,157,24)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1439.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (103 samples, 0.77%)</title><rect x="16.7342%" y="1413" width="0.7733%" height="15" fill="rgb(252,16,13)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (103 samples, 0.77%)</title><rect x="16.7342%" y="1397" width="0.7733%" height="15" fill="rgb(221,62,2)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (103 samples, 0.77%)</title><rect x="16.7342%" y="1381" width="0.7733%" height="15" fill="rgb(247,87,22)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1391.50"></text></g><g><title>std::panicking::try (103 samples, 0.77%)</title><rect x="16.7342%" y="1365" width="0.7733%" height="15" fill="rgb(215,73,9)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (103 samples, 0.77%)</title><rect x="16.7342%" y="1349" width="0.7733%" height="15" fill="rgb(207,175,33)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1359.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (103 samples, 0.77%)</title><rect x="16.7342%" y="1333" width="0.7733%" height="15" fill="rgb(243,129,54)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1317" width="0.7733%" height="15" fill="rgb(227,119,45)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1327.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (103 samples, 0.77%)</title><rect x="16.7342%" y="1301" width="0.7733%" height="15" fill="rgb(205,109,36)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1311.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (103 samples, 0.77%)</title><rect x="16.7342%" y="1285" width="0.7733%" height="15" fill="rgb(205,6,39)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1295.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1269" width="0.7733%" height="15" fill="rgb(221,32,16)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1279.50"></text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1253" width="0.7733%" height="15" fill="rgb(228,144,50)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1263.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1237" width="0.7733%" height="15" fill="rgb(229,201,53)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1247.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1221" width="0.7733%" height="15" fill="rgb(249,153,27)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1231.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1205" width="0.7733%" height="15" fill="rgb(227,106,25)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1215.50"></text></g><g><title>rutin::cmd::dispatch::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1189" width="0.7733%" height="15" fill="rgb(230,65,29)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1199.50"></text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1173" width="0.7733%" height="15" fill="rgb(221,57,46)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1183.50"></text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1157" width="0.7733%" height="15" fill="rgb(229,161,17)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1167.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1141" width="0.7733%" height="15" fill="rgb(222,213,11)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1151.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1125" width="0.7733%" height="15" fill="rgb(235,35,13)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1135.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1109" width="0.7733%" height="15" fill="rgb(233,158,34)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1119.50"></text></g><g><title>rutin::cmd::CmdExecutor::apply::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1093" width="0.7733%" height="15" fill="rgb(215,151,48)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1103.50"></text></g><g><title>rutin::cmd::CmdExecutor::execute::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1077" width="0.7733%" height="15" fill="rgb(229,84,14)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1087.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1061" width="0.7733%" height="15" fill="rgb(229,68,14)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1071.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1045" width="0.7733%" height="15" fill="rgb(243,106,26)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1055.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}}::_{{closure}} (103 samples, 0.77%)</title><rect x="16.7342%" y="1029" width="0.7733%" height="15" fill="rgb(206,45,38)" fg:x="2229" fg:w="103"/><text x="16.9842%" y="1039.50"></text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}}::_{{closure}}::_write_frame (85 samples, 0.64%)</title><rect x="16.8694%" y="1013" width="0.6381%" height="15" fill="rgb(226,6,15)" fg:x="2247" fg:w="85"/><text x="17.1194%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (85 samples, 0.64%)</title><rect x="16.8694%" y="997" width="0.6381%" height="15" fill="rgb(232,22,54)" fg:x="2247" fg:w="85"/><text x="17.1194%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (85 samples, 0.64%)</title><rect x="16.8694%" y="981" width="0.6381%" height="15" fill="rgb(229,222,32)" fg:x="2247" fg:w="85"/><text x="17.1194%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (51 samples, 0.38%)</title><rect x="17.1246%" y="965" width="0.3829%" height="15" fill="rgb(228,62,29)" fg:x="2281" fg:w="51"/><text x="17.3746%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.38%)</title><rect x="17.1246%" y="949" width="0.3829%" height="15" fill="rgb(251,103,34)" fg:x="2281" fg:w="51"/><text x="17.3746%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.38%)</title><rect x="17.1246%" y="933" width="0.3829%" height="15" fill="rgb(233,12,30)" fg:x="2281" fg:w="51"/><text x="17.3746%" y="943.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 0.38%)</title><rect x="17.1246%" y="917" width="0.3829%" height="15" fill="rgb(238,52,0)" fg:x="2281" fg:w="51"/><text x="17.3746%" y="927.50"></text></g><g><title>malloc (28 samples, 0.21%)</title><rect x="17.2973%" y="901" width="0.2102%" height="15" fill="rgb(223,98,5)" fg:x="2304" fg:w="28"/><text x="17.5473%" y="911.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (3 samples, 0.02%)</title><rect x="17.6652%" y="869" width="0.0225%" height="15" fill="rgb(228,75,37)" fg:x="2353" fg:w="3"/><text x="17.9152%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_end (8 samples, 0.06%)</title><rect x="17.6877%" y="869" width="0.0601%" height="15" fill="rgb(205,115,49)" fg:x="2356" fg:w="8"/><text x="17.9377%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (15 samples, 0.11%)</title><rect x="17.7477%" y="869" width="0.1126%" height="15" fill="rgb(250,154,43)" fg:x="2364" fg:w="15"/><text x="17.9977%" y="879.50"></text></g><g><title>bytes::bytes_mut::increment_shared (42 samples, 0.32%)</title><rect x="17.8604%" y="853" width="0.3153%" height="15" fill="rgb(226,43,29)" fg:x="2379" fg:w="42"/><text x="18.1104%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (99 samples, 0.74%)</title><rect x="17.5075%" y="885" width="0.7432%" height="15" fill="rgb(249,228,39)" fg:x="2332" fg:w="99"/><text x="17.7575%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (52 samples, 0.39%)</title><rect x="17.8604%" y="869" width="0.3904%" height="15" fill="rgb(216,79,43)" fg:x="2379" fg:w="52"/><text x="18.1104%" y="879.50"></text></g><g><title>core::ptr::read (10 samples, 0.08%)</title><rect x="18.1757%" y="853" width="0.0751%" height="15" fill="rgb(228,95,12)" fg:x="2421" fg:w="10"/><text x="18.4257%" y="863.50"></text></g><g><title>asm_sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="18.9940%" y="869" width="0.0300%" height="15" fill="rgb(249,221,15)" fg:x="2530" fg:w="4"/><text x="19.2440%" y="879.50"></text></g><g><title>sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="18.9940%" y="853" width="0.0300%" height="15" fill="rgb(233,34,13)" fg:x="2530" fg:w="4"/><text x="19.2440%" y="863.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="18.9940%" y="837" width="0.0300%" height="15" fill="rgb(214,103,39)" fg:x="2530" fg:w="4"/><text x="19.2440%" y="847.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="18.9940%" y="821" width="0.0300%" height="15" fill="rgb(251,126,39)" fg:x="2530" fg:w="4"/><text x="19.2440%" y="831.50"></text></g><g><title>atoi::ascii_to_digit (4 samples, 0.03%)</title><rect x="19.1667%" y="837" width="0.0300%" height="15" fill="rgb(214,216,36)" fg:x="2553" fg:w="4"/><text x="19.4167%" y="847.50"></text></g><g><title>core::cmp::min (7 samples, 0.05%)</title><rect x="19.1967%" y="837" width="0.0526%" height="15" fill="rgb(220,221,8)" fg:x="2557" fg:w="7"/><text x="19.4467%" y="847.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.05%)</title><rect x="19.1967%" y="821" width="0.0526%" height="15" fill="rgb(240,216,3)" fg:x="2557" fg:w="7"/><text x="19.4467%" y="831.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.05%)</title><rect x="19.1967%" y="805" width="0.0526%" height="15" fill="rgb(232,218,17)" fg:x="2557" fg:w="7"/><text x="19.4467%" y="815.50"></text></g><g><title>&lt;I as atoi::FromRadix10SignedChecked&gt;::from_radix_10_signed_checked::_{{closure}} (4 samples, 0.03%)</title><rect x="19.2492%" y="821" width="0.0300%" height="15" fill="rgb(229,163,45)" fg:x="2564" fg:w="4"/><text x="19.4992%" y="831.50"></text></g><g><title>atoi::Sign::try_from (2 samples, 0.02%)</title><rect x="19.2643%" y="805" width="0.0150%" height="15" fill="rgb(231,110,42)" fg:x="2566" fg:w="2"/><text x="19.5143%" y="815.50"></text></g><g><title>atoi::atoi (35 samples, 0.26%)</title><rect x="19.0240%" y="869" width="0.2628%" height="15" fill="rgb(208,170,48)" fg:x="2534" fg:w="35"/><text x="19.2740%" y="879.50"></text></g><g><title>&lt;I as atoi::FromRadix10SignedChecked&gt;::from_radix_10_signed_checked (24 samples, 0.18%)</title><rect x="19.1066%" y="853" width="0.1802%" height="15" fill="rgb(239,116,25)" fg:x="2545" fg:w="24"/><text x="19.3566%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5 samples, 0.04%)</title><rect x="19.2492%" y="837" width="0.0375%" height="15" fill="rgb(219,200,50)" fg:x="2564" fg:w="5"/><text x="19.4992%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (2 samples, 0.02%)</title><rect x="19.3093%" y="837" width="0.0150%" height="15" fill="rgb(245,200,0)" fg:x="2572" fg:w="2"/><text x="19.5593%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (65 samples, 0.49%)</title><rect x="19.2868%" y="869" width="0.4880%" height="15" fill="rgb(245,119,33)" fg:x="2569" fg:w="65"/><text x="19.5368%" y="879.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (64 samples, 0.48%)</title><rect x="19.2943%" y="853" width="0.4805%" height="15" fill="rgb(231,125,12)" fg:x="2570" fg:w="64"/><text x="19.5443%" y="863.50"></text></g><g><title>bytes::bytes_mut::release_shared (60 samples, 0.45%)</title><rect x="19.3243%" y="837" width="0.4505%" height="15" fill="rgb(216,96,41)" fg:x="2574" fg:w="60"/><text x="19.5743%" y="847.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (13 samples, 0.10%)</title><rect x="19.9700%" y="853" width="0.0976%" height="15" fill="rgb(248,43,45)" fg:x="2660" fg:w="13"/><text x="20.2200%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (10 samples, 0.08%)</title><rect x="19.9925%" y="837" width="0.0751%" height="15" fill="rgb(217,222,7)" fg:x="2663" fg:w="10"/><text x="20.2425%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (30 samples, 0.23%)</title><rect x="20.0676%" y="853" width="0.2252%" height="15" fill="rgb(233,28,6)" fg:x="2673" fg:w="30"/><text x="20.3176%" y="863.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}}::_{{closure}} (5 samples, 0.04%)</title><rect x="20.2553%" y="837" width="0.0375%" height="15" fill="rgb(231,218,15)" fg:x="2698" fg:w="5"/><text x="20.5053%" y="847.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (278 samples, 2.09%)</title><rect x="18.2508%" y="885" width="2.0871%" height="15" fill="rgb(226,171,48)" fg:x="2431" fg:w="278"/><text x="18.5008%" y="895.50">r..</text></g><g><title>rutin::connection::Connection::read_line::_{{closure}} (75 samples, 0.56%)</title><rect x="19.7748%" y="869" width="0.5631%" height="15" fill="rgb(235,201,9)" fg:x="2634" fg:w="75"/><text x="20.0248%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (5 samples, 0.04%)</title><rect x="20.3003%" y="853" width="0.0375%" height="15" fill="rgb(217,80,15)" fg:x="2704" fg:w="5"/><text x="20.5503%" y="863.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="20.3228%" y="837" width="0.0150%" height="15" fill="rgb(219,152,8)" fg:x="2707" fg:w="2"/><text x="20.5728%" y="847.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="20.3228%" y="821" width="0.0150%" height="15" fill="rgb(243,107,38)" fg:x="2707" fg:w="2"/><text x="20.5728%" y="831.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="20.3228%" y="805" width="0.0150%" height="15" fill="rgb(231,17,5)" fg:x="2707" fg:w="2"/><text x="20.5728%" y="815.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="20.3228%" y="789" width="0.0150%" height="15" fill="rgb(209,25,54)" fg:x="2707" fg:w="2"/><text x="20.5728%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (391 samples, 2.94%)</title><rect x="17.5075%" y="917" width="2.9354%" height="15" fill="rgb(219,0,2)" fg:x="2332" fg:w="391"/><text x="17.7575%" y="927.50">&lt;c..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (391 samples, 2.94%)</title><rect x="17.5075%" y="901" width="2.9354%" height="15" fill="rgb(246,9,5)" fg:x="2332" fg:w="391"/><text x="17.7575%" y="911.50">ru..</text></g><g><title>rutin::connection::Connection::read_u8::_{{closure}} (14 samples, 0.11%)</title><rect x="20.3378%" y="885" width="0.1051%" height="15" fill="rgb(226,159,4)" fg:x="2709" fg:w="14"/><text x="20.5878%" y="895.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (14 samples, 0.11%)</title><rect x="20.3378%" y="869" width="0.1051%" height="15" fill="rgb(219,175,34)" fg:x="2709" fg:w="14"/><text x="20.5878%" y="879.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (14 samples, 0.11%)</title><rect x="20.3378%" y="853" width="0.1051%" height="15" fill="rgb(236,10,46)" fg:x="2709" fg:w="14"/><text x="20.5878%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (14 samples, 0.11%)</title><rect x="20.3378%" y="837" width="0.1051%" height="15" fill="rgb(240,211,16)" fg:x="2709" fg:w="14"/><text x="20.5878%" y="847.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (6 samples, 0.05%)</title><rect x="20.4429%" y="869" width="0.0450%" height="15" fill="rgb(205,3,43)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="879.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (6 samples, 0.05%)</title><rect x="20.4429%" y="853" width="0.0450%" height="15" fill="rgb(245,7,22)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (6 samples, 0.05%)</title><rect x="20.4429%" y="837" width="0.0450%" height="15" fill="rgb(239,132,32)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (6 samples, 0.05%)</title><rect x="20.4429%" y="821" width="0.0450%" height="15" fill="rgb(228,202,34)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.05%)</title><rect x="20.4429%" y="805" width="0.0450%" height="15" fill="rgb(254,200,22)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.05%)</title><rect x="20.4429%" y="789" width="0.0450%" height="15" fill="rgb(219,10,39)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.05%)</title><rect x="20.4429%" y="773" width="0.0450%" height="15" fill="rgb(226,210,39)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.05%)</title><rect x="20.4429%" y="757" width="0.0450%" height="15" fill="rgb(208,219,16)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.05%)</title><rect x="20.4429%" y="741" width="0.0450%" height="15" fill="rgb(216,158,51)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.05%)</title><rect x="20.4429%" y="725" width="0.0450%" height="15" fill="rgb(233,14,44)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="735.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.05%)</title><rect x="20.4429%" y="709" width="0.0450%" height="15" fill="rgb(237,97,39)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="719.50"></text></g><g><title>malloc (6 samples, 0.05%)</title><rect x="20.4429%" y="693" width="0.0450%" height="15" fill="rgb(218,198,43)" fg:x="2723" fg:w="6"/><text x="20.6929%" y="703.50"></text></g><g><title>[libc.so.6] (5 samples, 0.04%)</title><rect x="20.4505%" y="677" width="0.0375%" height="15" fill="rgb(231,104,20)" fg:x="2724" fg:w="5"/><text x="20.7005%" y="687.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="20.5105%" y="661" width="0.0150%" height="15" fill="rgb(254,36,13)" fg:x="2732" fg:w="2"/><text x="20.7605%" y="671.50"></text></g><g><title>__free_pages (2 samples, 0.02%)</title><rect x="20.6081%" y="517" width="0.0150%" height="15" fill="rgb(248,14,50)" fg:x="2745" fg:w="2"/><text x="20.8581%" y="527.50"></text></g><g><title>free_unref_page (6 samples, 0.05%)</title><rect x="20.6231%" y="517" width="0.0450%" height="15" fill="rgb(217,107,29)" fg:x="2747" fg:w="6"/><text x="20.8731%" y="527.50"></text></g><g><title>free_pcp_prepare (2 samples, 0.02%)</title><rect x="20.6532%" y="501" width="0.0150%" height="15" fill="rgb(251,169,33)" fg:x="2751" fg:w="2"/><text x="20.9032%" y="511.50"></text></g><g><title>__kfree_skb (13 samples, 0.10%)</title><rect x="20.5781%" y="549" width="0.0976%" height="15" fill="rgb(217,108,32)" fg:x="2741" fg:w="13"/><text x="20.8281%" y="559.50"></text></g><g><title>skb_release_data (13 samples, 0.10%)</title><rect x="20.5781%" y="533" width="0.0976%" height="15" fill="rgb(219,66,42)" fg:x="2741" fg:w="13"/><text x="20.8281%" y="543.50"></text></g><g><title>kmem_cache_free.part.0 (3 samples, 0.02%)</title><rect x="20.6832%" y="549" width="0.0225%" height="15" fill="rgb(206,180,7)" fg:x="2755" fg:w="3"/><text x="20.9332%" y="559.50"></text></g><g><title>memcg_slab_free_hook (2 samples, 0.02%)</title><rect x="20.6907%" y="533" width="0.0150%" height="15" fill="rgb(208,226,31)" fg:x="2756" fg:w="2"/><text x="20.9407%" y="543.50"></text></g><g><title>_copy_to_iter (11 samples, 0.08%)</title><rect x="20.7057%" y="517" width="0.0826%" height="15" fill="rgb(218,26,49)" fg:x="2758" fg:w="11"/><text x="20.9557%" y="527.50"></text></g><g><title>copy_user_enhanced_fast_string (10 samples, 0.08%)</title><rect x="20.7132%" y="501" width="0.0751%" height="15" fill="rgb(233,197,48)" fg:x="2759" fg:w="10"/><text x="20.9632%" y="511.50"></text></g><g><title>skb_copy_datagram_iter (15 samples, 0.11%)</title><rect x="20.7057%" y="549" width="0.1126%" height="15" fill="rgb(252,181,51)" fg:x="2758" fg:w="15"/><text x="20.9557%" y="559.50"></text></g><g><title>__skb_datagram_iter (15 samples, 0.11%)</title><rect x="20.7057%" y="533" width="0.1126%" height="15" fill="rgb(253,90,19)" fg:x="2758" fg:w="15"/><text x="20.9557%" y="543.50"></text></g><g><title>simple_copy_to_iter (4 samples, 0.03%)</title><rect x="20.7883%" y="517" width="0.0300%" height="15" fill="rgb(215,171,30)" fg:x="2769" fg:w="4"/><text x="21.0383%" y="527.50"></text></g><g><title>__check_object_size (2 samples, 0.02%)</title><rect x="20.8033%" y="501" width="0.0150%" height="15" fill="rgb(214,222,9)" fg:x="2771" fg:w="2"/><text x="21.0533%" y="511.50"></text></g><g><title>inet_recvmsg (37 samples, 0.28%)</title><rect x="20.5480%" y="597" width="0.2778%" height="15" fill="rgb(223,3,22)" fg:x="2737" fg:w="37"/><text x="20.7980%" y="607.50"></text></g><g><title>tcp_recvmsg (35 samples, 0.26%)</title><rect x="20.5631%" y="581" width="0.2628%" height="15" fill="rgb(225,196,46)" fg:x="2739" fg:w="35"/><text x="20.8131%" y="591.50"></text></g><g><title>tcp_recvmsg_locked (35 samples, 0.26%)</title><rect x="20.5631%" y="565" width="0.2628%" height="15" fill="rgb(209,110,37)" fg:x="2739" fg:w="35"/><text x="20.8131%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (41 samples, 0.31%)</title><rect x="20.5255%" y="629" width="0.3078%" height="15" fill="rgb(249,89,12)" fg:x="2734" fg:w="41"/><text x="20.7755%" y="639.50"></text></g><g><title>__sys_recvfrom (41 samples, 0.31%)</title><rect x="20.5255%" y="613" width="0.3078%" height="15" fill="rgb(226,27,33)" fg:x="2734" fg:w="41"/><text x="20.7755%" y="623.50"></text></g><g><title>syscall_enter_from_user_mode (2 samples, 0.02%)</title><rect x="20.8333%" y="629" width="0.0150%" height="15" fill="rgb(213,82,22)" fg:x="2775" fg:w="2"/><text x="21.0833%" y="639.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (49 samples, 0.37%)</title><rect x="20.4955%" y="805" width="0.3679%" height="15" fill="rgb(248,140,0)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="815.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (49 samples, 0.37%)</title><rect x="20.4955%" y="789" width="0.3679%" height="15" fill="rgb(228,106,3)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="799.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (49 samples, 0.37%)</title><rect x="20.4955%" y="773" width="0.3679%" height="15" fill="rgb(209,23,37)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="783.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (49 samples, 0.37%)</title><rect x="20.4955%" y="757" width="0.3679%" height="15" fill="rgb(241,93,50)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="767.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (49 samples, 0.37%)</title><rect x="20.4955%" y="741" width="0.3679%" height="15" fill="rgb(253,46,43)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="751.50"></text></g><g><title>std::sys_common::net::TcpStream::read (49 samples, 0.37%)</title><rect x="20.4955%" y="725" width="0.3679%" height="15" fill="rgb(226,206,43)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="735.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (49 samples, 0.37%)</title><rect x="20.4955%" y="709" width="0.3679%" height="15" fill="rgb(217,54,7)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="719.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (49 samples, 0.37%)</title><rect x="20.4955%" y="693" width="0.3679%" height="15" fill="rgb(223,5,52)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="703.50"></text></g><g><title>recv (49 samples, 0.37%)</title><rect x="20.4955%" y="677" width="0.3679%" height="15" fill="rgb(206,52,46)" fg:x="2730" fg:w="49"/><text x="20.7455%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 0.34%)</title><rect x="20.5255%" y="661" width="0.3378%" height="15" fill="rgb(253,136,11)" fg:x="2734" fg:w="45"/><text x="20.7755%" y="671.50"></text></g><g><title>do_syscall_64 (45 samples, 0.34%)</title><rect x="20.5255%" y="645" width="0.3378%" height="15" fill="rgb(208,106,33)" fg:x="2734" fg:w="45"/><text x="20.7755%" y="655.50"></text></g><g><title>syscall_trace_enter.constprop.0 (2 samples, 0.02%)</title><rect x="20.8483%" y="629" width="0.0150%" height="15" fill="rgb(206,54,4)" fg:x="2777" fg:w="2"/><text x="21.0983%" y="639.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (58 samples, 0.44%)</title><rect x="20.4429%" y="885" width="0.4354%" height="15" fill="rgb(213,3,15)" fg:x="2723" fg:w="58"/><text x="20.6929%" y="895.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (52 samples, 0.39%)</title><rect x="20.4880%" y="869" width="0.3904%" height="15" fill="rgb(252,211,39)" fg:x="2729" fg:w="52"/><text x="20.7380%" y="879.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (52 samples, 0.39%)</title><rect x="20.4880%" y="853" width="0.3904%" height="15" fill="rgb(223,6,36)" fg:x="2729" fg:w="52"/><text x="20.7380%" y="863.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (52 samples, 0.39%)</title><rect x="20.4880%" y="837" width="0.3904%" height="15" fill="rgb(252,169,45)" fg:x="2729" fg:w="52"/><text x="20.7380%" y="847.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (52 samples, 0.39%)</title><rect x="20.4880%" y="821" width="0.3904%" height="15" fill="rgb(212,48,26)" fg:x="2729" fg:w="52"/><text x="20.7380%" y="831.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (450 samples, 3.38%)</title><rect x="17.5075%" y="1029" width="3.3784%" height="15" fill="rgb(251,102,48)" fg:x="2332" fg:w="450"/><text x="17.7575%" y="1039.50">&lt;to..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (450 samples, 3.38%)</title><rect x="17.5075%" y="1013" width="3.3784%" height="15" fill="rgb(243,208,16)" fg:x="2332" fg:w="450"/><text x="17.7575%" y="1023.50">rut..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (450 samples, 3.38%)</title><rect x="17.5075%" y="997" width="3.3784%" height="15" fill="rgb(219,96,24)" fg:x="2332" fg:w="450"/><text x="17.7575%" y="1007.50">rut..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (450 samples, 3.38%)</title><rect x="17.5075%" y="981" width="3.3784%" height="15" fill="rgb(219,33,29)" fg:x="2332" fg:w="450"/><text x="17.7575%" y="991.50">rut..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (450 samples, 3.38%)</title><rect x="17.5075%" y="965" width="3.3784%" height="15" fill="rgb(223,176,5)" fg:x="2332" fg:w="450"/><text x="17.7575%" y="975.50">rut..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (450 samples, 3.38%)</title><rect x="17.5075%" y="949" width="3.3784%" height="15" fill="rgb(228,140,14)" fg:x="2332" fg:w="450"/><text x="17.7575%" y="959.50">&lt;co..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (450 samples, 3.38%)</title><rect x="17.5075%" y="933" width="3.3784%" height="15" fill="rgb(217,179,31)" fg:x="2332" fg:w="450"/><text x="17.7575%" y="943.50">rut..</text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (59 samples, 0.44%)</title><rect x="20.4429%" y="917" width="0.4429%" height="15" fill="rgb(230,9,30)" fg:x="2723" fg:w="59"/><text x="20.6929%" y="927.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}} (59 samples, 0.44%)</title><rect x="20.4429%" y="901" width="0.4429%" height="15" fill="rgb(230,136,20)" fg:x="2723" fg:w="59"/><text x="20.6929%" y="911.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (7 samples, 0.05%)</title><rect x="20.8859%" y="885" width="0.0526%" height="15" fill="rgb(215,210,22)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="895.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (7 samples, 0.05%)</title><rect x="20.8859%" y="869" width="0.0526%" height="15" fill="rgb(218,43,5)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="879.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (7 samples, 0.05%)</title><rect x="20.8859%" y="853" width="0.0526%" height="15" fill="rgb(216,11,5)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="863.50"></text></g><g><title>bytes::bytes_mut::release_shared (7 samples, 0.05%)</title><rect x="20.8859%" y="837" width="0.0526%" height="15" fill="rgb(209,82,29)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="847.50"></text></g><g><title>core::mem::drop (7 samples, 0.05%)</title><rect x="20.8859%" y="821" width="0.0526%" height="15" fill="rgb(244,115,12)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (7 samples, 0.05%)</title><rect x="20.8859%" y="805" width="0.0526%" height="15" fill="rgb(222,82,18)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (7 samples, 0.05%)</title><rect x="20.8859%" y="789" width="0.0526%" height="15" fill="rgb(249,227,8)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.05%)</title><rect x="20.8859%" y="773" width="0.0526%" height="15" fill="rgb(253,141,45)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.05%)</title><rect x="20.8859%" y="757" width="0.0526%" height="15" fill="rgb(234,184,4)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.05%)</title><rect x="20.8859%" y="741" width="0.0526%" height="15" fill="rgb(218,194,23)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.05%)</title><rect x="20.8859%" y="725" width="0.0526%" height="15" fill="rgb(235,66,41)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.05%)</title><rect x="20.8859%" y="709" width="0.0526%" height="15" fill="rgb(245,217,1)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="719.50"></text></g><g><title>cfree (7 samples, 0.05%)</title><rect x="20.8859%" y="693" width="0.0526%" height="15" fill="rgb(229,91,1)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="703.50"></text></g><g><title>[libc.so.6] (7 samples, 0.05%)</title><rect x="20.8859%" y="677" width="0.0526%" height="15" fill="rgb(207,101,30)" fg:x="2782" fg:w="7"/><text x="21.1359%" y="687.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="20.9159%" y="661" width="0.0225%" height="15" fill="rgb(223,82,49)" fg:x="2786" fg:w="3"/><text x="21.1659%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (458 samples, 3.44%)</title><rect x="17.5075%" y="1525" width="3.4384%" height="15" fill="rgb(218,167,17)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1535.50">tok..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (458 samples, 3.44%)</title><rect x="17.5075%" y="1509" width="3.4384%" height="15" fill="rgb(208,103,14)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1519.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1493" width="3.4384%" height="15" fill="rgb(238,20,8)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1503.50">tok..</text></g><g><title>tokio::runtime::context::set_scheduler (458 samples, 3.44%)</title><rect x="17.5075%" y="1477" width="3.4384%" height="15" fill="rgb(218,80,54)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1487.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (458 samples, 3.44%)</title><rect x="17.5075%" y="1461" width="3.4384%" height="15" fill="rgb(240,144,17)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1471.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (458 samples, 3.44%)</title><rect x="17.5075%" y="1445" width="3.4384%" height="15" fill="rgb(245,27,50)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1455.50">std..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1429" width="3.4384%" height="15" fill="rgb(251,51,7)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1439.50">tok..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (458 samples, 3.44%)</title><rect x="17.5075%" y="1413" width="3.4384%" height="15" fill="rgb(245,217,29)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1423.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1397" width="3.4384%" height="15" fill="rgb(221,176,29)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1407.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (458 samples, 3.44%)</title><rect x="17.5075%" y="1381" width="3.4384%" height="15" fill="rgb(212,180,24)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1391.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (458 samples, 3.44%)</title><rect x="17.5075%" y="1365" width="3.4384%" height="15" fill="rgb(254,24,2)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1375.50">tok..</text></g><g><title>tokio::runtime::coop::budget (458 samples, 3.44%)</title><rect x="17.5075%" y="1349" width="3.4384%" height="15" fill="rgb(230,100,2)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1359.50">tok..</text></g><g><title>tokio::runtime::coop::with_budget (458 samples, 3.44%)</title><rect x="17.5075%" y="1333" width="3.4384%" height="15" fill="rgb(219,142,25)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1343.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1317" width="3.4384%" height="15" fill="rgb(240,73,43)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1327.50">tok..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (458 samples, 3.44%)</title><rect x="17.5075%" y="1301" width="3.4384%" height="15" fill="rgb(214,114,15)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1311.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (458 samples, 3.44%)</title><rect x="17.5075%" y="1285" width="3.4384%" height="15" fill="rgb(207,130,4)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1295.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (458 samples, 3.44%)</title><rect x="17.5075%" y="1269" width="3.4384%" height="15" fill="rgb(221,25,40)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1279.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (458 samples, 3.44%)</title><rect x="17.5075%" y="1253" width="3.4384%" height="15" fill="rgb(241,184,7)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1263.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (458 samples, 3.44%)</title><rect x="17.5075%" y="1237" width="3.4384%" height="15" fill="rgb(235,159,4)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1247.50">tok..</text></g><g><title>std::panic::catch_unwind (458 samples, 3.44%)</title><rect x="17.5075%" y="1221" width="3.4384%" height="15" fill="rgb(214,87,48)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1231.50">std..</text></g><g><title>std::panicking::try (458 samples, 3.44%)</title><rect x="17.5075%" y="1205" width="3.4384%" height="15" fill="rgb(246,198,24)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1215.50">std..</text></g><g><title>std::panicking::try::do_call (458 samples, 3.44%)</title><rect x="17.5075%" y="1189" width="3.4384%" height="15" fill="rgb(209,66,40)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1199.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (458 samples, 3.44%)</title><rect x="17.5075%" y="1173" width="3.4384%" height="15" fill="rgb(233,147,39)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1183.50">&lt;co..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1157" width="3.4384%" height="15" fill="rgb(231,145,52)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1167.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (458 samples, 3.44%)</title><rect x="17.5075%" y="1141" width="3.4384%" height="15" fill="rgb(206,20,26)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1151.50">tok..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (458 samples, 3.44%)</title><rect x="17.5075%" y="1125" width="3.4384%" height="15" fill="rgb(238,220,4)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1135.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1109" width="3.4384%" height="15" fill="rgb(252,195,42)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1119.50">tok..</text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1093" width="3.4384%" height="15" fill="rgb(209,10,6)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1103.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1077" width="3.4384%" height="15" fill="rgb(229,3,52)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1087.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1061" width="3.4384%" height="15" fill="rgb(253,49,37)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1071.50">rut..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (458 samples, 3.44%)</title><rect x="17.5075%" y="1045" width="3.4384%" height="15" fill="rgb(240,103,49)" fg:x="2332" fg:w="458"/><text x="17.7575%" y="1055.50">rut..</text></g><g><title>rutin::cmd::dispatch::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="1029" width="0.0601%" height="15" fill="rgb(250,182,30)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="1039.50"></text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="1013" width="0.0601%" height="15" fill="rgb(248,8,30)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="1023.50"></text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="997" width="0.0601%" height="15" fill="rgb(237,120,30)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="1007.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="981" width="0.0601%" height="15" fill="rgb(221,146,34)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="991.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="965" width="0.0601%" height="15" fill="rgb(242,55,13)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="975.50"></text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="949" width="0.0601%" height="15" fill="rgb(242,112,31)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="959.50"></text></g><g><title>rutin::cmd::CmdExecutor::apply::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="933" width="0.0601%" height="15" fill="rgb(249,192,27)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="943.50"></text></g><g><title>rutin::cmd::CmdExecutor::execute::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="917" width="0.0601%" height="15" fill="rgb(208,204,44)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="927.50"></text></g><g><title>&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::_execute::_{{closure}} (8 samples, 0.06%)</title><rect x="20.8859%" y="901" width="0.0601%" height="15" fill="rgb(208,93,54)" fg:x="2782" fg:w="8"/><text x="21.1359%" y="911.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="21.9144%" y="773" width="0.0150%" height="15" fill="rgb(242,1,31)" fg:x="2919" fg:w="2"/><text x="22.1644%" y="783.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="21.9144%" y="757" width="0.0150%" height="15" fill="rgb(241,83,25)" fg:x="2919" fg:w="2"/><text x="22.1644%" y="767.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="21.9144%" y="741" width="0.0150%" height="15" fill="rgb(205,169,50)" fg:x="2919" fg:w="2"/><text x="22.1644%" y="751.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="21.9144%" y="725" width="0.0150%" height="15" fill="rgb(239,186,37)" fg:x="2919" fg:w="2"/><text x="22.1644%" y="735.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (19 samples, 0.14%)</title><rect x="21.7943%" y="805" width="0.1426%" height="15" fill="rgb(205,221,10)" fg:x="2903" fg:w="19"/><text x="22.0443%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (17 samples, 0.13%)</title><rect x="21.8093%" y="789" width="0.1276%" height="15" fill="rgb(218,196,15)" fg:x="2905" fg:w="17"/><text x="22.0593%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.05%)</title><rect x="21.9369%" y="805" width="0.0450%" height="15" fill="rgb(218,196,35)" fg:x="2922" fg:w="6"/><text x="22.1869%" y="815.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="21.9820%" y="805" width="0.0225%" height="15" fill="rgb(233,63,24)" fg:x="2928" fg:w="3"/><text x="22.2320%" y="815.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="21.9820%" y="789" width="0.0225%" height="15" fill="rgb(225,8,4)" fg:x="2928" fg:w="3"/><text x="22.2320%" y="799.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="21.9820%" y="773" width="0.0225%" height="15" fill="rgb(234,105,35)" fg:x="2928" fg:w="3"/><text x="22.2320%" y="783.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="21.9820%" y="757" width="0.0225%" height="15" fill="rgb(236,21,32)" fg:x="2928" fg:w="3"/><text x="22.2320%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (2 samples, 0.02%)</title><rect x="22.0045%" y="805" width="0.0150%" height="15" fill="rgb(228,109,6)" fg:x="2931" fg:w="2"/><text x="22.2545%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (15 samples, 0.11%)</title><rect x="22.0195%" y="805" width="0.1126%" height="15" fill="rgb(229,215,31)" fg:x="2933" fg:w="15"/><text x="22.2695%" y="815.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (3 samples, 0.02%)</title><rect x="22.1321%" y="805" width="0.0225%" height="15" fill="rgb(221,52,54)" fg:x="2948" fg:w="3"/><text x="22.3821%" y="815.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::chunk (2 samples, 0.02%)</title><rect x="22.3048%" y="773" width="0.0150%" height="15" fill="rgb(252,129,43)" fg:x="2971" fg:w="2"/><text x="22.5548%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (195 samples, 1.46%)</title><rect x="20.9459%" y="837" width="1.4640%" height="15" fill="rgb(248,183,27)" fg:x="2790" fg:w="195"/><text x="21.1959%" y="847.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (195 samples, 1.46%)</title><rect x="20.9459%" y="821" width="1.4640%" height="15" fill="rgb(250,0,22)" fg:x="2790" fg:w="195"/><text x="21.1959%" y="831.50"></text></g><g><title>rutin::connection::Connection::read_u8::_{{closure}} (34 samples, 0.26%)</title><rect x="22.1547%" y="805" width="0.2553%" height="15" fill="rgb(213,166,10)" fg:x="2951" fg:w="34"/><text x="22.4047%" y="815.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (14 samples, 0.11%)</title><rect x="22.3048%" y="789" width="0.1051%" height="15" fill="rgb(207,163,36)" fg:x="2971" fg:w="14"/><text x="22.5548%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (12 samples, 0.09%)</title><rect x="22.3198%" y="773" width="0.0901%" height="15" fill="rgb(208,122,22)" fg:x="2973" fg:w="12"/><text x="22.5698%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (4 samples, 0.03%)</title><rect x="22.3799%" y="757" width="0.0300%" height="15" fill="rgb(207,104,49)" fg:x="2981" fg:w="4"/><text x="22.6299%" y="767.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="22.4099%" y="805" width="0.0150%" height="15" fill="rgb(248,211,50)" fg:x="2985" fg:w="2"/><text x="22.6599%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (2 samples, 0.02%)</title><rect x="22.5225%" y="789" width="0.0150%" height="15" fill="rgb(217,13,45)" fg:x="3000" fg:w="2"/><text x="22.7725%" y="799.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (236 samples, 1.77%)</title><rect x="20.9459%" y="949" width="1.7718%" height="15" fill="rgb(211,216,49)" fg:x="2790" fg:w="236"/><text x="21.1959%" y="959.50">&lt;..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (236 samples, 1.77%)</title><rect x="20.9459%" y="933" width="1.7718%" height="15" fill="rgb(221,58,53)" fg:x="2790" fg:w="236"/><text x="21.1959%" y="943.50">r..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (236 samples, 1.77%)</title><rect x="20.9459%" y="917" width="1.7718%" height="15" fill="rgb(220,112,41)" fg:x="2790" fg:w="236"/><text x="21.1959%" y="927.50">r..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (236 samples, 1.77%)</title><rect x="20.9459%" y="901" width="1.7718%" height="15" fill="rgb(236,38,28)" fg:x="2790" fg:w="236"/><text x="21.1959%" y="911.50">r..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (236 samples, 1.77%)</title><rect x="20.9459%" y="885" width="1.7718%" height="15" fill="rgb(227,195,22)" fg:x="2790" fg:w="236"/><text x="21.1959%" y="895.50">r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (236 samples, 1.77%)</title><rect x="20.9459%" y="869" width="1.7718%" height="15" fill="rgb(214,55,33)" fg:x="2790" fg:w="236"/><text x="21.1959%" y="879.50">&lt;..</text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (236 samples, 1.77%)</title><rect x="20.9459%" y="853" width="1.7718%" height="15" fill="rgb(248,80,13)" fg:x="2790" fg:w="236"/><text x="21.1959%" y="863.50">r..</text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (41 samples, 0.31%)</title><rect x="22.4099%" y="837" width="0.3078%" height="15" fill="rgb(238,52,6)" fg:x="2985" fg:w="41"/><text x="22.6599%" y="847.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}} (41 samples, 0.31%)</title><rect x="22.4099%" y="821" width="0.3078%" height="15" fill="rgb(224,198,47)" fg:x="2985" fg:w="41"/><text x="22.6599%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (39 samples, 0.29%)</title><rect x="22.4249%" y="805" width="0.2928%" height="15" fill="rgb(233,171,20)" fg:x="2987" fg:w="39"/><text x="22.6749%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (22 samples, 0.17%)</title><rect x="22.5526%" y="789" width="0.1652%" height="15" fill="rgb(241,30,25)" fg:x="3004" fg:w="22"/><text x="22.8026%" y="799.50"></text></g><g><title>bytes::bytes_mut::increment_shared (22 samples, 0.17%)</title><rect x="22.5526%" y="773" width="0.1652%" height="15" fill="rgb(207,171,38)" fg:x="3004" fg:w="22"/><text x="22.8026%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="23.3408%" y="853" width="0.0225%" height="15" fill="rgb(234,70,1)" fg:x="3109" fg:w="3"/><text x="23.5908%" y="863.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="23.3634%" y="853" width="0.0150%" height="15" fill="rgb(232,178,18)" fg:x="3112" fg:w="2"/><text x="23.6134%" y="863.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="23.3634%" y="837" width="0.0150%" height="15" fill="rgb(241,78,40)" fg:x="3112" fg:w="2"/><text x="23.6134%" y="847.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="23.3634%" y="821" width="0.0150%" height="15" fill="rgb(222,35,25)" fg:x="3112" fg:w="2"/><text x="23.6134%" y="831.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="23.3634%" y="805" width="0.0150%" height="15" fill="rgb(207,92,16)" fg:x="3112" fg:w="2"/><text x="23.6134%" y="815.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (2 samples, 0.02%)</title><rect x="23.3784%" y="853" width="0.0150%" height="15" fill="rgb(216,59,51)" fg:x="3114" fg:w="2"/><text x="23.6284%" y="863.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="23.3784%" y="837" width="0.0150%" height="15" fill="rgb(213,80,28)" fg:x="3114" fg:w="2"/><text x="23.6284%" y="847.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="23.3784%" y="821" width="0.0150%" height="15" fill="rgb(220,93,7)" fg:x="3114" fg:w="2"/><text x="23.6284%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="23.3784%" y="805" width="0.0150%" height="15" fill="rgb(225,24,44)" fg:x="3114" fg:w="2"/><text x="23.6284%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::apply::{{closure}}&gt; (9 samples, 0.07%)</title><rect x="23.3934%" y="853" width="0.0676%" height="15" fill="rgb(243,74,40)" fg:x="3116" fg:w="9"/><text x="23.6434%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.02%)</title><rect x="23.6411%" y="837" width="0.0150%" height="15" fill="rgb(228,39,7)" fg:x="3149" fg:w="2"/><text x="23.8911%" y="847.50"></text></g><g><title>&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::parse (24 samples, 0.18%)</title><rect x="23.6562%" y="837" width="0.1802%" height="15" fill="rgb(227,79,8)" fg:x="3151" fg:w="24"/><text x="23.9062%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::execute::{{closure}}&gt; (19 samples, 0.14%)</title><rect x="23.8363%" y="837" width="0.1426%" height="15" fill="rgb(236,58,11)" fg:x="3175" fg:w="19"/><text x="24.0863%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.02%)</title><rect x="24.5195%" y="821" width="0.0150%" height="15" fill="rgb(249,63,35)" fg:x="3266" fg:w="2"/><text x="24.7695%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (31 samples, 0.23%)</title><rect x="24.8574%" y="805" width="0.2327%" height="15" fill="rgb(252,114,16)" fg:x="3311" fg:w="31"/><text x="25.1074%" y="815.50"></text></g><g><title>&lt;rutin::db::object::str::Str as core::convert::From&lt;bytes::bytes::Bytes&gt;&gt;::from (31 samples, 0.23%)</title><rect x="24.8574%" y="789" width="0.2327%" height="15" fill="rgb(254,151,24)" fg:x="3311" fg:w="31"/><text x="25.1074%" y="799.50"></text></g><g><title>atoi::atoi (9 samples, 0.07%)</title><rect x="25.0225%" y="773" width="0.0676%" height="15" fill="rgb(253,54,39)" fg:x="3333" fg:w="9"/><text x="25.2725%" y="783.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="26.4715%" y="741" width="0.0225%" height="15" fill="rgb(243,25,45)" fg:x="3526" fg:w="3"/><text x="26.7215%" y="751.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="26.4715%" y="725" width="0.0225%" height="15" fill="rgb(234,134,9)" fg:x="3526" fg:w="3"/><text x="26.7215%" y="735.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="26.4715%" y="709" width="0.0225%" height="15" fill="rgb(227,166,31)" fg:x="3526" fg:w="3"/><text x="26.7215%" y="719.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="26.4715%" y="693" width="0.0225%" height="15" fill="rgb(245,143,41)" fg:x="3526" fg:w="3"/><text x="26.7215%" y="703.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (189 samples, 1.42%)</title><rect x="25.0901%" y="805" width="1.4189%" height="15" fill="rgb(238,181,32)" fg:x="3342" fg:w="189"/><text x="25.3401%" y="815.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (188 samples, 1.41%)</title><rect x="25.0976%" y="789" width="1.4114%" height="15" fill="rgb(224,113,18)" fg:x="3343" fg:w="188"/><text x="25.3476%" y="799.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (188 samples, 1.41%)</title><rect x="25.0976%" y="773" width="1.4114%" height="15" fill="rgb(240,229,28)" fg:x="3343" fg:w="188"/><text x="25.3476%" y="783.50"></text></g><g><title>bytes::bytes_mut::release_shared (180 samples, 1.35%)</title><rect x="25.1577%" y="757" width="1.3514%" height="15" fill="rgb(250,185,3)" fg:x="3351" fg:w="180"/><text x="25.4077%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::db::object::ObjectInner&gt; (14 samples, 0.11%)</title><rect x="26.5090%" y="805" width="0.1051%" height="15" fill="rgb(212,59,25)" fg:x="3531" fg:w="14"/><text x="26.7590%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::db::object::ObjValue&gt; (2 samples, 0.02%)</title><rect x="26.5991%" y="789" width="0.0150%" height="15" fill="rgb(221,87,20)" fg:x="3543" fg:w="2"/><text x="26.8491%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::db::object::str::Str&gt; (2 samples, 0.02%)</title><rect x="26.5991%" y="773" width="0.0150%" height="15" fill="rgb(213,74,28)" fg:x="3543" fg:w="2"/><text x="26.8491%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.02%)</title><rect x="26.5991%" y="757" width="0.0150%" height="15" fill="rgb(224,132,34)" fg:x="3543" fg:w="2"/><text x="26.8491%" y="767.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="26.5991%" y="741" width="0.0150%" height="15" fill="rgb(222,101,24)" fg:x="3543" fg:w="2"/><text x="26.8491%" y="751.50"></text></g><g><title>rutin::db::Db::insert_object (7 samples, 0.05%)</title><rect x="26.6141%" y="805" width="0.0526%" height="15" fill="rgb(254,142,4)" fg:x="3545" fg:w="7"/><text x="26.8641%" y="815.50"></text></g><g><title>&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::_execute::_{{closure}} (292 samples, 2.19%)</title><rect x="24.5345%" y="821" width="2.1922%" height="15" fill="rgb(230,229,49)" fg:x="3268" fg:w="292"/><text x="24.7845%" y="831.50">&lt;..</text></g><g><title>rutin::db::object::Object::new_str (8 samples, 0.06%)</title><rect x="26.6667%" y="805" width="0.0601%" height="15" fill="rgb(238,70,47)" fg:x="3552" fg:w="8"/><text x="26.9167%" y="815.50"></text></g><g><title>rutin::db::object::Object::new (5 samples, 0.04%)</title><rect x="26.6892%" y="789" width="0.0375%" height="15" fill="rgb(231,160,17)" fg:x="3555" fg:w="5"/><text x="26.9392%" y="799.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="26.7267%" y="821" width="0.0150%" height="15" fill="rgb(218,68,53)" fg:x="3560" fg:w="2"/><text x="26.9767%" y="831.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="26.7267%" y="805" width="0.0150%" height="15" fill="rgb(236,111,10)" fg:x="3560" fg:w="2"/><text x="26.9767%" y="815.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="26.7267%" y="789" width="0.0150%" height="15" fill="rgb(224,34,41)" fg:x="3560" fg:w="2"/><text x="26.9767%" y="799.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="26.7267%" y="773" width="0.0150%" height="15" fill="rgb(241,118,19)" fg:x="3560" fg:w="2"/><text x="26.9767%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::connection::Connection::write_frame::{{closure}}&gt; (7 samples, 0.05%)</title><rect x="26.7417%" y="821" width="0.0526%" height="15" fill="rgb(238,129,25)" fg:x="3562" fg:w="7"/><text x="26.9917%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::frame::Frame&gt; (7 samples, 0.05%)</title><rect x="26.7943%" y="821" width="0.0526%" height="15" fill="rgb(238,22,31)" fg:x="3569" fg:w="7"/><text x="27.0443%" y="831.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="26.8318%" y="805" width="0.0150%" height="15" fill="rgb(222,174,48)" fg:x="3574" fg:w="2"/><text x="27.0818%" y="815.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="26.8318%" y="789" width="0.0150%" height="15" fill="rgb(206,152,40)" fg:x="3574" fg:w="2"/><text x="27.0818%" y="799.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="26.8318%" y="773" width="0.0150%" height="15" fill="rgb(218,99,54)" fg:x="3574" fg:w="2"/><text x="27.0818%" y="783.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="26.8318%" y="757" width="0.0150%" height="15" fill="rgb(220,174,26)" fg:x="3574" fg:w="2"/><text x="27.0818%" y="767.50"></text></g><g><title>rutin::cmd::CmdExecutor::apply::_{{closure}} (453 samples, 3.40%)</title><rect x="23.4610%" y="853" width="3.4009%" height="15" fill="rgb(245,116,9)" fg:x="3125" fg:w="453"/><text x="23.7110%" y="863.50">rut..</text></g><g><title>rutin::cmd::CmdExecutor::execute::_{{closure}} (384 samples, 2.88%)</title><rect x="23.9790%" y="837" width="2.8829%" height="15" fill="rgb(209,72,35)" fg:x="3194" fg:w="384"/><text x="24.2290%" y="847.50">ru..</text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}} (2 samples, 0.02%)</title><rect x="26.8468%" y="821" width="0.0150%" height="15" fill="rgb(226,126,21)" fg:x="3576" fg:w="2"/><text x="27.0968%" y="831.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (803 samples, 6.03%)</title><rect x="20.9459%" y="1525" width="6.0285%" height="15" fill="rgb(227,192,1)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1535.50">tokio::r..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (803 samples, 6.03%)</title><rect x="20.9459%" y="1509" width="6.0285%" height="15" fill="rgb(237,180,29)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1519.50">tokio::l..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1493" width="6.0285%" height="15" fill="rgb(230,197,35)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1503.50">tokio::r..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (803 samples, 6.03%)</title><rect x="20.9459%" y="1477" width="6.0285%" height="15" fill="rgb(246,193,31)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1487.50">&lt;tokio::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1461" width="6.0285%" height="15" fill="rgb(241,36,4)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1471.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (803 samples, 6.03%)</title><rect x="20.9459%" y="1445" width="6.0285%" height="15" fill="rgb(241,130,17)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1455.50">tokio::r..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (803 samples, 6.03%)</title><rect x="20.9459%" y="1429" width="6.0285%" height="15" fill="rgb(206,137,32)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1439.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1413" width="6.0285%" height="15" fill="rgb(237,228,51)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1423.50">tokio::r..</text></g><g><title>tokio::runtime::context::set_scheduler (803 samples, 6.03%)</title><rect x="20.9459%" y="1397" width="6.0285%" height="15" fill="rgb(243,6,42)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1407.50">tokio::r..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (803 samples, 6.03%)</title><rect x="20.9459%" y="1381" width="6.0285%" height="15" fill="rgb(251,74,28)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1391.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (803 samples, 6.03%)</title><rect x="20.9459%" y="1365" width="6.0285%" height="15" fill="rgb(218,20,49)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1375.50">std::thr..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1349" width="6.0285%" height="15" fill="rgb(238,28,14)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1359.50">tokio::r..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (803 samples, 6.03%)</title><rect x="20.9459%" y="1333" width="6.0285%" height="15" fill="rgb(229,40,46)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1343.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1317" width="6.0285%" height="15" fill="rgb(244,195,20)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1327.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (803 samples, 6.03%)</title><rect x="20.9459%" y="1301" width="6.0285%" height="15" fill="rgb(253,56,35)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1311.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (803 samples, 6.03%)</title><rect x="20.9459%" y="1285" width="6.0285%" height="15" fill="rgb(210,149,44)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1295.50">tokio::r..</text></g><g><title>tokio::runtime::coop::budget (803 samples, 6.03%)</title><rect x="20.9459%" y="1269" width="6.0285%" height="15" fill="rgb(240,135,12)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1279.50">tokio::r..</text></g><g><title>tokio::runtime::coop::with_budget (803 samples, 6.03%)</title><rect x="20.9459%" y="1253" width="6.0285%" height="15" fill="rgb(251,24,50)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1263.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1237" width="6.0285%" height="15" fill="rgb(243,200,47)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1247.50">tokio::r..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (803 samples, 6.03%)</title><rect x="20.9459%" y="1221" width="6.0285%" height="15" fill="rgb(224,166,26)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1231.50">tokio::r..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (803 samples, 6.03%)</title><rect x="20.9459%" y="1205" width="6.0285%" height="15" fill="rgb(233,0,47)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1215.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (803 samples, 6.03%)</title><rect x="20.9459%" y="1189" width="6.0285%" height="15" fill="rgb(253,80,5)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1199.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (803 samples, 6.03%)</title><rect x="20.9459%" y="1173" width="6.0285%" height="15" fill="rgb(214,133,25)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1183.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::poll_future (803 samples, 6.03%)</title><rect x="20.9459%" y="1157" width="6.0285%" height="15" fill="rgb(209,27,14)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1167.50">tokio::r..</text></g><g><title>std::panic::catch_unwind (803 samples, 6.03%)</title><rect x="20.9459%" y="1141" width="6.0285%" height="15" fill="rgb(219,102,51)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1151.50">std::pan..</text></g><g><title>std::panicking::try (803 samples, 6.03%)</title><rect x="20.9459%" y="1125" width="6.0285%" height="15" fill="rgb(237,18,16)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1135.50">std::pan..</text></g><g><title>std::panicking::try::do_call (803 samples, 6.03%)</title><rect x="20.9459%" y="1109" width="6.0285%" height="15" fill="rgb(241,85,17)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1119.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (803 samples, 6.03%)</title><rect x="20.9459%" y="1093" width="6.0285%" height="15" fill="rgb(236,90,42)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1103.50">&lt;core::p..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1077" width="6.0285%" height="15" fill="rgb(249,57,21)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1087.50">tokio::r..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (803 samples, 6.03%)</title><rect x="20.9459%" y="1061" width="6.0285%" height="15" fill="rgb(243,12,36)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1071.50">tokio::r..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (803 samples, 6.03%)</title><rect x="20.9459%" y="1045" width="6.0285%" height="15" fill="rgb(253,128,47)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1055.50">tokio::l..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1029" width="6.0285%" height="15" fill="rgb(207,33,20)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1039.50">tokio::r..</text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="1013" width="6.0285%" height="15" fill="rgb(233,215,35)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1023.50">rutin::s..</text></g><g><title>rutin::server::Handler::run::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="997" width="6.0285%" height="15" fill="rgb(249,188,52)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="1007.50">rutin::s..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="981" width="6.0285%" height="15" fill="rgb(225,12,32)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="991.50">rutin::s..</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (803 samples, 6.03%)</title><rect x="20.9459%" y="965" width="6.0285%" height="15" fill="rgb(247,98,14)" fg:x="2790" fg:w="803"/><text x="21.1959%" y="975.50">rutin::s..</text></g><g><title>rutin::cmd::dispatch::_{{closure}} (567 samples, 4.26%)</title><rect x="22.7177%" y="949" width="4.2568%" height="15" fill="rgb(247,219,48)" fg:x="3026" fg:w="567"/><text x="22.9677%" y="959.50">rutin..</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}} (567 samples, 4.26%)</title><rect x="22.7177%" y="933" width="4.2568%" height="15" fill="rgb(253,60,48)" fg:x="3026" fg:w="567"/><text x="22.9677%" y="943.50">rutin..</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}} (567 samples, 4.26%)</title><rect x="22.7177%" y="917" width="4.2568%" height="15" fill="rgb(245,15,52)" fg:x="3026" fg:w="567"/><text x="22.9677%" y="927.50">rutin..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}} (567 samples, 4.26%)</title><rect x="22.7177%" y="901" width="4.2568%" height="15" fill="rgb(220,133,28)" fg:x="3026" fg:w="567"/><text x="22.9677%" y="911.50">rutin..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}} (567 samples, 4.26%)</title><rect x="22.7177%" y="885" width="4.2568%" height="15" fill="rgb(217,180,4)" fg:x="3026" fg:w="567"/><text x="22.9677%" y="895.50">rutin..</text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}} (567 samples, 4.26%)</title><rect x="22.7177%" y="869" width="4.2568%" height="15" fill="rgb(251,24,1)" fg:x="3026" fg:w="567"/><text x="22.9677%" y="879.50">rutin..</text></g><g><title>rutin::cmd::get_cmd_name_uppercase (15 samples, 0.11%)</title><rect x="26.8619%" y="853" width="0.1126%" height="15" fill="rgb(212,185,49)" fg:x="3578" fg:w="15"/><text x="27.1119%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (5 samples, 0.04%)</title><rect x="27.0871%" y="677" width="0.0375%" height="15" fill="rgb(215,175,22)" fg:x="3608" fg:w="5"/><text x="27.3371%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (5 samples, 0.04%)</title><rect x="27.0871%" y="661" width="0.0375%" height="15" fill="rgb(250,205,14)" fg:x="3608" fg:w="5"/><text x="27.3371%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (9 samples, 0.07%)</title><rect x="27.1246%" y="677" width="0.0676%" height="15" fill="rgb(225,211,22)" fg:x="3613" fg:w="9"/><text x="27.3746%" y="687.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="27.1772%" y="661" width="0.0150%" height="15" fill="rgb(251,179,42)" fg:x="3620" fg:w="2"/><text x="27.4272%" y="671.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.24%)</title><rect x="26.9745%" y="1349" width="0.2402%" height="15" fill="rgb(208,216,51)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="1333" width="0.2402%" height="15" fill="rgb(235,36,11)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (32 samples, 0.24%)</title><rect x="26.9745%" y="1317" width="0.2402%" height="15" fill="rgb(213,189,28)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1327.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (32 samples, 0.24%)</title><rect x="26.9745%" y="1301" width="0.2402%" height="15" fill="rgb(227,203,42)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="1285" width="0.2402%" height="15" fill="rgb(244,72,36)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1295.50"></text></g><g><title>tokio::runtime::context::set_scheduler (32 samples, 0.24%)</title><rect x="26.9745%" y="1269" width="0.2402%" height="15" fill="rgb(213,53,17)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.24%)</title><rect x="26.9745%" y="1253" width="0.2402%" height="15" fill="rgb(207,167,3)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.24%)</title><rect x="26.9745%" y="1237" width="0.2402%" height="15" fill="rgb(216,98,30)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1247.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="1221" width="0.2402%" height="15" fill="rgb(236,123,15)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1231.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (32 samples, 0.24%)</title><rect x="26.9745%" y="1205" width="0.2402%" height="15" fill="rgb(248,81,50)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="1189" width="0.2402%" height="15" fill="rgb(214,120,4)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (32 samples, 0.24%)</title><rect x="26.9745%" y="1173" width="0.2402%" height="15" fill="rgb(208,179,34)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (32 samples, 0.24%)</title><rect x="26.9745%" y="1157" width="0.2402%" height="15" fill="rgb(227,140,7)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1167.50"></text></g><g><title>tokio::runtime::coop::budget (32 samples, 0.24%)</title><rect x="26.9745%" y="1141" width="0.2402%" height="15" fill="rgb(214,22,6)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1151.50"></text></g><g><title>tokio::runtime::coop::with_budget (32 samples, 0.24%)</title><rect x="26.9745%" y="1125" width="0.2402%" height="15" fill="rgb(207,137,27)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="1109" width="0.2402%" height="15" fill="rgb(210,8,46)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1119.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (32 samples, 0.24%)</title><rect x="26.9745%" y="1093" width="0.2402%" height="15" fill="rgb(240,16,54)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (32 samples, 0.24%)</title><rect x="26.9745%" y="1077" width="0.2402%" height="15" fill="rgb(211,209,29)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (32 samples, 0.24%)</title><rect x="26.9745%" y="1061" width="0.2402%" height="15" fill="rgb(226,228,24)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (32 samples, 0.24%)</title><rect x="26.9745%" y="1045" width="0.2402%" height="15" fill="rgb(222,84,9)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (32 samples, 0.24%)</title><rect x="26.9745%" y="1029" width="0.2402%" height="15" fill="rgb(234,203,30)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.24%)</title><rect x="26.9745%" y="1013" width="0.2402%" height="15" fill="rgb(238,109,14)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1023.50"></text></g><g><title>std::panicking::try (32 samples, 0.24%)</title><rect x="26.9745%" y="997" width="0.2402%" height="15" fill="rgb(233,206,34)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.24%)</title><rect x="26.9745%" y="981" width="0.2402%" height="15" fill="rgb(220,167,47)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.24%)</title><rect x="26.9745%" y="965" width="0.2402%" height="15" fill="rgb(238,105,10)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="949" width="0.2402%" height="15" fill="rgb(213,227,17)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="959.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (32 samples, 0.24%)</title><rect x="26.9745%" y="933" width="0.2402%" height="15" fill="rgb(217,132,38)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="943.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (32 samples, 0.24%)</title><rect x="26.9745%" y="917" width="0.2402%" height="15" fill="rgb(242,146,4)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="901" width="0.2402%" height="15" fill="rgb(212,61,9)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="911.50"></text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="885" width="0.2402%" height="15" fill="rgb(247,126,22)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="895.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="869" width="0.2402%" height="15" fill="rgb(220,196,2)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="879.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="853" width="0.2402%" height="15" fill="rgb(208,46,4)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="863.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="837" width="0.2402%" height="15" fill="rgb(252,104,46)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="847.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (32 samples, 0.24%)</title><rect x="26.9745%" y="821" width="0.2402%" height="15" fill="rgb(237,152,48)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="831.50"></text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="805" width="0.2402%" height="15" fill="rgb(221,59,37)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="815.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="789" width="0.2402%" height="15" fill="rgb(209,202,51)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="799.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="773" width="0.2402%" height="15" fill="rgb(228,81,30)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="783.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="757" width="0.2402%" height="15" fill="rgb(227,42,39)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (32 samples, 0.24%)</title><rect x="26.9745%" y="741" width="0.2402%" height="15" fill="rgb(221,26,2)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="751.50"></text></g><g><title>rutin::connection::Connection::read_frames::_{{closure}}::_{{closure}}::_{{closure}}::_read_frame::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="725" width="0.2402%" height="15" fill="rgb(254,61,31)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="735.50"></text></g><g><title>rutin::connection::Connection::read_decimal::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="709" width="0.2402%" height="15" fill="rgb(222,173,38)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="719.50"></text></g><g><title>rutin::connection::Connection::read_line::_{{closure}} (32 samples, 0.24%)</title><rect x="26.9745%" y="693" width="0.2402%" height="15" fill="rgb(218,50,12)" fg:x="3593" fg:w="32"/><text x="27.2245%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2 samples, 0.02%)</title><rect x="27.1997%" y="677" width="0.0150%" height="15" fill="rgb(223,88,40)" fg:x="3623" fg:w="2"/><text x="27.4497%" y="687.50"></text></g><g><title>[libc.so.6] (37 samples, 0.28%)</title><rect x="27.4249%" y="1125" width="0.2778%" height="15" fill="rgb(237,54,19)" fg:x="3653" fg:w="37"/><text x="27.6749%" y="1135.50"></text></g><g><title>bytes::bytes_mut::increment_shared (41 samples, 0.31%)</title><rect x="27.9204%" y="1077" width="0.3078%" height="15" fill="rgb(251,129,25)" fg:x="3719" fg:w="41"/><text x="28.1704%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="28.2132%" y="1061" width="0.0150%" height="15" fill="rgb(238,97,19)" fg:x="3758" fg:w="2"/><text x="28.4632%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="28.2132%" y="1045" width="0.0150%" height="15" fill="rgb(240,169,18)" fg:x="3758" fg:w="2"/><text x="28.4632%" y="1055.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (49 samples, 0.37%)</title><rect x="27.8904%" y="1109" width="0.3679%" height="15" fill="rgb(230,187,49)" fg:x="3715" fg:w="49"/><text x="28.1404%" y="1119.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (46 samples, 0.35%)</title><rect x="27.9129%" y="1093" width="0.3453%" height="15" fill="rgb(209,44,26)" fg:x="3718" fg:w="46"/><text x="28.1629%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (4 samples, 0.03%)</title><rect x="28.2282%" y="1077" width="0.0300%" height="15" fill="rgb(244,0,6)" fg:x="3760" fg:w="4"/><text x="28.4782%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.03%)</title><rect x="28.2282%" y="1061" width="0.0300%" height="15" fill="rgb(248,18,21)" fg:x="3760" fg:w="4"/><text x="28.4782%" y="1071.50"></text></g><g><title>[libc.so.6] (13 samples, 0.10%)</title><rect x="28.2583%" y="1109" width="0.0976%" height="15" fill="rgb(245,180,19)" fg:x="3764" fg:w="13"/><text x="28.5083%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (21 samples, 0.16%)</title><rect x="28.3559%" y="1109" width="0.1577%" height="15" fill="rgb(252,118,36)" fg:x="3777" fg:w="21"/><text x="28.6059%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::db::event::Event&gt; (13 samples, 0.10%)</title><rect x="28.5135%" y="1109" width="0.0976%" height="15" fill="rgb(210,224,19)" fg:x="3798" fg:w="13"/><text x="28.7635%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;rutin::db::event::EventInner&gt; (5 samples, 0.04%)</title><rect x="28.5736%" y="1093" width="0.0375%" height="15" fill="rgb(218,30,24)" fg:x="3806" fg:w="5"/><text x="28.8236%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;flume::Sender&lt;rutin::frame::Frame&gt;&gt;&gt;&gt; (5 samples, 0.04%)</title><rect x="28.5736%" y="1077" width="0.0375%" height="15" fill="rgb(219,75,50)" fg:x="3806" fg:w="5"/><text x="28.8236%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="28.9039%" y="1061" width="0.0225%" height="15" fill="rgb(234,72,50)" fg:x="3850" fg:w="3"/><text x="29.1539%" y="1071.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="28.9039%" y="1045" width="0.0225%" height="15" fill="rgb(219,100,48)" fg:x="3850" fg:w="3"/><text x="29.1539%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.02%)</title><rect x="28.9039%" y="1029" width="0.0225%" height="15" fill="rgb(253,5,41)" fg:x="3850" fg:w="3"/><text x="29.1539%" y="1039.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="30.1351%" y="1029" width="0.0225%" height="15" fill="rgb(247,181,11)" fg:x="4014" fg:w="3"/><text x="30.3851%" y="1039.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="30.1351%" y="1013" width="0.0225%" height="15" fill="rgb(222,223,25)" fg:x="4014" fg:w="3"/><text x="30.3851%" y="1023.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="30.1351%" y="997" width="0.0225%" height="15" fill="rgb(214,198,28)" fg:x="4014" fg:w="3"/><text x="30.3851%" y="1007.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="30.1351%" y="981" width="0.0225%" height="15" fill="rgb(230,46,43)" fg:x="4014" fg:w="3"/><text x="30.3851%" y="991.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="30.1426%" y="965" width="0.0150%" height="15" fill="rgb(233,65,53)" fg:x="4015" fg:w="2"/><text x="30.3926%" y="975.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="30.1426%" y="949" width="0.0150%" height="15" fill="rgb(221,121,27)" fg:x="4015" fg:w="2"/><text x="30.3926%" y="959.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="30.1426%" y="933" width="0.0150%" height="15" fill="rgb(247,70,47)" fg:x="4015" fg:w="2"/><text x="30.3926%" y="943.50"></text></g><g><title>asm_sysvec_hyperv_callback (5 samples, 0.04%)</title><rect x="31.6667%" y="1013" width="0.0375%" height="15" fill="rgb(228,85,35)" fg:x="4218" fg:w="5"/><text x="31.9167%" y="1023.50"></text></g><g><title>sysvec_hyperv_callback (5 samples, 0.04%)</title><rect x="31.6667%" y="997" width="0.0375%" height="15" fill="rgb(209,50,18)" fg:x="4218" fg:w="5"/><text x="31.9167%" y="1007.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.04%)</title><rect x="31.6667%" y="981" width="0.0375%" height="15" fill="rgb(250,19,35)" fg:x="4218" fg:w="5"/><text x="31.9167%" y="991.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="31.6667%" y="965" width="0.0375%" height="15" fill="rgb(253,107,29)" fg:x="4218" fg:w="5"/><text x="31.9167%" y="975.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="31.6892%" y="949" width="0.0150%" height="15" fill="rgb(252,179,29)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="959.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="31.6892%" y="933" width="0.0150%" height="15" fill="rgb(238,194,6)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="943.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="31.6892%" y="917" width="0.0150%" height="15" fill="rgb(238,164,29)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="927.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="31.6892%" y="901" width="0.0150%" height="15" fill="rgb(224,25,9)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="911.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="31.6892%" y="885" width="0.0150%" height="15" fill="rgb(244,153,23)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="895.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="31.6892%" y="869" width="0.0150%" height="15" fill="rgb(212,203,14)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="879.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="31.6892%" y="853" width="0.0150%" height="15" fill="rgb(220,164,20)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="863.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="31.6892%" y="837" width="0.0150%" height="15" fill="rgb(222,203,48)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="847.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="31.6892%" y="821" width="0.0150%" height="15" fill="rgb(215,159,22)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="831.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="31.6892%" y="805" width="0.0150%" height="15" fill="rgb(216,183,47)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="815.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="31.6892%" y="789" width="0.0150%" height="15" fill="rgb(229,195,25)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="799.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="31.6892%" y="773" width="0.0150%" height="15" fill="rgb(224,132,51)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="783.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="31.6892%" y="757" width="0.0150%" height="15" fill="rgb(240,63,7)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="767.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="31.6892%" y="741" width="0.0150%" height="15" fill="rgb(249,182,41)" fg:x="4221" fg:w="2"/><text x="31.9392%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (14 samples, 0.11%)</title><rect x="31.9595%" y="949" width="0.1051%" height="15" fill="rgb(243,47,26)" fg:x="4257" fg:w="14"/><text x="32.2095%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.11%)</title><rect x="31.9595%" y="933" width="0.1051%" height="15" fill="rgb(233,48,2)" fg:x="4257" fg:w="14"/><text x="32.2095%" y="943.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="32.9054%" y="917" width="0.0225%" height="15" fill="rgb(244,165,34)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="927.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="32.9054%" y="901" width="0.0225%" height="15" fill="rgb(207,89,7)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="911.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="32.9054%" y="885" width="0.0225%" height="15" fill="rgb(244,117,36)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="895.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="32.9054%" y="869" width="0.0225%" height="15" fill="rgb(226,144,34)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="879.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="32.9054%" y="853" width="0.0225%" height="15" fill="rgb(213,23,19)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="863.50"></text></g><g><title>__napi_poll (3 samples, 0.02%)</title><rect x="32.9054%" y="837" width="0.0225%" height="15" fill="rgb(217,75,12)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="847.50"></text></g><g><title>netvsc_poll (3 samples, 0.02%)</title><rect x="32.9054%" y="821" width="0.0225%" height="15" fill="rgb(224,159,17)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="831.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="32.9054%" y="805" width="0.0225%" height="15" fill="rgb(217,118,1)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="815.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="32.9054%" y="789" width="0.0225%" height="15" fill="rgb(232,180,48)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="799.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="32.9054%" y="773" width="0.0225%" height="15" fill="rgb(230,27,33)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="783.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="32.9054%" y="757" width="0.0225%" height="15" fill="rgb(205,31,21)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="767.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="32.9054%" y="741" width="0.0225%" height="15" fill="rgb(253,59,4)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="751.50"></text></g><g><title>ip_sublist_rcv_finish (3 samples, 0.02%)</title><rect x="32.9054%" y="725" width="0.0225%" height="15" fill="rgb(224,201,9)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="735.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="32.9054%" y="709" width="0.0225%" height="15" fill="rgb(229,206,30)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="719.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.02%)</title><rect x="32.9054%" y="693" width="0.0225%" height="15" fill="rgb(212,67,47)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="703.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="32.9054%" y="677" width="0.0225%" height="15" fill="rgb(211,96,50)" fg:x="4383" fg:w="3"/><text x="33.1554%" y="687.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="32.9129%" y="661" width="0.0150%" height="15" fill="rgb(252,114,18)" fg:x="4384" fg:w="2"/><text x="33.1629%" y="671.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="32.9129%" y="645" width="0.0150%" height="15" fill="rgb(223,58,37)" fg:x="4384" fg:w="2"/><text x="33.1629%" y="655.50"></text></g><g><title>tcp_data_queue (2 samples, 0.02%)</title><rect x="32.9129%" y="629" width="0.0150%" height="15" fill="rgb(237,70,4)" fg:x="4384" fg:w="2"/><text x="33.1629%" y="639.50"></text></g><g><title>sock_def_readable (2 samples, 0.02%)</title><rect x="32.9129%" y="613" width="0.0150%" height="15" fill="rgb(244,85,46)" fg:x="4384" fg:w="2"/><text x="33.1629%" y="623.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="32.9129%" y="597" width="0.0150%" height="15" fill="rgb(223,39,52)" fg:x="4384" fg:w="2"/><text x="33.1629%" y="607.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (3 samples, 0.02%)</title><rect x="33.8138%" y="821" width="0.0225%" height="15" fill="rgb(218,200,14)" fg:x="4504" fg:w="3"/><text x="34.0638%" y="831.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="33.8363%" y="821" width="0.0150%" height="15" fill="rgb(208,171,16)" fg:x="4507" fg:w="2"/><text x="34.0863%" y="831.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="33.8363%" y="805" width="0.0150%" height="15" fill="rgb(234,200,18)" fg:x="4507" fg:w="2"/><text x="34.0863%" y="815.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="33.8363%" y="789" width="0.0150%" height="15" fill="rgb(228,45,11)" fg:x="4507" fg:w="2"/><text x="34.0863%" y="799.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="33.8363%" y="773" width="0.0150%" height="15" fill="rgb(237,182,11)" fg:x="4507" fg:w="2"/><text x="34.0863%" y="783.50"></text></g><g><title>plist_add (3 samples, 0.02%)</title><rect x="33.8514%" y="821" width="0.0225%" height="15" fill="rgb(241,175,49)" fg:x="4509" fg:w="3"/><text x="34.1014%" y="831.50"></text></g><g><title>ip_sublist_rcv_finish (4 samples, 0.03%)</title><rect x="38.3934%" y="581" width="0.0300%" height="15" fill="rgb(247,38,35)" fg:x="5114" fg:w="4"/><text x="38.6434%" y="591.50"></text></g><g><title>ip_local_deliver_finish (4 samples, 0.03%)</title><rect x="38.3934%" y="565" width="0.0300%" height="15" fill="rgb(228,39,49)" fg:x="5114" fg:w="4"/><text x="38.6434%" y="575.50"></text></g><g><title>ip_protocol_deliver_rcu (4 samples, 0.03%)</title><rect x="38.3934%" y="549" width="0.0300%" height="15" fill="rgb(226,101,26)" fg:x="5114" fg:w="4"/><text x="38.6434%" y="559.50"></text></g><g><title>tcp_v4_rcv (4 samples, 0.03%)</title><rect x="38.3934%" y="533" width="0.0300%" height="15" fill="rgb(206,141,19)" fg:x="5114" fg:w="4"/><text x="38.6434%" y="543.50"></text></g><g><title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="38.4009%" y="517" width="0.0225%" height="15" fill="rgb(211,200,13)" fg:x="5115" fg:w="3"/><text x="38.6509%" y="527.50"></text></g><g><title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="38.4009%" y="501" width="0.0225%" height="15" fill="rgb(241,121,6)" fg:x="5115" fg:w="3"/><text x="38.6509%" y="511.50"></text></g><g><title>tcp_data_queue (2 samples, 0.02%)</title><rect x="38.4084%" y="485" width="0.0150%" height="15" fill="rgb(234,221,29)" fg:x="5116" fg:w="2"/><text x="38.6584%" y="495.50"></text></g><g><title>sock_def_readable (2 samples, 0.02%)</title><rect x="38.4084%" y="469" width="0.0150%" height="15" fill="rgb(229,136,5)" fg:x="5116" fg:w="2"/><text x="38.6584%" y="479.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="38.4084%" y="453" width="0.0150%" height="15" fill="rgb(238,36,11)" fg:x="5116" fg:w="2"/><text x="38.6584%" y="463.50"></text></g><g><title>napi_complete_done (6 samples, 0.05%)</title><rect x="38.3859%" y="661" width="0.0450%" height="15" fill="rgb(251,55,41)" fg:x="5113" fg:w="6"/><text x="38.6359%" y="671.50"></text></g><g><title>netif_receive_skb_list_internal (6 samples, 0.05%)</title><rect x="38.3859%" y="645" width="0.0450%" height="15" fill="rgb(242,34,40)" fg:x="5113" fg:w="6"/><text x="38.6359%" y="655.50"></text></g><g><title>__netif_receive_skb_list_core (6 samples, 0.05%)</title><rect x="38.3859%" y="629" width="0.0450%" height="15" fill="rgb(215,42,17)" fg:x="5113" fg:w="6"/><text x="38.6359%" y="639.50"></text></g><g><title>ip_list_rcv (6 samples, 0.05%)</title><rect x="38.3859%" y="613" width="0.0450%" height="15" fill="rgb(207,44,46)" fg:x="5113" fg:w="6"/><text x="38.6359%" y="623.50"></text></g><g><title>ip_sublist_rcv (6 samples, 0.05%)</title><rect x="38.3859%" y="597" width="0.0450%" height="15" fill="rgb(211,206,28)" fg:x="5113" fg:w="6"/><text x="38.6359%" y="607.50"></text></g><g><title>rndis_filter_receive (4 samples, 0.03%)</title><rect x="38.4309%" y="661" width="0.0300%" height="15" fill="rgb(237,167,16)" fg:x="5119" fg:w="4"/><text x="38.6809%" y="671.50"></text></g><g><title>netvsc_recv_callback (4 samples, 0.03%)</title><rect x="38.4309%" y="645" width="0.0300%" height="15" fill="rgb(233,66,6)" fg:x="5119" fg:w="4"/><text x="38.6809%" y="655.50"></text></g><g><title>memcpy_erms (3 samples, 0.02%)</title><rect x="38.4384%" y="629" width="0.0225%" height="15" fill="rgb(246,123,29)" fg:x="5120" fg:w="3"/><text x="38.6884%" y="639.50"></text></g><g><title>__schedule (594 samples, 4.46%)</title><rect x="34.0165%" y="805" width="4.4595%" height="15" fill="rgb(209,62,40)" fg:x="4531" fg:w="594"/><text x="34.2665%" y="815.50">__sch..</text></g><g><title>finish_task_switch.isra.0 (578 samples, 4.34%)</title><rect x="34.1366%" y="789" width="4.3393%" height="15" fill="rgb(218,4,25)" fg:x="4547" fg:w="578"/><text x="34.3866%" y="799.50">finis..</text></g><g><title>asm_sysvec_hyperv_callback (21 samples, 0.16%)</title><rect x="38.3183%" y="773" width="0.1577%" height="15" fill="rgb(253,91,49)" fg:x="5104" fg:w="21"/><text x="38.5683%" y="783.50"></text></g><g><title>sysvec_hyperv_callback (21 samples, 0.16%)</title><rect x="38.3183%" y="757" width="0.1577%" height="15" fill="rgb(228,155,29)" fg:x="5104" fg:w="21"/><text x="38.5683%" y="767.50"></text></g><g><title>irq_exit_rcu (21 samples, 0.16%)</title><rect x="38.3183%" y="741" width="0.1577%" height="15" fill="rgb(243,57,37)" fg:x="5104" fg:w="21"/><text x="38.5683%" y="751.50"></text></g><g><title>__softirqentry_text_start (21 samples, 0.16%)</title><rect x="38.3183%" y="725" width="0.1577%" height="15" fill="rgb(244,167,17)" fg:x="5104" fg:w="21"/><text x="38.5683%" y="735.50"></text></g><g><title>net_rx_action (13 samples, 0.10%)</title><rect x="38.3784%" y="709" width="0.0976%" height="15" fill="rgb(207,181,38)" fg:x="5112" fg:w="13"/><text x="38.6284%" y="719.50"></text></g><g><title>__napi_poll (13 samples, 0.10%)</title><rect x="38.3784%" y="693" width="0.0976%" height="15" fill="rgb(211,8,23)" fg:x="5112" fg:w="13"/><text x="38.6284%" y="703.50"></text></g><g><title>netvsc_poll (13 samples, 0.10%)</title><rect x="38.3784%" y="677" width="0.0976%" height="15" fill="rgb(235,11,44)" fg:x="5112" fg:w="13"/><text x="38.6284%" y="687.50"></text></g><g><title>futex_wait_queue_me (655 samples, 4.92%)</title><rect x="33.5661%" y="837" width="4.9174%" height="15" fill="rgb(248,18,52)" fg:x="4471" fg:w="655"/><text x="33.8161%" y="847.50">futex_..</text></g><g><title>schedule (614 samples, 4.61%)</title><rect x="33.8739%" y="821" width="4.6096%" height="15" fill="rgb(208,4,7)" fg:x="4512" fg:w="614"/><text x="34.1239%" y="831.50">sched..</text></g><g><title>__get_user_nocheck_4 (17 samples, 0.13%)</title><rect x="38.7012%" y="821" width="0.1276%" height="15" fill="rgb(240,17,39)" fg:x="5155" fg:w="17"/><text x="38.9512%" y="831.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="38.8288%" y="821" width="0.0150%" height="15" fill="rgb(207,170,3)" fg:x="5172" fg:w="2"/><text x="39.0788%" y="831.50"></text></g><g><title>get_futex_key (7 samples, 0.05%)</title><rect x="38.8514%" y="821" width="0.0526%" height="15" fill="rgb(236,100,52)" fg:x="5175" fg:w="7"/><text x="39.1014%" y="831.50"></text></g><g><title>__x64_sys_futex (792 samples, 5.95%)</title><rect x="33.0030%" y="885" width="5.9459%" height="15" fill="rgb(246,78,51)" fg:x="4396" fg:w="792"/><text x="33.2530%" y="895.50">__x64_sy..</text></g><g><title>do_futex (775 samples, 5.82%)</title><rect x="33.1306%" y="869" width="5.8183%" height="15" fill="rgb(211,17,15)" fg:x="4413" fg:w="775"/><text x="33.3806%" y="879.50">do_futex</text></g><g><title>futex_wait (748 samples, 5.62%)</title><rect x="33.3333%" y="853" width="5.6156%" height="15" fill="rgb(209,59,46)" fg:x="4440" fg:w="748"/><text x="33.5833%" y="863.50">futex_w..</text></g><g><title>futex_wait_setup (62 samples, 0.47%)</title><rect x="38.4835%" y="837" width="0.4655%" height="15" fill="rgb(210,92,25)" fg:x="5126" fg:w="62"/><text x="38.7335%" y="847.50"></text></g><g><title>hash_futex (6 samples, 0.05%)</title><rect x="38.9039%" y="821" width="0.0450%" height="15" fill="rgb(238,174,52)" fg:x="5182" fg:w="6"/><text x="39.1539%" y="831.50"></text></g><g><title>syscall_enter_from_user_mode (19 samples, 0.14%)</title><rect x="38.9489%" y="885" width="0.1426%" height="15" fill="rgb(230,73,7)" fg:x="5188" fg:w="19"/><text x="39.1989%" y="895.50"></text></g><g><title>__get_user_8 (36 samples, 0.27%)</title><rect x="39.5571%" y="837" width="0.2703%" height="15" fill="rgb(243,124,40)" fg:x="5269" fg:w="36"/><text x="39.8071%" y="847.50"></text></g><g><title>__rseq_handle_notify_resume (81 samples, 0.61%)</title><rect x="39.3694%" y="853" width="0.6081%" height="15" fill="rgb(244,170,11)" fg:x="5244" fg:w="81"/><text x="39.6194%" y="863.50"></text></g><g><title>__put_user_nocheck_8 (20 samples, 0.15%)</title><rect x="39.8273%" y="837" width="0.1502%" height="15" fill="rgb(207,114,54)" fg:x="5305" fg:w="20"/><text x="40.0773%" y="847.50"></text></g><g><title>blkcg_maybe_throttle_current (9 samples, 0.07%)</title><rect x="39.9775%" y="853" width="0.0676%" height="15" fill="rgb(205,42,20)" fg:x="5325" fg:w="9"/><text x="40.2275%" y="863.50"></text></g><g><title>syscall_exit_to_user_mode (135 samples, 1.01%)</title><rect x="39.0916%" y="885" width="1.0135%" height="15" fill="rgb(230,30,28)" fg:x="5207" fg:w="135"/><text x="39.3416%" y="895.50"></text></g><g><title>exit_to_user_mode_prepare (133 samples, 1.00%)</title><rect x="39.1066%" y="869" width="0.9985%" height="15" fill="rgb(205,73,54)" fg:x="5209" fg:w="133"/><text x="39.3566%" y="879.50"></text></g><g><title>mem_cgroup_handle_over_high (8 samples, 0.06%)</title><rect x="40.0450%" y="853" width="0.0601%" height="15" fill="rgb(254,227,23)" fg:x="5334" fg:w="8"/><text x="40.2950%" y="863.50"></text></g><g><title>__seccomp_filter (7 samples, 0.05%)</title><rect x="40.1201%" y="869" width="0.0526%" height="15" fill="rgb(228,202,34)" fg:x="5344" fg:w="7"/><text x="40.3701%" y="879.50"></text></g><g><title>populate_seccomp_data (3 samples, 0.02%)</title><rect x="40.1502%" y="853" width="0.0225%" height="15" fill="rgb(222,225,37)" fg:x="5348" fg:w="3"/><text x="40.4002%" y="863.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1,116 samples, 8.38%)</title><rect x="31.8168%" y="965" width="8.3784%" height="15" fill="rgb(221,14,54)" fg:x="4238" fg:w="1116"/><text x="32.0668%" y="975.50">&lt;parking_lot..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1,083 samples, 8.13%)</title><rect x="32.0646%" y="949" width="8.1306%" height="15" fill="rgb(254,102,2)" fg:x="4271" fg:w="1083"/><text x="32.3146%" y="959.50">parking_lot..</text></g><g><title>syscall (1,048 samples, 7.87%)</title><rect x="32.3273%" y="933" width="7.8679%" height="15" fill="rgb(232,104,17)" fg:x="4306" fg:w="1048"/><text x="32.5773%" y="943.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (968 samples, 7.27%)</title><rect x="32.9279%" y="917" width="7.2673%" height="15" fill="rgb(250,220,14)" fg:x="4386" fg:w="968"/><text x="33.1779%" y="927.50">entry_SYSC..</text></g><g><title>do_syscall_64 (968 samples, 7.27%)</title><rect x="32.9279%" y="901" width="7.2673%" height="15" fill="rgb(241,158,9)" fg:x="4386" fg:w="968"/><text x="33.1779%" y="911.50">do_syscall..</text></g><g><title>syscall_trace_enter.constprop.0 (12 samples, 0.09%)</title><rect x="40.1051%" y="885" width="0.0901%" height="15" fill="rgb(246,9,43)" fg:x="5342" fg:w="12"/><text x="40.3551%" y="895.50"></text></g><g><title>__secure_computing (3 samples, 0.02%)</title><rect x="40.1727%" y="869" width="0.0225%" height="15" fill="rgb(206,73,33)" fg:x="5351" fg:w="3"/><text x="40.4227%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (10 samples, 0.08%)</title><rect x="40.1952%" y="965" width="0.0751%" height="15" fill="rgb(222,79,8)" fg:x="5354" fg:w="10"/><text x="40.4452%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.08%)</title><rect x="40.1952%" y="949" width="0.0751%" height="15" fill="rgb(234,8,54)" fg:x="5354" fg:w="10"/><text x="40.4452%" y="959.50"></text></g><g><title>core::mem::replace (9 samples, 0.07%)</title><rect x="40.2027%" y="933" width="0.0676%" height="15" fill="rgb(209,134,38)" fg:x="5355" fg:w="9"/><text x="40.4527%" y="943.50"></text></g><g><title>core::ptr::write (9 samples, 0.07%)</title><rect x="40.2027%" y="917" width="0.0676%" height="15" fill="rgb(230,127,29)" fg:x="5355" fg:w="9"/><text x="40.4527%" y="927.50"></text></g><g><title>dashmap::lock::RawRwLock::lock_exclusive_slow::_{{closure}} (28 samples, 0.21%)</title><rect x="40.2703%" y="965" width="0.2102%" height="15" fill="rgb(242,44,41)" fg:x="5364" fg:w="28"/><text x="40.5203%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (3 samples, 0.02%)</title><rect x="40.5105%" y="949" width="0.0225%" height="15" fill="rgb(222,56,43)" fg:x="5396" fg:w="3"/><text x="40.7605%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::hash (14 samples, 0.11%)</title><rect x="40.5330%" y="949" width="0.1051%" height="15" fill="rgb(238,39,47)" fg:x="5399" fg:w="14"/><text x="40.7830%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (88 samples, 0.66%)</title><rect x="41.2162%" y="917" width="0.6607%" height="15" fill="rgb(226,79,43)" fg:x="5490" fg:w="88"/><text x="41.4662%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (88 samples, 0.66%)</title><rect x="41.2162%" y="901" width="0.6607%" height="15" fill="rgb(242,105,53)" fg:x="5490" fg:w="88"/><text x="41.4662%" y="911.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="41.8619%" y="885" width="0.0150%" height="15" fill="rgb(251,132,46)" fg:x="5576" fg:w="2"/><text x="42.1119%" y="895.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="41.8619%" y="869" width="0.0150%" height="15" fill="rgb(231,77,14)" fg:x="5576" fg:w="2"/><text x="42.1119%" y="879.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="41.8619%" y="853" width="0.0150%" height="15" fill="rgb(240,135,9)" fg:x="5576" fg:w="2"/><text x="42.1119%" y="863.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="41.8619%" y="837" width="0.0150%" height="15" fill="rgb(248,109,14)" fg:x="5576" fg:w="2"/><text x="42.1119%" y="847.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="41.8619%" y="821" width="0.0150%" height="15" fill="rgb(227,146,52)" fg:x="5576" fg:w="2"/><text x="42.1119%" y="831.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="41.8619%" y="805" width="0.0150%" height="15" fill="rgb(232,54,3)" fg:x="5576" fg:w="2"/><text x="42.1119%" y="815.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="41.8619%" y="789" width="0.0150%" height="15" fill="rgb(229,201,43)" fg:x="5576" fg:w="2"/><text x="42.1119%" y="799.50"></text></g><g><title>rndis_filter_receive (2 samples, 0.02%)</title><rect x="41.8619%" y="773" width="0.0150%" height="15" fill="rgb(252,161,33)" fg:x="5576" fg:w="2"/><text x="42.1119%" y="783.50"></text></g><g><title>core::hint::spin_loop (34 samples, 0.26%)</title><rect x="41.8769%" y="885" width="0.2553%" height="15" fill="rgb(226,146,40)" fg:x="5578" fg:w="34"/><text x="42.1269%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (34 samples, 0.26%)</title><rect x="41.8769%" y="869" width="0.2553%" height="15" fill="rgb(219,47,25)" fg:x="5578" fg:w="34"/><text x="42.1269%" y="879.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (87 samples, 0.65%)</title><rect x="41.8769%" y="901" width="0.6532%" height="15" fill="rgb(250,135,13)" fg:x="5578" fg:w="87"/><text x="42.1269%" y="911.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (53 samples, 0.40%)</title><rect x="42.1321%" y="885" width="0.3979%" height="15" fill="rgb(219,229,18)" fg:x="5612" fg:w="53"/><text x="42.3821%" y="895.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (53 samples, 0.40%)</title><rect x="42.1321%" y="869" width="0.3979%" height="15" fill="rgb(217,152,27)" fg:x="5612" fg:w="53"/><text x="42.3821%" y="879.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="42.5150%" y="853" width="0.0150%" height="15" fill="rgb(225,71,47)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="863.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="42.5150%" y="837" width="0.0150%" height="15" fill="rgb(220,139,14)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="847.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="42.5150%" y="821" width="0.0150%" height="15" fill="rgb(247,54,32)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="831.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="42.5150%" y="805" width="0.0150%" height="15" fill="rgb(252,131,39)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="815.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="42.5150%" y="789" width="0.0150%" height="15" fill="rgb(210,108,39)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="799.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="42.5150%" y="773" width="0.0150%" height="15" fill="rgb(205,23,29)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="783.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="42.5150%" y="757" width="0.0150%" height="15" fill="rgb(246,139,46)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="767.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="42.5150%" y="741" width="0.0150%" height="15" fill="rgb(250,81,26)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="751.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="42.5150%" y="725" width="0.0150%" height="15" fill="rgb(214,104,7)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="735.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="42.5150%" y="709" width="0.0150%" height="15" fill="rgb(233,189,8)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="719.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="42.5150%" y="693" width="0.0150%" height="15" fill="rgb(228,141,17)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="703.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="42.5150%" y="677" width="0.0150%" height="15" fill="rgb(247,157,1)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="687.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="42.5150%" y="661" width="0.0150%" height="15" fill="rgb(249,225,5)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="671.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="42.5150%" y="645" width="0.0150%" height="15" fill="rgb(242,55,13)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="655.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="42.5150%" y="629" width="0.0150%" height="15" fill="rgb(230,49,50)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="639.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="42.5150%" y="613" width="0.0150%" height="15" fill="rgb(241,111,38)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="623.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="42.5150%" y="597" width="0.0150%" height="15" fill="rgb(252,155,4)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="607.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="42.5150%" y="581" width="0.0150%" height="15" fill="rgb(212,69,32)" fg:x="5663" fg:w="2"/><text x="42.7650%" y="591.50"></text></g><g><title>do_sched_yield (13 samples, 0.10%)</title><rect x="42.6126%" y="821" width="0.0976%" height="15" fill="rgb(243,107,47)" fg:x="5676" fg:w="13"/><text x="42.8626%" y="831.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="42.6952%" y="805" width="0.0150%" height="15" fill="rgb(247,130,12)" fg:x="5687" fg:w="2"/><text x="42.9452%" y="815.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="42.6952%" y="789" width="0.0150%" height="15" fill="rgb(233,74,16)" fg:x="5687" fg:w="2"/><text x="42.9452%" y="799.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="42.6952%" y="773" width="0.0150%" height="15" fill="rgb(208,58,18)" fg:x="5687" fg:w="2"/><text x="42.9452%" y="783.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="42.6952%" y="757" width="0.0150%" height="15" fill="rgb(242,225,1)" fg:x="5687" fg:w="2"/><text x="42.9452%" y="767.50"></text></g><g><title>__x64_sys_sched_yield (53 samples, 0.40%)</title><rect x="42.6051%" y="837" width="0.3979%" height="15" fill="rgb(249,39,40)" fg:x="5675" fg:w="53"/><text x="42.8551%" y="847.50"></text></g><g><title>schedule (39 samples, 0.29%)</title><rect x="42.7102%" y="821" width="0.2928%" height="15" fill="rgb(207,72,44)" fg:x="5689" fg:w="39"/><text x="42.9602%" y="831.50"></text></g><g><title>__schedule (38 samples, 0.29%)</title><rect x="42.7177%" y="805" width="0.2853%" height="15" fill="rgb(215,193,12)" fg:x="5690" fg:w="38"/><text x="42.9677%" y="815.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.02%)</title><rect x="42.9880%" y="789" width="0.0150%" height="15" fill="rgb(248,41,39)" fg:x="5726" fg:w="2"/><text x="43.2380%" y="799.50"></text></g><g><title>syscall_enter_from_user_mode (13 samples, 0.10%)</title><rect x="43.0030%" y="837" width="0.0976%" height="15" fill="rgb(253,85,4)" fg:x="5728" fg:w="13"/><text x="43.2530%" y="847.50"></text></g><g><title>__seccomp_filter (10 samples, 0.08%)</title><rect x="43.1081%" y="821" width="0.0751%" height="15" fill="rgb(243,70,31)" fg:x="5742" fg:w="10"/><text x="43.3581%" y="831.50"></text></g><g><title>populate_seccomp_data (2 samples, 0.02%)</title><rect x="43.1682%" y="805" width="0.0150%" height="15" fill="rgb(253,195,26)" fg:x="5750" fg:w="2"/><text x="43.4182%" y="815.50"></text></g><g><title>__sched_yield (90 samples, 0.68%)</title><rect x="42.5300%" y="885" width="0.6757%" height="15" fill="rgb(243,42,11)" fg:x="5665" fg:w="90"/><text x="42.7800%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (80 samples, 0.60%)</title><rect x="42.6051%" y="869" width="0.6006%" height="15" fill="rgb(239,66,17)" fg:x="5675" fg:w="80"/><text x="42.8551%" y="879.50"></text></g><g><title>do_syscall_64 (80 samples, 0.60%)</title><rect x="42.6051%" y="853" width="0.6006%" height="15" fill="rgb(217,132,21)" fg:x="5675" fg:w="80"/><text x="42.8551%" y="863.50"></text></g><g><title>syscall_trace_enter.constprop.0 (13 samples, 0.10%)</title><rect x="43.1081%" y="837" width="0.0976%" height="15" fill="rgb(252,202,21)" fg:x="5742" fg:w="13"/><text x="43.3581%" y="847.50"></text></g><g><title>__secure_computing (3 samples, 0.02%)</title><rect x="43.1832%" y="821" width="0.0225%" height="15" fill="rgb(233,98,36)" fg:x="5752" fg:w="3"/><text x="43.4332%" y="831.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (179 samples, 1.34%)</title><rect x="41.8769%" y="917" width="1.3438%" height="15" fill="rgb(216,153,54)" fg:x="5578" fg:w="179"/><text x="42.1269%" y="927.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (92 samples, 0.69%)</title><rect x="42.5300%" y="901" width="0.6907%" height="15" fill="rgb(250,99,7)" fg:x="5665" fg:w="92"/><text x="42.7800%" y="911.50"></text></g><g><title>std::thread::yield_now (2 samples, 0.02%)</title><rect x="43.2057%" y="885" width="0.0150%" height="15" fill="rgb(207,56,50)" fg:x="5755" fg:w="2"/><text x="43.4557%" y="895.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (2 samples, 0.02%)</title><rect x="43.2057%" y="869" width="0.0150%" height="15" fill="rgb(244,61,34)" fg:x="5755" fg:w="2"/><text x="43.4557%" y="879.50"></text></g><g><title>futex_wait_queue_me (33 samples, 0.25%)</title><rect x="43.3183%" y="757" width="0.2477%" height="15" fill="rgb(241,50,38)" fg:x="5770" fg:w="33"/><text x="43.5683%" y="767.50"></text></g><g><title>schedule (32 samples, 0.24%)</title><rect x="43.3258%" y="741" width="0.2402%" height="15" fill="rgb(212,166,30)" fg:x="5771" fg:w="32"/><text x="43.5758%" y="751.50"></text></g><g><title>__schedule (32 samples, 0.24%)</title><rect x="43.3258%" y="725" width="0.2402%" height="15" fill="rgb(249,127,32)" fg:x="5771" fg:w="32"/><text x="43.5758%" y="735.50"></text></g><g><title>finish_task_switch.isra.0 (32 samples, 0.24%)</title><rect x="43.3258%" y="709" width="0.2402%" height="15" fill="rgb(209,103,0)" fg:x="5771" fg:w="32"/><text x="43.5758%" y="719.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="43.5511%" y="693" width="0.0150%" height="15" fill="rgb(238,209,51)" fg:x="5801" fg:w="2"/><text x="43.8011%" y="703.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="43.5511%" y="677" width="0.0150%" height="15" fill="rgb(237,56,23)" fg:x="5801" fg:w="2"/><text x="43.8011%" y="687.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="43.5511%" y="661" width="0.0150%" height="15" fill="rgb(215,153,46)" fg:x="5801" fg:w="2"/><text x="43.8011%" y="671.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="43.5511%" y="645" width="0.0150%" height="15" fill="rgb(224,49,31)" fg:x="5801" fg:w="2"/><text x="43.8011%" y="655.50"></text></g><g><title>__x64_sys_futex (41 samples, 0.31%)</title><rect x="43.2883%" y="805" width="0.3078%" height="15" fill="rgb(250,18,42)" fg:x="5766" fg:w="41"/><text x="43.5383%" y="815.50"></text></g><g><title>do_futex (40 samples, 0.30%)</title><rect x="43.2958%" y="789" width="0.3003%" height="15" fill="rgb(215,176,39)" fg:x="5767" fg:w="40"/><text x="43.5458%" y="799.50"></text></g><g><title>futex_wait (38 samples, 0.29%)</title><rect x="43.3108%" y="773" width="0.2853%" height="15" fill="rgb(223,77,29)" fg:x="5769" fg:w="38"/><text x="43.5608%" y="783.50"></text></g><g><title>futex_wait_setup (4 samples, 0.03%)</title><rect x="43.5661%" y="757" width="0.0300%" height="15" fill="rgb(234,94,52)" fg:x="5803" fg:w="4"/><text x="43.8161%" y="767.50"></text></g><g><title>__get_user_nocheck_4 (3 samples, 0.02%)</title><rect x="43.5736%" y="741" width="0.0225%" height="15" fill="rgb(220,154,50)" fg:x="5804" fg:w="3"/><text x="43.8236%" y="751.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (50 samples, 0.38%)</title><rect x="43.2432%" y="885" width="0.3754%" height="15" fill="rgb(212,11,10)" fg:x="5760" fg:w="50"/><text x="43.4932%" y="895.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (48 samples, 0.36%)</title><rect x="43.2583%" y="869" width="0.3604%" height="15" fill="rgb(205,166,19)" fg:x="5762" fg:w="48"/><text x="43.5083%" y="879.50"></text></g><g><title>syscall (48 samples, 0.36%)</title><rect x="43.2583%" y="853" width="0.3604%" height="15" fill="rgb(244,198,16)" fg:x="5762" fg:w="48"/><text x="43.5083%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44 samples, 0.33%)</title><rect x="43.2883%" y="837" width="0.3303%" height="15" fill="rgb(219,69,12)" fg:x="5766" fg:w="44"/><text x="43.5383%" y="847.50"></text></g><g><title>do_syscall_64 (44 samples, 0.33%)</title><rect x="43.2883%" y="821" width="0.3303%" height="15" fill="rgb(245,30,7)" fg:x="5766" fg:w="44"/><text x="43.5383%" y="831.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="43.5961%" y="805" width="0.0225%" height="15" fill="rgb(218,221,48)" fg:x="5807" fg:w="3"/><text x="43.8461%" y="815.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.02%)</title><rect x="43.5961%" y="789" width="0.0225%" height="15" fill="rgb(216,66,15)" fg:x="5807" fg:w="3"/><text x="43.8461%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (420 samples, 3.15%)</title><rect x="40.4805%" y="965" width="3.1532%" height="15" fill="rgb(226,122,50)" fg:x="5392" fg:w="420"/><text x="40.7305%" y="975.50">par..</text></g><g><title>parking_lot_core::word_lock::WordLock::lock (399 samples, 3.00%)</title><rect x="40.6381%" y="949" width="2.9955%" height="15" fill="rgb(239,156,16)" fg:x="5413" fg:w="399"/><text x="40.8881%" y="959.50">par..</text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (346 samples, 2.60%)</title><rect x="41.0360%" y="933" width="2.5976%" height="15" fill="rgb(224,27,38)" fg:x="5466" fg:w="346"/><text x="41.2860%" y="943.50">pa..</text></g><g><title>parking_lot_core::word_lock::with_thread_data (55 samples, 0.41%)</title><rect x="43.2207%" y="917" width="0.4129%" height="15" fill="rgb(224,39,27)" fg:x="5757" fg:w="55"/><text x="43.4707%" y="927.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow::_{{closure}} (55 samples, 0.41%)</title><rect x="43.2207%" y="901" width="0.4129%" height="15" fill="rgb(215,92,29)" fg:x="5757" fg:w="55"/><text x="43.4707%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (39 samples, 0.29%)</title><rect x="43.6336%" y="949" width="0.2928%" height="15" fill="rgb(207,159,16)" fg:x="5812" fg:w="39"/><text x="43.8836%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (39 samples, 0.29%)</title><rect x="43.6336%" y="933" width="0.2928%" height="15" fill="rgb(238,163,47)" fg:x="5812" fg:w="39"/><text x="43.8836%" y="943.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="43.9114%" y="917" width="0.0150%" height="15" fill="rgb(219,91,49)" fg:x="5849" fg:w="2"/><text x="44.1614%" y="927.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="43.9114%" y="901" width="0.0150%" height="15" fill="rgb(227,167,31)" fg:x="5849" fg:w="2"/><text x="44.1614%" y="911.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="43.9114%" y="885" width="0.0150%" height="15" fill="rgb(234,80,54)" fg:x="5849" fg:w="2"/><text x="44.1614%" y="895.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="43.9114%" y="869" width="0.0150%" height="15" fill="rgb(212,114,2)" fg:x="5849" fg:w="2"/><text x="44.1614%" y="879.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="43.9114%" y="853" width="0.0150%" height="15" fill="rgb(234,50,24)" fg:x="5849" fg:w="2"/><text x="44.1614%" y="863.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="43.9114%" y="837" width="0.0150%" height="15" fill="rgb(221,68,8)" fg:x="5849" fg:w="2"/><text x="44.1614%" y="847.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="43.9114%" y="821" width="0.0150%" height="15" fill="rgb(254,180,31)" fg:x="5849" fg:w="2"/><text x="44.1614%" y="831.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock_slow (2 samples, 0.02%)</title><rect x="43.9264%" y="949" width="0.0150%" height="15" fill="rgb(247,130,50)" fg:x="5851" fg:w="2"/><text x="44.1764%" y="959.50"></text></g><g><title>mark_wake_futex (2 samples, 0.02%)</title><rect x="43.9715%" y="853" width="0.0150%" height="15" fill="rgb(211,109,4)" fg:x="5857" fg:w="2"/><text x="44.2215%" y="863.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="45.1276%" y="629" width="0.0150%" height="15" fill="rgb(238,50,21)" fg:x="6011" fg:w="2"/><text x="45.3776%" y="639.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="45.1276%" y="613" width="0.0150%" height="15" fill="rgb(225,57,45)" fg:x="6011" fg:w="2"/><text x="45.3776%" y="623.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="45.1276%" y="597" width="0.0150%" height="15" fill="rgb(209,196,50)" fg:x="6011" fg:w="2"/><text x="45.3776%" y="607.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="45.1276%" y="581" width="0.0150%" height="15" fill="rgb(242,140,13)" fg:x="6011" fg:w="2"/><text x="45.3776%" y="591.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="45.1276%" y="565" width="0.0150%" height="15" fill="rgb(217,111,7)" fg:x="6011" fg:w="2"/><text x="45.3776%" y="575.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="45.1276%" y="549" width="0.0150%" height="15" fill="rgb(253,193,51)" fg:x="6011" fg:w="2"/><text x="45.3776%" y="559.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="45.1201%" y="709" width="0.0300%" height="15" fill="rgb(252,70,29)" fg:x="6010" fg:w="4"/><text x="45.3701%" y="719.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="45.1201%" y="693" width="0.0300%" height="15" fill="rgb(232,127,12)" fg:x="6010" fg:w="4"/><text x="45.3701%" y="703.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="45.1201%" y="677" width="0.0300%" height="15" fill="rgb(211,180,21)" fg:x="6010" fg:w="4"/><text x="45.3701%" y="687.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="45.1201%" y="661" width="0.0300%" height="15" fill="rgb(229,72,13)" fg:x="6010" fg:w="4"/><text x="45.3701%" y="671.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="45.1201%" y="645" width="0.0300%" height="15" fill="rgb(240,211,49)" fg:x="6010" fg:w="4"/><text x="45.3701%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (1,787 samples, 13.42%)</title><rect x="31.7417%" y="981" width="13.4159%" height="15" fill="rgb(219,149,40)" fg:x="4228" fg:w="1787"/><text x="31.9917%" y="991.50">parking_lot_core::pa..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (203 samples, 1.52%)</title><rect x="43.6336%" y="965" width="1.5240%" height="15" fill="rgb(210,127,46)" fg:x="5812" fg:w="203"/><text x="43.8836%" y="975.50"></text></g><g><title>syscall (162 samples, 1.22%)</title><rect x="43.9414%" y="949" width="1.2162%" height="15" fill="rgb(220,106,7)" fg:x="5853" fg:w="162"/><text x="44.1914%" y="959.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (161 samples, 1.21%)</title><rect x="43.9489%" y="933" width="1.2087%" height="15" fill="rgb(249,31,22)" fg:x="5854" fg:w="161"/><text x="44.1989%" y="943.50"></text></g><g><title>do_syscall_64 (161 samples, 1.21%)</title><rect x="43.9489%" y="917" width="1.2087%" height="15" fill="rgb(253,1,49)" fg:x="5854" fg:w="161"/><text x="44.1989%" y="927.50"></text></g><g><title>__x64_sys_futex (161 samples, 1.21%)</title><rect x="43.9489%" y="901" width="1.2087%" height="15" fill="rgb(227,144,33)" fg:x="5854" fg:w="161"/><text x="44.1989%" y="911.50"></text></g><g><title>do_futex (161 samples, 1.21%)</title><rect x="43.9489%" y="885" width="1.2087%" height="15" fill="rgb(249,163,44)" fg:x="5854" fg:w="161"/><text x="44.1989%" y="895.50"></text></g><g><title>futex_wake (159 samples, 1.19%)</title><rect x="43.9640%" y="869" width="1.1937%" height="15" fill="rgb(234,15,39)" fg:x="5856" fg:w="159"/><text x="44.2140%" y="879.50"></text></g><g><title>wake_up_q (156 samples, 1.17%)</title><rect x="43.9865%" y="853" width="1.1712%" height="15" fill="rgb(207,66,16)" fg:x="5859" fg:w="156"/><text x="44.2365%" y="863.50"></text></g><g><title>try_to_wake_up (156 samples, 1.17%)</title><rect x="43.9865%" y="837" width="1.1712%" height="15" fill="rgb(233,112,24)" fg:x="5859" fg:w="156"/><text x="44.2365%" y="847.50"></text></g><g><title>asm_sysvec_hyperv_callback (17 samples, 0.13%)</title><rect x="45.0300%" y="821" width="0.1276%" height="15" fill="rgb(230,90,22)" fg:x="5998" fg:w="17"/><text x="45.2800%" y="831.50"></text></g><g><title>sysvec_hyperv_callback (17 samples, 0.13%)</title><rect x="45.0300%" y="805" width="0.1276%" height="15" fill="rgb(229,61,13)" fg:x="5998" fg:w="17"/><text x="45.2800%" y="815.50"></text></g><g><title>irq_exit_rcu (17 samples, 0.13%)</title><rect x="45.0300%" y="789" width="0.1276%" height="15" fill="rgb(225,57,24)" fg:x="5998" fg:w="17"/><text x="45.2800%" y="799.50"></text></g><g><title>__softirqentry_text_start (17 samples, 0.13%)</title><rect x="45.0300%" y="773" width="0.1276%" height="15" fill="rgb(208,169,48)" fg:x="5998" fg:w="17"/><text x="45.2800%" y="783.50"></text></g><g><title>net_rx_action (5 samples, 0.04%)</title><rect x="45.1201%" y="757" width="0.0375%" height="15" fill="rgb(244,218,51)" fg:x="6010" fg:w="5"/><text x="45.3701%" y="767.50"></text></g><g><title>__napi_poll (5 samples, 0.04%)</title><rect x="45.1201%" y="741" width="0.0375%" height="15" fill="rgb(214,148,10)" fg:x="6010" fg:w="5"/><text x="45.3701%" y="751.50"></text></g><g><title>netvsc_poll (5 samples, 0.04%)</title><rect x="45.1201%" y="725" width="0.0375%" height="15" fill="rgb(225,174,27)" fg:x="6010" fg:w="5"/><text x="45.3701%" y="735.50"></text></g><g><title>parking_lot_core::parking_lot::park (1,799 samples, 13.51%)</title><rect x="31.7192%" y="1013" width="13.5060%" height="15" fill="rgb(230,96,26)" fg:x="4225" fg:w="1799"/><text x="31.9692%" y="1023.50">parking_lot_core::pa..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,799 samples, 13.51%)</title><rect x="31.7192%" y="997" width="13.5060%" height="15" fill="rgb(232,10,30)" fg:x="4225" fg:w="1799"/><text x="31.9692%" y="1007.50">parking_lot_core::pa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.07%)</title><rect x="45.1577%" y="981" width="0.0676%" height="15" fill="rgb(222,8,50)" fg:x="6015" fg:w="9"/><text x="45.4077%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (9 samples, 0.07%)</title><rect x="45.1577%" y="965" width="0.0676%" height="15" fill="rgb(213,81,27)" fg:x="6015" fg:w="9"/><text x="45.4077%" y="975.50"></text></g><g><title>std::sys::pal::common::thread_local::fast_local::Key&lt;T&gt;::get (9 samples, 0.07%)</title><rect x="45.1577%" y="949" width="0.0676%" height="15" fill="rgb(245,50,10)" fg:x="6015" fg:w="9"/><text x="45.4077%" y="959.50"></text></g><g><title>std::sys::pal::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="45.2027%" y="933" width="0.0225%" height="15" fill="rgb(216,100,18)" fg:x="6021" fg:w="3"/><text x="45.4527%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="45.2027%" y="917" width="0.0225%" height="15" fill="rgb(236,147,54)" fg:x="6021" fg:w="3"/><text x="45.4527%" y="927.50"></text></g><g><title>core::hint::spin_loop (62 samples, 0.47%)</title><rect x="45.2553%" y="981" width="0.4655%" height="15" fill="rgb(205,143,26)" fg:x="6028" fg:w="62"/><text x="45.5053%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (62 samples, 0.47%)</title><rect x="45.2553%" y="965" width="0.4655%" height="15" fill="rgb(236,26,9)" fg:x="6028" fg:w="62"/><text x="45.5053%" y="975.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (216 samples, 1.62%)</title><rect x="45.2553%" y="997" width="1.6216%" height="15" fill="rgb(221,165,53)" fg:x="6028" fg:w="216"/><text x="45.5053%" y="1007.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (154 samples, 1.16%)</title><rect x="45.7207%" y="981" width="1.1562%" height="15" fill="rgb(214,110,17)" fg:x="6090" fg:w="154"/><text x="45.9707%" y="991.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (154 samples, 1.16%)</title><rect x="45.7207%" y="965" width="1.1562%" height="15" fill="rgb(237,197,12)" fg:x="6090" fg:w="154"/><text x="45.9707%" y="975.50"></text></g><g><title>asm_sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="46.8468%" y="949" width="0.0300%" height="15" fill="rgb(205,84,17)" fg:x="6240" fg:w="4"/><text x="47.0968%" y="959.50"></text></g><g><title>sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="46.8468%" y="933" width="0.0300%" height="15" fill="rgb(237,18,45)" fg:x="6240" fg:w="4"/><text x="47.0968%" y="943.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="46.8468%" y="917" width="0.0300%" height="15" fill="rgb(221,87,14)" fg:x="6240" fg:w="4"/><text x="47.0968%" y="927.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="46.8468%" y="901" width="0.0300%" height="15" fill="rgb(238,186,15)" fg:x="6240" fg:w="4"/><text x="47.0968%" y="911.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="46.8544%" y="885" width="0.0225%" height="15" fill="rgb(208,115,11)" fg:x="6241" fg:w="3"/><text x="47.1044%" y="895.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="46.8619%" y="869" width="0.0150%" height="15" fill="rgb(254,175,0)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="879.50"></text></g><g><title>netvsc_poll (2 samples, 0.02%)</title><rect x="46.8619%" y="853" width="0.0150%" height="15" fill="rgb(227,24,42)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="863.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="46.8619%" y="837" width="0.0150%" height="15" fill="rgb(223,211,37)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="847.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="46.8619%" y="821" width="0.0150%" height="15" fill="rgb(235,49,27)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="831.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="46.8619%" y="805" width="0.0150%" height="15" fill="rgb(254,97,51)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="815.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="46.8619%" y="789" width="0.0150%" height="15" fill="rgb(249,51,40)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="799.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="46.8619%" y="773" width="0.0150%" height="15" fill="rgb(210,128,45)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="783.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="46.8619%" y="757" width="0.0150%" height="15" fill="rgb(224,137,50)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="767.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="46.8619%" y="741" width="0.0150%" height="15" fill="rgb(242,15,9)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="751.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="46.8619%" y="725" width="0.0150%" height="15" fill="rgb(233,187,41)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="735.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="46.8619%" y="709" width="0.0150%" height="15" fill="rgb(227,2,29)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="719.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="46.8619%" y="693" width="0.0150%" height="15" fill="rgb(222,70,3)" fg:x="6242" fg:w="2"/><text x="47.1119%" y="703.50"></text></g><g><title>do_sched_yield (14 samples, 0.11%)</title><rect x="47.0195%" y="917" width="0.1051%" height="15" fill="rgb(213,11,42)" fg:x="6263" fg:w="14"/><text x="47.2695%" y="927.50"></text></g><g><title>__x64_sys_sched_yield (77 samples, 0.58%)</title><rect x="46.9970%" y="933" width="0.5781%" height="15" fill="rgb(225,150,9)" fg:x="6260" fg:w="77"/><text x="47.2470%" y="943.50"></text></g><g><title>schedule (60 samples, 0.45%)</title><rect x="47.1246%" y="917" width="0.4505%" height="15" fill="rgb(230,162,45)" fg:x="6277" fg:w="60"/><text x="47.3746%" y="927.50"></text></g><g><title>__schedule (58 samples, 0.44%)</title><rect x="47.1396%" y="901" width="0.4354%" height="15" fill="rgb(222,14,52)" fg:x="6279" fg:w="58"/><text x="47.3896%" y="911.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.05%)</title><rect x="47.5225%" y="885" width="0.0526%" height="15" fill="rgb(254,198,14)" fg:x="6330" fg:w="7"/><text x="47.7725%" y="895.50"></text></g><g><title>syscall_enter_from_user_mode (19 samples, 0.14%)</title><rect x="47.5751%" y="933" width="0.1426%" height="15" fill="rgb(220,217,30)" fg:x="6337" fg:w="19"/><text x="47.8251%" y="943.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.02%)</title><rect x="47.7177%" y="933" width="0.0150%" height="15" fill="rgb(215,146,41)" fg:x="6356" fg:w="2"/><text x="47.9677%" y="943.50"></text></g><g><title>__seccomp_filter (8 samples, 0.06%)</title><rect x="47.7402%" y="917" width="0.0601%" height="15" fill="rgb(217,27,36)" fg:x="6359" fg:w="8"/><text x="47.9902%" y="927.50"></text></g><g><title>populate_seccomp_data (2 samples, 0.02%)</title><rect x="47.7853%" y="901" width="0.0150%" height="15" fill="rgb(219,218,39)" fg:x="6365" fg:w="2"/><text x="48.0353%" y="911.50"></text></g><g><title>__sched_yield (124 samples, 0.93%)</title><rect x="46.8919%" y="981" width="0.9309%" height="15" fill="rgb(219,4,42)" fg:x="6246" fg:w="124"/><text x="47.1419%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (110 samples, 0.83%)</title><rect x="46.9970%" y="965" width="0.8258%" height="15" fill="rgb(249,119,36)" fg:x="6260" fg:w="110"/><text x="47.2470%" y="975.50"></text></g><g><title>do_syscall_64 (110 samples, 0.83%)</title><rect x="46.9970%" y="949" width="0.8258%" height="15" fill="rgb(209,23,33)" fg:x="6260" fg:w="110"/><text x="47.2470%" y="959.50"></text></g><g><title>syscall_trace_enter.constprop.0 (12 samples, 0.09%)</title><rect x="47.7327%" y="933" width="0.0901%" height="15" fill="rgb(211,10,0)" fg:x="6358" fg:w="12"/><text x="47.9827%" y="943.50"></text></g><g><title>__secure_computing (3 samples, 0.02%)</title><rect x="47.8003%" y="917" width="0.0225%" height="15" fill="rgb(208,99,37)" fg:x="6367" fg:w="3"/><text x="48.0503%" y="927.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_write_shard (2,523 samples, 18.94%)</title><rect x="28.9039%" y="1077" width="18.9414%" height="15" fill="rgb(213,132,31)" fg:x="3850" fg:w="2523"/><text x="29.1539%" y="1087.50">&lt;dashmap::DashMap&lt;K,V,S&gt; as da..</text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (2,520 samples, 18.92%)</title><rect x="28.9264%" y="1061" width="18.9189%" height="15" fill="rgb(243,129,40)" fg:x="3853" fg:w="2520"/><text x="29.1764%" y="1071.50">lock_api::rwlock::RwLock&lt;R,T&gt;:..</text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (2,520 samples, 18.92%)</title><rect x="28.9264%" y="1045" width="18.9189%" height="15" fill="rgb(210,66,33)" fg:x="3853" fg:w="2520"/><text x="29.1764%" y="1055.50">&lt;dashmap::lock::RawRwLock as l..</text></g><g><title>dashmap::lock::RawRwLock::lock_exclusive_slow (2,355 samples, 17.68%)</title><rect x="30.1652%" y="1029" width="17.6802%" height="15" fill="rgb(209,189,4)" fg:x="4018" fg:w="2355"/><text x="30.4152%" y="1039.50">dashmap::lock::RawRwLock::l..</text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (349 samples, 2.62%)</title><rect x="45.2252%" y="1013" width="2.6201%" height="15" fill="rgb(214,107,37)" fg:x="6024" fg:w="349"/><text x="45.4752%" y="1023.50">pa..</text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (129 samples, 0.97%)</title><rect x="46.8769%" y="997" width="0.9685%" height="15" fill="rgb(245,88,54)" fg:x="6244" fg:w="129"/><text x="47.1269%" y="1007.50"></text></g><g><title>std::thread::yield_now (3 samples, 0.02%)</title><rect x="47.8228%" y="981" width="0.0225%" height="15" fill="rgb(205,146,20)" fg:x="6370" fg:w="3"/><text x="48.0728%" y="991.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (3 samples, 0.02%)</title><rect x="47.8228%" y="965" width="0.0225%" height="15" fill="rgb(220,161,25)" fg:x="6370" fg:w="3"/><text x="48.0728%" y="975.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (10 samples, 0.08%)</title><rect x="47.8453%" y="1077" width="0.0751%" height="15" fill="rgb(215,152,15)" fg:x="6373" fg:w="10"/><text x="48.0953%" y="1087.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (10 samples, 0.08%)</title><rect x="47.8453%" y="1061" width="0.0751%" height="15" fill="rgb(233,192,44)" fg:x="6373" fg:w="10"/><text x="48.0953%" y="1071.50"></text></g><g><title>[libc.so.6] (37 samples, 0.28%)</title><rect x="47.9204%" y="1077" width="0.2778%" height="15" fill="rgb(240,170,46)" fg:x="6383" fg:w="37"/><text x="48.1704%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.11%)</title><rect x="48.2057%" y="1077" width="0.1051%" height="15" fill="rgb(207,104,33)" fg:x="6421" fg:w="14"/><text x="48.4557%" y="1087.50"></text></g><g><title>[libc.so.6] (12 samples, 0.09%)</title><rect x="48.2207%" y="1061" width="0.0901%" height="15" fill="rgb(219,21,39)" fg:x="6423" fg:w="12"/><text x="48.4707%" y="1071.50"></text></g><g><title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.02%)</title><rect x="51.0135%" y="885" width="0.0150%" height="15" fill="rgb(214,133,29)" fg:x="6795" fg:w="2"/><text x="51.2635%" y="895.50"></text></g><g><title>_raw_spin_lock (8 samples, 0.06%)</title><rect x="51.0285%" y="885" width="0.0601%" height="15" fill="rgb(226,93,6)" fg:x="6797" fg:w="8"/><text x="51.2785%" y="895.50"></text></g><g><title>__pv_queued_spin_lock_slowpath (4 samples, 0.03%)</title><rect x="51.0586%" y="869" width="0.0300%" height="15" fill="rgb(252,222,34)" fg:x="6801" fg:w="4"/><text x="51.3086%" y="879.50"></text></g><g><title>get_futex_key (4 samples, 0.03%)</title><rect x="51.0886%" y="885" width="0.0300%" height="15" fill="rgb(252,92,48)" fg:x="6805" fg:w="4"/><text x="51.3386%" y="895.50"></text></g><g><title>hash_futex (10 samples, 0.08%)</title><rect x="51.1186%" y="885" width="0.0751%" height="15" fill="rgb(245,223,24)" fg:x="6809" fg:w="10"/><text x="51.3686%" y="895.50"></text></g><g><title>mark_wake_futex (38 samples, 0.29%)</title><rect x="51.1937%" y="885" width="0.2853%" height="15" fill="rgb(205,176,3)" fg:x="6819" fg:w="38"/><text x="51.4437%" y="895.50"></text></g><g><title>__unqueue_futex (5 samples, 0.04%)</title><rect x="51.4414%" y="869" width="0.0375%" height="15" fill="rgb(235,151,15)" fg:x="6852" fg:w="5"/><text x="51.6914%" y="879.50"></text></g><g><title>wake_q_add_safe (14 samples, 0.11%)</title><rect x="51.4790%" y="885" width="0.1051%" height="15" fill="rgb(237,209,11)" fg:x="6857" fg:w="14"/><text x="51.7290%" y="895.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.02%)</title><rect x="85.9610%" y="661" width="0.0150%" height="15" fill="rgb(243,227,24)" fg:x="11450" fg:w="2"/><text x="86.2110%" y="671.50"></text></g><g><title>tcp_v4_early_demux (2 samples, 0.02%)</title><rect x="85.9610%" y="645" width="0.0150%" height="15" fill="rgb(239,193,16)" fg:x="11450" fg:w="2"/><text x="86.2110%" y="655.50"></text></g><g><title>__inet_lookup_established (2 samples, 0.02%)</title><rect x="85.9610%" y="629" width="0.0150%" height="15" fill="rgb(231,27,9)" fg:x="11450" fg:w="2"/><text x="86.2110%" y="639.50"></text></g><g><title>sk_filter_trim_cap (2 samples, 0.02%)</title><rect x="85.9985%" y="597" width="0.0150%" height="15" fill="rgb(219,169,10)" fg:x="11455" fg:w="2"/><text x="86.2485%" y="607.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.02%)</title><rect x="85.9985%" y="581" width="0.0150%" height="15" fill="rgb(244,229,43)" fg:x="11455" fg:w="2"/><text x="86.2485%" y="591.50"></text></g><g><title>sock_def_readable (2 samples, 0.02%)</title><rect x="86.0285%" y="565" width="0.0150%" height="15" fill="rgb(254,38,20)" fg:x="11459" fg:w="2"/><text x="86.2785%" y="575.50"></text></g><g><title>__kfree_skb (5 samples, 0.04%)</title><rect x="86.0511%" y="549" width="0.0375%" height="15" fill="rgb(250,47,30)" fg:x="11462" fg:w="5"/><text x="86.3011%" y="559.50"></text></g><g><title>skb_release_data (5 samples, 0.04%)</title><rect x="86.0511%" y="533" width="0.0375%" height="15" fill="rgb(224,124,36)" fg:x="11462" fg:w="5"/><text x="86.3011%" y="543.50"></text></g><g><title>kfree (3 samples, 0.02%)</title><rect x="86.0661%" y="517" width="0.0225%" height="15" fill="rgb(246,68,51)" fg:x="11464" fg:w="3"/><text x="86.3161%" y="527.50"></text></g><g><title>tcp_ack (8 samples, 0.06%)</title><rect x="86.0435%" y="565" width="0.0601%" height="15" fill="rgb(253,43,49)" fg:x="11461" fg:w="8"/><text x="86.2935%" y="575.50"></text></g><g><title>sock_def_readable (11 samples, 0.08%)</title><rect x="86.1186%" y="549" width="0.0826%" height="15" fill="rgb(219,54,36)" fg:x="11471" fg:w="11"/><text x="86.3686%" y="559.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.08%)</title><rect x="86.1261%" y="533" width="0.0751%" height="15" fill="rgb(227,133,34)" fg:x="11472" fg:w="10"/><text x="86.3761%" y="543.50"></text></g><g><title>ip_sublist_rcv_finish (31 samples, 0.23%)</title><rect x="85.9760%" y="661" width="0.2327%" height="15" fill="rgb(247,227,15)" fg:x="11452" fg:w="31"/><text x="86.2260%" y="671.50"></text></g><g><title>ip_local_deliver_finish (30 samples, 0.23%)</title><rect x="85.9835%" y="645" width="0.2252%" height="15" fill="rgb(229,96,14)" fg:x="11453" fg:w="30"/><text x="86.2335%" y="655.50"></text></g><g><title>ip_protocol_deliver_rcu (30 samples, 0.23%)</title><rect x="85.9835%" y="629" width="0.2252%" height="15" fill="rgb(220,79,17)" fg:x="11453" fg:w="30"/><text x="86.2335%" y="639.50"></text></g><g><title>tcp_v4_rcv (30 samples, 0.23%)</title><rect x="85.9835%" y="613" width="0.2252%" height="15" fill="rgb(205,131,53)" fg:x="11453" fg:w="30"/><text x="86.2335%" y="623.50"></text></g><g><title>tcp_v4_do_rcv (25 samples, 0.19%)</title><rect x="86.0210%" y="597" width="0.1877%" height="15" fill="rgb(209,50,29)" fg:x="11458" fg:w="25"/><text x="86.2710%" y="607.50"></text></g><g><title>tcp_rcv_established (25 samples, 0.19%)</title><rect x="86.0210%" y="581" width="0.1877%" height="15" fill="rgb(245,86,46)" fg:x="11458" fg:w="25"/><text x="86.2710%" y="591.50"></text></g><g><title>tcp_data_queue (13 samples, 0.10%)</title><rect x="86.1111%" y="565" width="0.0976%" height="15" fill="rgb(235,66,46)" fg:x="11470" fg:w="13"/><text x="86.3611%" y="575.50"></text></g><g><title>napi_complete_done (45 samples, 0.34%)</title><rect x="85.9234%" y="741" width="0.3378%" height="15" fill="rgb(232,148,31)" fg:x="11445" fg:w="45"/><text x="86.1734%" y="751.50"></text></g><g><title>netif_receive_skb_list_internal (44 samples, 0.33%)</title><rect x="85.9309%" y="725" width="0.3303%" height="15" fill="rgb(217,149,8)" fg:x="11446" fg:w="44"/><text x="86.1809%" y="735.50"></text></g><g><title>__netif_receive_skb_list_core (44 samples, 0.33%)</title><rect x="85.9309%" y="709" width="0.3303%" height="15" fill="rgb(209,183,11)" fg:x="11446" fg:w="44"/><text x="86.1809%" y="719.50"></text></g><g><title>ip_list_rcv (41 samples, 0.31%)</title><rect x="85.9535%" y="693" width="0.3078%" height="15" fill="rgb(208,55,20)" fg:x="11449" fg:w="41"/><text x="86.2035%" y="703.50"></text></g><g><title>ip_sublist_rcv (40 samples, 0.30%)</title><rect x="85.9610%" y="677" width="0.3003%" height="15" fill="rgb(218,39,14)" fg:x="11450" fg:w="40"/><text x="86.2110%" y="687.50"></text></g><g><title>nf_hook_slow_list (7 samples, 0.05%)</title><rect x="86.2087%" y="661" width="0.0526%" height="15" fill="rgb(216,169,33)" fg:x="11483" fg:w="7"/><text x="86.4587%" y="671.50"></text></g><g><title>nf_hook_slow (7 samples, 0.05%)</title><rect x="86.2087%" y="645" width="0.0526%" height="15" fill="rgb(233,80,24)" fg:x="11483" fg:w="7"/><text x="86.4587%" y="655.50"></text></g><g><title>nf_conntrack_in (5 samples, 0.04%)</title><rect x="86.2237%" y="629" width="0.0375%" height="15" fill="rgb(213,179,31)" fg:x="11485" fg:w="5"/><text x="86.4737%" y="639.50"></text></g><g><title>nf_conntrack_tcp_packet (3 samples, 0.02%)</title><rect x="86.2387%" y="613" width="0.0225%" height="15" fill="rgb(209,19,5)" fg:x="11487" fg:w="3"/><text x="86.4887%" y="623.50"></text></g><g><title>napi_consume_skb (2 samples, 0.02%)</title><rect x="86.2613%" y="741" width="0.0150%" height="15" fill="rgb(219,18,35)" fg:x="11490" fg:w="2"/><text x="86.5113%" y="751.50"></text></g><g><title>__alloc_skb (3 samples, 0.02%)</title><rect x="86.3213%" y="693" width="0.0225%" height="15" fill="rgb(209,169,16)" fg:x="11498" fg:w="3"/><text x="86.5713%" y="703.50"></text></g><g><title>kmalloc_order_trace (3 samples, 0.02%)</title><rect x="86.3213%" y="677" width="0.0225%" height="15" fill="rgb(245,90,51)" fg:x="11498" fg:w="3"/><text x="86.5713%" y="687.50"></text></g><g><title>kmalloc_order (3 samples, 0.02%)</title><rect x="86.3213%" y="661" width="0.0225%" height="15" fill="rgb(220,99,45)" fg:x="11498" fg:w="3"/><text x="86.5713%" y="671.50"></text></g><g><title>__alloc_pages (3 samples, 0.02%)</title><rect x="86.3213%" y="645" width="0.0225%" height="15" fill="rgb(249,89,25)" fg:x="11498" fg:w="3"/><text x="86.5713%" y="655.50"></text></g><g><title>__napi_alloc_skb (5 samples, 0.04%)</title><rect x="86.3138%" y="709" width="0.0375%" height="15" fill="rgb(239,193,0)" fg:x="11497" fg:w="5"/><text x="86.5638%" y="719.50"></text></g><g><title>memcpy_erms (4 samples, 0.03%)</title><rect x="86.3514%" y="709" width="0.0300%" height="15" fill="rgb(231,126,1)" fg:x="11502" fg:w="4"/><text x="86.6014%" y="719.50"></text></g><g><title>rndis_filter_receive (16 samples, 0.12%)</title><rect x="86.2763%" y="741" width="0.1201%" height="15" fill="rgb(243,166,3)" fg:x="11492" fg:w="16"/><text x="86.5263%" y="751.50"></text></g><g><title>netvsc_recv_callback (11 samples, 0.08%)</title><rect x="86.3138%" y="725" width="0.0826%" height="15" fill="rgb(223,22,34)" fg:x="11497" fg:w="11"/><text x="86.5638%" y="735.50"></text></g><g><title>napi_gro_receive (2 samples, 0.02%)</title><rect x="86.3814%" y="709" width="0.0150%" height="15" fill="rgb(251,52,51)" fg:x="11506" fg:w="2"/><text x="86.6314%" y="719.50"></text></g><g><title>dev_gro_receive (2 samples, 0.02%)</title><rect x="86.3814%" y="693" width="0.0150%" height="15" fill="rgb(221,165,28)" fg:x="11506" fg:w="2"/><text x="86.6314%" y="703.50"></text></g><g><title>send_recv_completions (3 samples, 0.02%)</title><rect x="86.3964%" y="741" width="0.0225%" height="15" fill="rgb(218,121,47)" fg:x="11508" fg:w="3"/><text x="86.6464%" y="751.50"></text></g><g><title>vmbus_sendpacket (3 samples, 0.02%)</title><rect x="86.3964%" y="725" width="0.0225%" height="15" fill="rgb(209,120,9)" fg:x="11508" fg:w="3"/><text x="86.6464%" y="735.50"></text></g><g><title>hv_ringbuffer_write (3 samples, 0.02%)</title><rect x="86.3964%" y="709" width="0.0225%" height="15" fill="rgb(236,68,12)" fg:x="11508" fg:w="3"/><text x="86.6464%" y="719.50"></text></g><g><title>asm_sysvec_hyperv_callback (345 samples, 2.59%)</title><rect x="83.8363%" y="853" width="2.5901%" height="15" fill="rgb(225,194,26)" fg:x="11167" fg:w="345"/><text x="84.0863%" y="863.50">as..</text></g><g><title>sysvec_hyperv_callback (345 samples, 2.59%)</title><rect x="83.8363%" y="837" width="2.5901%" height="15" fill="rgb(231,84,39)" fg:x="11167" fg:w="345"/><text x="84.0863%" y="847.50">sy..</text></g><g><title>irq_exit_rcu (345 samples, 2.59%)</title><rect x="83.8363%" y="821" width="2.5901%" height="15" fill="rgb(210,11,45)" fg:x="11167" fg:w="345"/><text x="84.0863%" y="831.50">ir..</text></g><g><title>__softirqentry_text_start (345 samples, 2.59%)</title><rect x="83.8363%" y="805" width="2.5901%" height="15" fill="rgb(224,54,52)" fg:x="11167" fg:w="345"/><text x="84.0863%" y="815.50">__..</text></g><g><title>net_rx_action (70 samples, 0.53%)</title><rect x="85.9009%" y="789" width="0.5255%" height="15" fill="rgb(238,102,14)" fg:x="11442" fg:w="70"/><text x="86.1509%" y="799.50"></text></g><g><title>__napi_poll (69 samples, 0.52%)</title><rect x="85.9084%" y="773" width="0.5180%" height="15" fill="rgb(243,160,52)" fg:x="11443" fg:w="69"/><text x="86.1584%" y="783.50"></text></g><g><title>netvsc_poll (69 samples, 0.52%)</title><rect x="85.9084%" y="757" width="0.5180%" height="15" fill="rgb(216,114,19)" fg:x="11443" fg:w="69"/><text x="86.1584%" y="767.50"></text></g><g><title>__x64_sys_futex (4,828 samples, 36.25%)</title><rect x="50.2177%" y="933" width="36.2462%" height="15" fill="rgb(244,166,37)" fg:x="6689" fg:w="4828"/><text x="50.4677%" y="943.50">__x64_sys_futex</text></g><g><title>do_futex (4,813 samples, 36.13%)</title><rect x="50.3303%" y="917" width="36.1336%" height="15" fill="rgb(246,29,44)" fg:x="6704" fg:w="4813"/><text x="50.5803%" y="927.50">do_futex</text></g><g><title>futex_wake (4,798 samples, 36.02%)</title><rect x="50.4429%" y="901" width="36.0210%" height="15" fill="rgb(215,56,53)" fg:x="6719" fg:w="4798"/><text x="50.6929%" y="911.50">futex_wake</text></g><g><title>wake_up_q (4,646 samples, 34.88%)</title><rect x="51.5841%" y="885" width="34.8799%" height="15" fill="rgb(217,60,2)" fg:x="6871" fg:w="4646"/><text x="51.8341%" y="895.50">wake_up_q</text></g><g><title>try_to_wake_up (4,634 samples, 34.79%)</title><rect x="51.6742%" y="869" width="34.7898%" height="15" fill="rgb(207,26,24)" fg:x="6883" fg:w="4634"/><text x="51.9242%" y="879.50">try_to_wake_up</text></g><g><title>asm_sysvec_hyperv_stimer0 (5 samples, 0.04%)</title><rect x="86.4264%" y="853" width="0.0375%" height="15" fill="rgb(252,210,15)" fg:x="11512" fg:w="5"/><text x="86.6764%" y="863.50"></text></g><g><title>sysvec_hyperv_stimer0 (5 samples, 0.04%)</title><rect x="86.4264%" y="837" width="0.0375%" height="15" fill="rgb(253,209,26)" fg:x="11512" fg:w="5"/><text x="86.6764%" y="847.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.04%)</title><rect x="86.4264%" y="821" width="0.0375%" height="15" fill="rgb(238,170,14)" fg:x="11512" fg:w="5"/><text x="86.6764%" y="831.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="86.4264%" y="805" width="0.0375%" height="15" fill="rgb(216,178,15)" fg:x="11512" fg:w="5"/><text x="86.6764%" y="815.50"></text></g><g><title>rcu_core (3 samples, 0.02%)</title><rect x="86.4414%" y="789" width="0.0225%" height="15" fill="rgb(250,197,2)" fg:x="11514" fg:w="3"/><text x="86.6914%" y="799.50"></text></g><g><title>syscall_enter_from_user_mode (22 samples, 0.17%)</title><rect x="86.4640%" y="933" width="0.1652%" height="15" fill="rgb(212,70,42)" fg:x="11517" fg:w="22"/><text x="86.7140%" y="943.50"></text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.08%)</title><rect x="86.6291%" y="933" width="0.0751%" height="15" fill="rgb(227,213,9)" fg:x="11539" fg:w="10"/><text x="86.8791%" y="943.50"></text></g><g><title>__seccomp_filter (22 samples, 0.17%)</title><rect x="86.7417%" y="917" width="0.1652%" height="15" fill="rgb(245,99,25)" fg:x="11554" fg:w="22"/><text x="86.9917%" y="927.50"></text></g><g><title>populate_seccomp_data (6 samples, 0.05%)</title><rect x="86.8619%" y="901" width="0.0450%" height="15" fill="rgb(250,82,29)" fg:x="11570" fg:w="6"/><text x="87.1119%" y="911.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (4,941 samples, 37.09%)</title><rect x="49.8423%" y="997" width="37.0946%" height="15" fill="rgb(241,226,54)" fg:x="6639" fg:w="4941"/><text x="50.0923%" y="1007.50">&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parki..</text></g><g><title>syscall (4,934 samples, 37.04%)</title><rect x="49.8949%" y="981" width="37.0420%" height="15" fill="rgb(221,99,41)" fg:x="6646" fg:w="4934"/><text x="50.1449%" y="991.50">syscall</text></g><g><title>entry_SYSCALL_64_after_hwframe (4,903 samples, 36.81%)</title><rect x="50.1276%" y="965" width="36.8093%" height="15" fill="rgb(213,90,21)" fg:x="6677" fg:w="4903"/><text x="50.3776%" y="975.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (4,903 samples, 36.81%)</title><rect x="50.1276%" y="949" width="36.8093%" height="15" fill="rgb(205,208,24)" fg:x="6677" fg:w="4903"/><text x="50.3776%" y="959.50">do_syscall_64</text></g><g><title>syscall_trace_enter.constprop.0 (31 samples, 0.23%)</title><rect x="86.7042%" y="933" width="0.2327%" height="15" fill="rgb(246,31,12)" fg:x="11549" fg:w="31"/><text x="86.9542%" y="943.50"></text></g><g><title>__secure_computing (4 samples, 0.03%)</title><rect x="86.9069%" y="917" width="0.0300%" height="15" fill="rgb(213,154,6)" fg:x="11576" fg:w="4"/><text x="87.1569%" y="927.50"></text></g><g><title>core::cmp::PartialOrd::gt (3 samples, 0.02%)</title><rect x="86.9444%" y="981" width="0.0225%" height="15" fill="rgb(222,163,29)" fg:x="11581" fg:w="3"/><text x="87.1944%" y="991.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="86.9444%" y="965" width="0.0225%" height="15" fill="rgb(227,201,8)" fg:x="11581" fg:w="3"/><text x="87.1944%" y="975.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="86.9444%" y="949" width="0.0225%" height="15" fill="rgb(233,9,32)" fg:x="11581" fg:w="3"/><text x="87.1944%" y="959.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="86.9444%" y="933" width="0.0225%" height="15" fill="rgb(217,54,24)" fg:x="11581" fg:w="3"/><text x="87.1944%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="86.9520%" y="917" width="0.0150%" height="15" fill="rgb(235,192,0)" fg:x="11582" fg:w="2"/><text x="87.2020%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (2 samples, 0.02%)</title><rect x="86.9520%" y="901" width="0.0150%" height="15" fill="rgb(235,45,9)" fg:x="11582" fg:w="2"/><text x="87.2020%" y="911.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (45 samples, 0.34%)</title><rect x="86.9670%" y="981" width="0.3378%" height="15" fill="rgb(246,42,40)" fg:x="11584" fg:w="45"/><text x="87.2170%" y="991.50"></text></g><g><title>clock_gettime (43 samples, 0.32%)</title><rect x="86.9820%" y="965" width="0.3228%" height="15" fill="rgb(248,111,24)" fg:x="11586" fg:w="43"/><text x="87.2320%" y="975.50"></text></g><g><title>__vdso_clock_gettime (25 samples, 0.19%)</title><rect x="87.1171%" y="949" width="0.1877%" height="15" fill="rgb(249,65,22)" fg:x="11604" fg:w="25"/><text x="87.3671%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (59 samples, 0.44%)</title><rect x="86.9444%" y="997" width="0.4429%" height="15" fill="rgb(238,111,51)" fg:x="11581" fg:w="59"/><text x="87.1944%" y="1007.50"></text></g><g><title>std::time::Instant::now (11 samples, 0.08%)</title><rect x="87.3048%" y="981" width="0.0826%" height="15" fill="rgb(250,118,22)" fg:x="11629" fg:w="11"/><text x="87.5548%" y="991.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (11 samples, 0.08%)</title><rect x="87.3048%" y="965" width="0.0826%" height="15" fill="rgb(234,84,26)" fg:x="11629" fg:w="11"/><text x="87.5548%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::hash (9 samples, 0.07%)</title><rect x="87.3949%" y="981" width="0.0676%" height="15" fill="rgb(243,172,12)" fg:x="11641" fg:w="9"/><text x="87.6449%" y="991.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="87.7703%" y="965" width="0.0150%" height="15" fill="rgb(236,150,49)" fg:x="11691" fg:w="2"/><text x="88.0203%" y="975.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="87.7703%" y="949" width="0.0150%" height="15" fill="rgb(225,197,26)" fg:x="11691" fg:w="2"/><text x="88.0203%" y="959.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="87.7703%" y="933" width="0.0150%" height="15" fill="rgb(214,17,42)" fg:x="11691" fg:w="2"/><text x="88.0203%" y="943.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="87.7703%" y="917" width="0.0150%" height="15" fill="rgb(224,165,40)" fg:x="11691" fg:w="2"/><text x="88.0203%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (29 samples, 0.22%)</title><rect x="87.8979%" y="949" width="0.2177%" height="15" fill="rgb(246,100,4)" fg:x="11708" fg:w="29"/><text x="88.1479%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.22%)</title><rect x="87.8979%" y="933" width="0.2177%" height="15" fill="rgb(222,103,0)" fg:x="11708" fg:w="29"/><text x="88.1479%" y="943.50"></text></g><g><title>core::hint::spin_loop (18 samples, 0.14%)</title><rect x="88.1156%" y="917" width="0.1351%" height="15" fill="rgb(227,189,26)" fg:x="11737" fg:w="18"/><text x="88.3656%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (18 samples, 0.14%)</title><rect x="88.1156%" y="901" width="0.1351%" height="15" fill="rgb(214,202,17)" fg:x="11737" fg:w="18"/><text x="88.3656%" y="911.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (50 samples, 0.38%)</title><rect x="88.1156%" y="933" width="0.3754%" height="15" fill="rgb(229,111,3)" fg:x="11737" fg:w="50"/><text x="88.3656%" y="943.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (32 samples, 0.24%)</title><rect x="88.2508%" y="917" width="0.2402%" height="15" fill="rgb(229,172,15)" fg:x="11755" fg:w="32"/><text x="88.5008%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (32 samples, 0.24%)</title><rect x="88.2508%" y="901" width="0.2402%" height="15" fill="rgb(230,224,35)" fg:x="11755" fg:w="32"/><text x="88.5008%" y="911.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="88.4760%" y="885" width="0.0150%" height="15" fill="rgb(251,141,6)" fg:x="11785" fg:w="2"/><text x="88.7260%" y="895.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="88.4760%" y="869" width="0.0150%" height="15" fill="rgb(225,208,6)" fg:x="11785" fg:w="2"/><text x="88.7260%" y="879.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="88.4760%" y="853" width="0.0150%" height="15" fill="rgb(246,181,16)" fg:x="11785" fg:w="2"/><text x="88.7260%" y="863.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="88.4760%" y="837" width="0.0150%" height="15" fill="rgb(227,129,36)" fg:x="11785" fg:w="2"/><text x="88.7260%" y="847.50"></text></g><g><title>do_sched_yield (4 samples, 0.03%)</title><rect x="88.5360%" y="853" width="0.0300%" height="15" fill="rgb(248,117,24)" fg:x="11793" fg:w="4"/><text x="88.7860%" y="863.50"></text></g><g><title>__x64_sys_sched_yield (21 samples, 0.16%)</title><rect x="88.5285%" y="869" width="0.1577%" height="15" fill="rgb(214,185,35)" fg:x="11792" fg:w="21"/><text x="88.7785%" y="879.50"></text></g><g><title>schedule (16 samples, 0.12%)</title><rect x="88.5661%" y="853" width="0.1201%" height="15" fill="rgb(236,150,34)" fg:x="11797" fg:w="16"/><text x="88.8161%" y="863.50"></text></g><g><title>__schedule (16 samples, 0.12%)</title><rect x="88.5661%" y="837" width="0.1201%" height="15" fill="rgb(243,228,27)" fg:x="11797" fg:w="16"/><text x="88.8161%" y="847.50"></text></g><g><title>syscall_enter_from_user_mode (2 samples, 0.02%)</title><rect x="88.6862%" y="869" width="0.0150%" height="15" fill="rgb(245,77,44)" fg:x="11813" fg:w="2"/><text x="88.9362%" y="879.50"></text></g><g><title>__seccomp_filter (6 samples, 0.05%)</title><rect x="88.7012%" y="853" width="0.0450%" height="15" fill="rgb(235,214,42)" fg:x="11815" fg:w="6"/><text x="88.9512%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (86 samples, 0.65%)</title><rect x="88.1156%" y="949" width="0.6456%" height="15" fill="rgb(221,74,3)" fg:x="11737" fg:w="86"/><text x="88.3656%" y="959.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (36 samples, 0.27%)</title><rect x="88.4910%" y="933" width="0.2703%" height="15" fill="rgb(206,121,29)" fg:x="11787" fg:w="36"/><text x="88.7410%" y="943.50"></text></g><g><title>__sched_yield (36 samples, 0.27%)</title><rect x="88.4910%" y="917" width="0.2703%" height="15" fill="rgb(249,131,53)" fg:x="11787" fg:w="36"/><text x="88.7410%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.23%)</title><rect x="88.5285%" y="901" width="0.2327%" height="15" fill="rgb(236,170,29)" fg:x="11792" fg:w="31"/><text x="88.7785%" y="911.50"></text></g><g><title>do_syscall_64 (31 samples, 0.23%)</title><rect x="88.5285%" y="885" width="0.2327%" height="15" fill="rgb(247,96,15)" fg:x="11792" fg:w="31"/><text x="88.7785%" y="895.50"></text></g><g><title>syscall_trace_enter.constprop.0 (8 samples, 0.06%)</title><rect x="88.7012%" y="869" width="0.0601%" height="15" fill="rgb(211,210,7)" fg:x="11815" fg:w="8"/><text x="88.9512%" y="879.50"></text></g><g><title>__secure_computing (2 samples, 0.02%)</title><rect x="88.7462%" y="853" width="0.0150%" height="15" fill="rgb(240,88,50)" fg:x="11821" fg:w="2"/><text x="88.9962%" y="863.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.15%)</title><rect x="88.8363%" y="837" width="0.1502%" height="15" fill="rgb(209,229,26)" fg:x="11833" fg:w="20"/><text x="89.0863%" y="847.50"></text></g><g><title>do_futex (20 samples, 0.15%)</title><rect x="88.8363%" y="821" width="0.1502%" height="15" fill="rgb(210,68,23)" fg:x="11833" fg:w="20"/><text x="89.0863%" y="831.50"></text></g><g><title>futex_wait (19 samples, 0.14%)</title><rect x="88.8438%" y="805" width="0.1426%" height="15" fill="rgb(229,180,13)" fg:x="11834" fg:w="19"/><text x="89.0938%" y="815.50"></text></g><g><title>futex_wait_queue_me (18 samples, 0.14%)</title><rect x="88.8514%" y="789" width="0.1351%" height="15" fill="rgb(236,53,44)" fg:x="11835" fg:w="18"/><text x="89.1014%" y="799.50"></text></g><g><title>schedule (18 samples, 0.14%)</title><rect x="88.8514%" y="773" width="0.1351%" height="15" fill="rgb(244,214,29)" fg:x="11835" fg:w="18"/><text x="89.1014%" y="783.50"></text></g><g><title>__schedule (18 samples, 0.14%)</title><rect x="88.8514%" y="757" width="0.1351%" height="15" fill="rgb(220,75,29)" fg:x="11835" fg:w="18"/><text x="89.1014%" y="767.50"></text></g><g><title>finish_task_switch.isra.0 (18 samples, 0.14%)</title><rect x="88.8514%" y="741" width="0.1351%" height="15" fill="rgb(214,183,37)" fg:x="11835" fg:w="18"/><text x="89.1014%" y="751.50"></text></g><g><title>__rseq_handle_notify_resume (3 samples, 0.02%)</title><rect x="88.9865%" y="805" width="0.0225%" height="15" fill="rgb(239,117,29)" fg:x="11853" fg:w="3"/><text x="89.2365%" y="815.50"></text></g><g><title>__get_user_8 (2 samples, 0.02%)</title><rect x="88.9940%" y="789" width="0.0150%" height="15" fill="rgb(237,171,35)" fg:x="11854" fg:w="2"/><text x="89.2440%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.03%)</title><rect x="88.9865%" y="837" width="0.0300%" height="15" fill="rgb(229,178,53)" fg:x="11853" fg:w="4"/><text x="89.2365%" y="847.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.03%)</title><rect x="88.9865%" y="821" width="0.0300%" height="15" fill="rgb(210,102,19)" fg:x="11853" fg:w="4"/><text x="89.2365%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (218 samples, 1.64%)</title><rect x="87.3874%" y="997" width="1.6366%" height="15" fill="rgb(235,127,22)" fg:x="11640" fg:w="218"/><text x="87.6374%" y="1007.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (208 samples, 1.56%)</title><rect x="87.4625%" y="981" width="1.5616%" height="15" fill="rgb(244,31,31)" fg:x="11650" fg:w="208"/><text x="87.7125%" y="991.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (165 samples, 1.24%)</title><rect x="87.7853%" y="965" width="1.2387%" height="15" fill="rgb(231,43,21)" fg:x="11693" fg:w="165"/><text x="88.0353%" y="975.50"></text></g><g><title>parking_lot_core::word_lock::with_thread_data (35 samples, 0.26%)</title><rect x="88.7613%" y="949" width="0.2628%" height="15" fill="rgb(217,131,35)" fg:x="11823" fg:w="35"/><text x="89.0113%" y="959.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow::_{{closure}} (35 samples, 0.26%)</title><rect x="88.7613%" y="933" width="0.2628%" height="15" fill="rgb(221,149,4)" fg:x="11823" fg:w="35"/><text x="89.0113%" y="943.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (31 samples, 0.23%)</title><rect x="88.7913%" y="917" width="0.2327%" height="15" fill="rgb(232,170,28)" fg:x="11827" fg:w="31"/><text x="89.0413%" y="927.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (29 samples, 0.22%)</title><rect x="88.8063%" y="901" width="0.2177%" height="15" fill="rgb(238,56,10)" fg:x="11829" fg:w="29"/><text x="89.0563%" y="911.50"></text></g><g><title>syscall (29 samples, 0.22%)</title><rect x="88.8063%" y="885" width="0.2177%" height="15" fill="rgb(235,196,14)" fg:x="11829" fg:w="29"/><text x="89.0563%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.19%)</title><rect x="88.8363%" y="869" width="0.1877%" height="15" fill="rgb(216,45,48)" fg:x="11833" fg:w="25"/><text x="89.0863%" y="879.50"></text></g><g><title>do_syscall_64 (25 samples, 0.19%)</title><rect x="88.8363%" y="853" width="0.1877%" height="15" fill="rgb(238,213,17)" fg:x="11833" fg:w="25"/><text x="89.0863%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.21%)</title><rect x="89.0240%" y="981" width="0.2102%" height="15" fill="rgb(212,13,2)" fg:x="11858" fg:w="28"/><text x="89.2740%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.21%)</title><rect x="89.0240%" y="965" width="0.2102%" height="15" fill="rgb(240,114,20)" fg:x="11858" fg:w="28"/><text x="89.2740%" y="975.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock_slow (3 samples, 0.02%)</title><rect x="89.2342%" y="981" width="0.0225%" height="15" fill="rgb(228,41,40)" fg:x="11886" fg:w="3"/><text x="89.4842%" y="991.50"></text></g><g><title>mark_wake_futex (2 samples, 0.02%)</title><rect x="89.3018%" y="885" width="0.0150%" height="15" fill="rgb(244,132,35)" fg:x="11895" fg:w="2"/><text x="89.5518%" y="895.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="91.1336%" y="661" width="0.0150%" height="15" fill="rgb(253,189,4)" fg:x="12139" fg:w="2"/><text x="91.3836%" y="671.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="91.1336%" y="645" width="0.0150%" height="15" fill="rgb(224,37,19)" fg:x="12139" fg:w="2"/><text x="91.3836%" y="655.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="91.1336%" y="629" width="0.0150%" height="15" fill="rgb(235,223,18)" fg:x="12139" fg:w="2"/><text x="91.3836%" y="639.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="91.1336%" y="613" width="0.0150%" height="15" fill="rgb(235,163,25)" fg:x="12139" fg:w="2"/><text x="91.3836%" y="623.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="91.1336%" y="597" width="0.0150%" height="15" fill="rgb(217,145,28)" fg:x="12139" fg:w="2"/><text x="91.3836%" y="607.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="91.1336%" y="581" width="0.0150%" height="15" fill="rgb(223,223,32)" fg:x="12139" fg:w="2"/><text x="91.3836%" y="591.50"></text></g><g><title>napi_complete_done (4 samples, 0.03%)</title><rect x="91.1336%" y="741" width="0.0300%" height="15" fill="rgb(227,189,39)" fg:x="12139" fg:w="4"/><text x="91.3836%" y="751.50"></text></g><g><title>netif_receive_skb_list_internal (4 samples, 0.03%)</title><rect x="91.1336%" y="725" width="0.0300%" height="15" fill="rgb(248,10,22)" fg:x="12139" fg:w="4"/><text x="91.3836%" y="735.50"></text></g><g><title>__netif_receive_skb_list_core (4 samples, 0.03%)</title><rect x="91.1336%" y="709" width="0.0300%" height="15" fill="rgb(248,46,39)" fg:x="12139" fg:w="4"/><text x="91.3836%" y="719.50"></text></g><g><title>ip_list_rcv (4 samples, 0.03%)</title><rect x="91.1336%" y="693" width="0.0300%" height="15" fill="rgb(248,113,48)" fg:x="12139" fg:w="4"/><text x="91.3836%" y="703.50"></text></g><g><title>ip_sublist_rcv (4 samples, 0.03%)</title><rect x="91.1336%" y="677" width="0.0300%" height="15" fill="rgb(245,16,25)" fg:x="12139" fg:w="4"/><text x="91.3836%" y="687.50"></text></g><g><title>nf_hook_slow_list (2 samples, 0.02%)</title><rect x="91.1486%" y="661" width="0.0150%" height="15" fill="rgb(249,152,16)" fg:x="12141" fg:w="2"/><text x="91.3986%" y="671.50"></text></g><g><title>nf_hook_slow (2 samples, 0.02%)</title><rect x="91.1486%" y="645" width="0.0150%" height="15" fill="rgb(250,16,1)" fg:x="12141" fg:w="2"/><text x="91.3986%" y="655.50"></text></g><g><title>__x64_sys_futex (254 samples, 1.91%)</title><rect x="89.2643%" y="933" width="1.9069%" height="15" fill="rgb(249,138,3)" fg:x="11890" fg:w="254"/><text x="89.5143%" y="943.50">_..</text></g><g><title>do_futex (253 samples, 1.90%)</title><rect x="89.2718%" y="917" width="1.8994%" height="15" fill="rgb(227,71,41)" fg:x="11891" fg:w="253"/><text x="89.5218%" y="927.50">d..</text></g><g><title>futex_wake (251 samples, 1.88%)</title><rect x="89.2868%" y="901" width="1.8844%" height="15" fill="rgb(209,184,23)" fg:x="11893" fg:w="251"/><text x="89.5368%" y="911.50">f..</text></g><g><title>wake_up_q (247 samples, 1.85%)</title><rect x="89.3168%" y="885" width="1.8544%" height="15" fill="rgb(223,215,31)" fg:x="11897" fg:w="247"/><text x="89.5668%" y="895.50">w..</text></g><g><title>try_to_wake_up (247 samples, 1.85%)</title><rect x="89.3168%" y="869" width="1.8544%" height="15" fill="rgb(210,146,28)" fg:x="11897" fg:w="247"/><text x="89.5668%" y="879.50">t..</text></g><g><title>asm_sysvec_hyperv_callback (22 samples, 0.17%)</title><rect x="91.0060%" y="853" width="0.1652%" height="15" fill="rgb(209,183,41)" fg:x="12122" fg:w="22"/><text x="91.2560%" y="863.50"></text></g><g><title>sysvec_hyperv_callback (22 samples, 0.17%)</title><rect x="91.0060%" y="837" width="0.1652%" height="15" fill="rgb(209,224,45)" fg:x="12122" fg:w="22"/><text x="91.2560%" y="847.50"></text></g><g><title>irq_exit_rcu (22 samples, 0.17%)</title><rect x="91.0060%" y="821" width="0.1652%" height="15" fill="rgb(224,209,51)" fg:x="12122" fg:w="22"/><text x="91.2560%" y="831.50"></text></g><g><title>__softirqentry_text_start (22 samples, 0.17%)</title><rect x="91.0060%" y="805" width="0.1652%" height="15" fill="rgb(223,17,39)" fg:x="12122" fg:w="22"/><text x="91.2560%" y="815.50"></text></g><g><title>net_rx_action (6 samples, 0.05%)</title><rect x="91.1261%" y="789" width="0.0450%" height="15" fill="rgb(234,204,37)" fg:x="12138" fg:w="6"/><text x="91.3761%" y="799.50"></text></g><g><title>__napi_poll (6 samples, 0.05%)</title><rect x="91.1261%" y="773" width="0.0450%" height="15" fill="rgb(236,120,5)" fg:x="12138" fg:w="6"/><text x="91.3761%" y="783.50"></text></g><g><title>netvsc_poll (6 samples, 0.05%)</title><rect x="91.1261%" y="757" width="0.0450%" height="15" fill="rgb(248,97,27)" fg:x="12138" fg:w="6"/><text x="91.3761%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;bytes::bytes::Bytes,dashmap::util::SharedValue&lt;rutin::db::object::Object&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (5,710 samples, 42.87%)</title><rect x="48.3108%" y="1077" width="42.8679%" height="15" fill="rgb(240,66,17)" fg:x="6435" fg:w="5710"/><text x="48.5608%" y="1087.50">core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;dashmap::l..</text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5,710 samples, 42.87%)</title><rect x="48.3108%" y="1061" width="42.8679%" height="15" fill="rgb(210,79,3)" fg:x="6435" fg:w="5710"/><text x="48.5608%" y="1071.50">&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::dr..</text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (5,710 samples, 42.87%)</title><rect x="48.3108%" y="1045" width="42.8679%" height="15" fill="rgb(214,176,27)" fg:x="6435" fg:w="5710"/><text x="48.5608%" y="1055.50">&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_excl..</text></g><g><title>dashmap::lock::RawRwLock::unlock_exclusive_slow (5,626 samples, 42.24%)</title><rect x="48.9414%" y="1029" width="42.2372%" height="15" fill="rgb(235,185,3)" fg:x="6519" fg:w="5626"/><text x="49.1914%" y="1039.50">dashmap::lock::RawRwLock::unlock_exclusive_slow</text></g><g><title>parking_lot_core::parking_lot::unpark_one (5,597 samples, 42.02%)</title><rect x="49.1592%" y="1013" width="42.0195%" height="15" fill="rgb(227,24,12)" fg:x="6548" fg:w="5597"/><text x="49.4092%" y="1023.50">parking_lot_core::parking_lot::unpark_one</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (287 samples, 2.15%)</title><rect x="89.0240%" y="997" width="2.1547%" height="15" fill="rgb(252,169,48)" fg:x="11858" fg:w="287"/><text x="89.2740%" y="1007.50">p..</text></g><g><title>syscall (256 samples, 1.92%)</title><rect x="89.2568%" y="981" width="1.9219%" height="15" fill="rgb(212,65,1)" fg:x="11889" fg:w="256"/><text x="89.5068%" y="991.50">s..</text></g><g><title>entry_SYSCALL_64_after_hwframe (255 samples, 1.91%)</title><rect x="89.2643%" y="965" width="1.9144%" height="15" fill="rgb(242,39,24)" fg:x="11890" fg:w="255"/><text x="89.5143%" y="975.50">e..</text></g><g><title>do_syscall_64 (255 samples, 1.91%)</title><rect x="89.2643%" y="949" width="1.9144%" height="15" fill="rgb(249,32,23)" fg:x="11890" fg:w="255"/><text x="89.5143%" y="959.50">d..</text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (11 samples, 0.08%)</title><rect x="91.2012%" y="1061" width="0.0826%" height="15" fill="rgb(251,195,23)" fg:x="12148" fg:w="11"/><text x="91.4512%" y="1071.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (11 samples, 0.08%)</title><rect x="91.2012%" y="1045" width="0.0826%" height="15" fill="rgb(236,174,8)" fg:x="12148" fg:w="11"/><text x="91.4512%" y="1055.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2 samples, 0.02%)</title><rect x="91.2838%" y="1029" width="0.0150%" height="15" fill="rgb(220,197,8)" fg:x="12159" fg:w="2"/><text x="91.5338%" y="1039.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (2 samples, 0.02%)</title><rect x="91.2838%" y="1013" width="0.0150%" height="15" fill="rgb(240,108,37)" fg:x="12159" fg:w="2"/><text x="91.5338%" y="1023.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.02%)</title><rect x="91.2838%" y="997" width="0.0150%" height="15" fill="rgb(232,176,24)" fg:x="12159" fg:w="2"/><text x="91.5338%" y="1007.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="91.2838%" y="981" width="0.0150%" height="15" fill="rgb(243,35,29)" fg:x="12159" fg:w="2"/><text x="91.5338%" y="991.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="91.2838%" y="965" width="0.0150%" height="15" fill="rgb(210,37,18)" fg:x="12159" fg:w="2"/><text x="91.5338%" y="975.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="91.2838%" y="949" width="0.0150%" height="15" fill="rgb(224,184,40)" fg:x="12159" fg:w="2"/><text x="91.5338%" y="959.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (5 samples, 0.04%)</title><rect x="91.3063%" y="997" width="0.0375%" height="15" fill="rgb(236,39,29)" fg:x="12162" fg:w="5"/><text x="91.5563%" y="1007.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (23 samples, 0.17%)</title><rect x="91.1787%" y="1077" width="0.1727%" height="15" fill="rgb(232,48,39)" fg:x="12145" fg:w="23"/><text x="91.4287%" y="1087.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::hash::Hash&gt;::hash (9 samples, 0.07%)</title><rect x="91.2838%" y="1061" width="0.0676%" height="15" fill="rgb(236,34,42)" fg:x="12159" fg:w="9"/><text x="91.5338%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.07%)</title><rect x="91.2838%" y="1045" width="0.0676%" height="15" fill="rgb(243,106,37)" fg:x="12159" fg:w="9"/><text x="91.5338%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (7 samples, 0.05%)</title><rect x="91.2988%" y="1029" width="0.0526%" height="15" fill="rgb(218,96,6)" fg:x="12161" fg:w="7"/><text x="91.5488%" y="1039.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (7 samples, 0.05%)</title><rect x="91.2988%" y="1013" width="0.0526%" height="15" fill="rgb(235,130,12)" fg:x="12161" fg:w="7"/><text x="91.5488%" y="1023.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="92.3574%" y="901" width="0.0225%" height="15" fill="rgb(231,95,0)" fg:x="12302" fg:w="3"/><text x="92.6074%" y="911.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="92.3574%" y="885" width="0.0225%" height="15" fill="rgb(228,12,23)" fg:x="12302" fg:w="3"/><text x="92.6074%" y="895.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="92.3574%" y="869" width="0.0225%" height="15" fill="rgb(216,12,1)" fg:x="12302" fg:w="3"/><text x="92.6074%" y="879.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="92.3649%" y="853" width="0.0150%" height="15" fill="rgb(219,59,3)" fg:x="12303" fg:w="2"/><text x="92.6149%" y="863.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="92.3649%" y="837" width="0.0150%" height="15" fill="rgb(215,208,46)" fg:x="12303" fg:w="2"/><text x="92.6149%" y="847.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="92.3649%" y="821" width="0.0150%" height="15" fill="rgb(254,224,29)" fg:x="12303" fg:w="2"/><text x="92.6149%" y="831.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="92.3649%" y="805" width="0.0150%" height="15" fill="rgb(232,14,29)" fg:x="12303" fg:w="2"/><text x="92.6149%" y="815.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="92.3649%" y="789" width="0.0150%" height="15" fill="rgb(208,45,52)" fg:x="12303" fg:w="2"/><text x="92.6149%" y="799.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="92.3649%" y="773" width="0.0150%" height="15" fill="rgb(234,191,28)" fg:x="12303" fg:w="2"/><text x="92.6149%" y="783.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="92.3649%" y="757" width="0.0150%" height="15" fill="rgb(244,67,43)" fg:x="12303" fg:w="2"/><text x="92.6149%" y="767.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="92.3649%" y="741" width="0.0150%" height="15" fill="rgb(236,189,24)" fg:x="12303" fg:w="2"/><text x="92.6149%" y="751.50"></text></g><g><title>core::ptr::read (125 samples, 0.94%)</title><rect x="91.4489%" y="1045" width="0.9384%" height="15" fill="rgb(239,214,33)" fg:x="12181" fg:w="125"/><text x="91.6989%" y="1055.50"></text></g><g><title>[libc.so.6] (115 samples, 0.86%)</title><rect x="91.5240%" y="1029" width="0.8634%" height="15" fill="rgb(226,176,41)" fg:x="12191" fg:w="115"/><text x="91.7740%" y="1039.50"></text></g><g><title>asm_sysvec_hyperv_callback (7 samples, 0.05%)</title><rect x="92.3348%" y="1013" width="0.0526%" height="15" fill="rgb(248,47,8)" fg:x="12299" fg:w="7"/><text x="92.5848%" y="1023.50"></text></g><g><title>sysvec_hyperv_callback (7 samples, 0.05%)</title><rect x="92.3348%" y="997" width="0.0526%" height="15" fill="rgb(218,81,44)" fg:x="12299" fg:w="7"/><text x="92.5848%" y="1007.50"></text></g><g><title>irq_exit_rcu (7 samples, 0.05%)</title><rect x="92.3348%" y="981" width="0.0526%" height="15" fill="rgb(213,98,6)" fg:x="12299" fg:w="7"/><text x="92.5848%" y="991.50"></text></g><g><title>__softirqentry_text_start (7 samples, 0.05%)</title><rect x="92.3348%" y="965" width="0.0526%" height="15" fill="rgb(222,85,22)" fg:x="12299" fg:w="7"/><text x="92.5848%" y="975.50"></text></g><g><title>net_rx_action (4 samples, 0.03%)</title><rect x="92.3574%" y="949" width="0.0300%" height="15" fill="rgb(239,46,39)" fg:x="12302" fg:w="4"/><text x="92.6074%" y="959.50"></text></g><g><title>__napi_poll (4 samples, 0.03%)</title><rect x="92.3574%" y="933" width="0.0300%" height="15" fill="rgb(237,12,29)" fg:x="12302" fg:w="4"/><text x="92.6074%" y="943.50"></text></g><g><title>netvsc_poll (4 samples, 0.03%)</title><rect x="92.3574%" y="917" width="0.0300%" height="15" fill="rgb(214,77,8)" fg:x="12302" fg:w="4"/><text x="92.6074%" y="927.50"></text></g><g><title>core::mem::replace (137 samples, 1.03%)</title><rect x="91.4489%" y="1061" width="1.0285%" height="15" fill="rgb(217,168,37)" fg:x="12181" fg:w="137"/><text x="91.6989%" y="1071.50"></text></g><g><title>core::ptr::write (12 samples, 0.09%)</title><rect x="92.3874%" y="1045" width="0.0901%" height="15" fill="rgb(221,217,23)" fg:x="12306" fg:w="12"/><text x="92.6374%" y="1055.50"></text></g><g><title>[libc.so.6] (10 samples, 0.08%)</title><rect x="92.4024%" y="1029" width="0.0751%" height="15" fill="rgb(243,229,36)" fg:x="12308" fg:w="10"/><text x="92.6524%" y="1039.50"></text></g><g><title>asm_sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="92.4625%" y="1013" width="0.0150%" height="15" fill="rgb(251,163,40)" fg:x="12316" fg:w="2"/><text x="92.7125%" y="1023.50"></text></g><g><title>sysvec_hyperv_callback (2 samples, 0.02%)</title><rect x="92.4625%" y="997" width="0.0150%" height="15" fill="rgb(237,222,12)" fg:x="12316" fg:w="2"/><text x="92.7125%" y="1007.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.02%)</title><rect x="92.4625%" y="981" width="0.0150%" height="15" fill="rgb(248,132,6)" fg:x="12316" fg:w="2"/><text x="92.7125%" y="991.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="92.4625%" y="965" width="0.0150%" height="15" fill="rgb(227,167,50)" fg:x="12316" fg:w="2"/><text x="92.7125%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (100 samples, 0.75%)</title><rect x="92.4775%" y="1061" width="0.7508%" height="15" fill="rgb(242,84,37)" fg:x="12318" fg:w="100"/><text x="92.7275%" y="1071.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (100 samples, 0.75%)</title><rect x="92.4775%" y="1045" width="0.7508%" height="15" fill="rgb(212,4,50)" fg:x="12318" fg:w="100"/><text x="92.7275%" y="1055.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (99 samples, 0.74%)</title><rect x="92.4850%" y="1029" width="0.7432%" height="15" fill="rgb(230,228,32)" fg:x="12319" fg:w="99"/><text x="92.7350%" y="1039.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (98 samples, 0.74%)</title><rect x="92.4925%" y="1013" width="0.7357%" height="15" fill="rgb(248,217,23)" fg:x="12320" fg:w="98"/><text x="92.7425%" y="1023.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (98 samples, 0.74%)</title><rect x="92.4925%" y="997" width="0.7357%" height="15" fill="rgb(238,197,32)" fg:x="12320" fg:w="98"/><text x="92.7425%" y="1007.50"></text></g><g><title>bytes::bytes_mut::release_shared (74 samples, 0.56%)</title><rect x="92.6727%" y="981" width="0.5556%" height="15" fill="rgb(236,106,1)" fg:x="12344" fg:w="74"/><text x="92.9227%" y="991.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="93.2282%" y="1045" width="0.0225%" height="15" fill="rgb(219,228,13)" fg:x="12418" fg:w="3"/><text x="93.4782%" y="1055.50"></text></g><g><title>ahash::operations::folded_multiply (3 samples, 0.02%)</title><rect x="93.2282%" y="1029" width="0.0225%" height="15" fill="rgb(238,30,35)" fg:x="12418" fg:w="3"/><text x="93.4782%" y="1039.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (3 samples, 0.02%)</title><rect x="93.2282%" y="1013" width="0.0225%" height="15" fill="rgb(236,70,23)" fg:x="12418" fg:w="3"/><text x="93.4782%" y="1023.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.05%)</title><rect x="93.2508%" y="1045" width="0.0450%" height="15" fill="rgb(249,104,48)" fg:x="12421" fg:w="6"/><text x="93.5008%" y="1055.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (6 samples, 0.05%)</title><rect x="93.2508%" y="1029" width="0.0450%" height="15" fill="rgb(254,117,50)" fg:x="12421" fg:w="6"/><text x="93.5008%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2 samples, 0.02%)</title><rect x="93.3033%" y="1013" width="0.0150%" height="15" fill="rgb(223,152,4)" fg:x="12428" fg:w="2"/><text x="93.5533%" y="1023.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (2 samples, 0.02%)</title><rect x="93.3033%" y="997" width="0.0150%" height="15" fill="rgb(245,6,2)" fg:x="12428" fg:w="2"/><text x="93.5533%" y="1007.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.02%)</title><rect x="93.3033%" y="981" width="0.0150%" height="15" fill="rgb(249,150,24)" fg:x="12428" fg:w="2"/><text x="93.5533%" y="991.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="93.3033%" y="965" width="0.0150%" height="15" fill="rgb(228,185,42)" fg:x="12428" fg:w="2"/><text x="93.5533%" y="975.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (23 samples, 0.17%)</title><rect x="93.3709%" y="981" width="0.1727%" height="15" fill="rgb(226,39,33)" fg:x="12437" fg:w="23"/><text x="93.6209%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (45 samples, 0.34%)</title><rect x="93.2282%" y="1061" width="0.3378%" height="15" fill="rgb(221,166,19)" fg:x="12418" fg:w="45"/><text x="93.4782%" y="1071.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::hash::Hash&gt;::hash (36 samples, 0.27%)</title><rect x="93.2958%" y="1045" width="0.2703%" height="15" fill="rgb(209,109,2)" fg:x="12427" fg:w="36"/><text x="93.5458%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (35 samples, 0.26%)</title><rect x="93.3033%" y="1029" width="0.2628%" height="15" fill="rgb(252,216,26)" fg:x="12428" fg:w="35"/><text x="93.5533%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (33 samples, 0.25%)</title><rect x="93.3183%" y="1013" width="0.2477%" height="15" fill="rgb(227,173,36)" fg:x="12430" fg:w="33"/><text x="93.5683%" y="1023.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (33 samples, 0.25%)</title><rect x="93.3183%" y="997" width="0.2477%" height="15" fill="rgb(209,90,7)" fg:x="12430" fg:w="33"/><text x="93.5683%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="93.5511%" y="981" width="0.0150%" height="15" fill="rgb(250,194,11)" fg:x="12461" fg:w="2"/><text x="93.8011%" y="991.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (20 samples, 0.15%)</title><rect x="93.5811%" y="1045" width="0.1502%" height="15" fill="rgb(220,72,50)" fg:x="12465" fg:w="20"/><text x="93.8311%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="93.7763%" y="1029" width="0.0300%" height="15" fill="rgb(222,106,48)" fg:x="12491" fg:w="4"/><text x="94.0263%" y="1039.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="93.7913%" y="1013" width="0.0150%" height="15" fill="rgb(216,220,45)" fg:x="12493" fg:w="2"/><text x="94.0413%" y="1023.50"></text></g><g><title>bytes::bytes::Bytes::as_slice (9 samples, 0.07%)</title><rect x="93.8664%" y="949" width="0.0676%" height="15" fill="rgb(234,112,18)" fg:x="12503" fg:w="9"/><text x="94.1164%" y="959.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (86 samples, 0.65%)</title><rect x="93.8138%" y="1013" width="0.6456%" height="15" fill="rgb(206,179,9)" fg:x="12496" fg:w="86"/><text x="94.0638%" y="1023.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (86 samples, 0.65%)</title><rect x="93.8138%" y="997" width="0.6456%" height="15" fill="rgb(215,115,40)" fg:x="12496" fg:w="86"/><text x="94.0638%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (86 samples, 0.65%)</title><rect x="93.8138%" y="981" width="0.6456%" height="15" fill="rgb(222,69,34)" fg:x="12496" fg:w="86"/><text x="94.0638%" y="991.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::cmp::PartialEq&gt;::eq (86 samples, 0.65%)</title><rect x="93.8138%" y="965" width="0.6456%" height="15" fill="rgb(209,161,10)" fg:x="12496" fg:w="86"/><text x="94.0638%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (70 samples, 0.53%)</title><rect x="93.9339%" y="949" width="0.5255%" height="15" fill="rgb(217,6,38)" fg:x="12512" fg:w="70"/><text x="94.1839%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (70 samples, 0.53%)</title><rect x="93.9339%" y="933" width="0.5255%" height="15" fill="rgb(229,229,48)" fg:x="12512" fg:w="70"/><text x="94.1839%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (70 samples, 0.53%)</title><rect x="93.9339%" y="917" width="0.5255%" height="15" fill="rgb(225,21,28)" fg:x="12512" fg:w="70"/><text x="94.1839%" y="927.50"></text></g><g><title>[libc.so.6] (63 samples, 0.47%)</title><rect x="93.9865%" y="901" width="0.4730%" height="15" fill="rgb(206,33,13)" fg:x="12519" fg:w="63"/><text x="94.2365%" y="911.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="94.4595%" y="1013" width="0.0225%" height="15" fill="rgb(242,178,17)" fg:x="12582" fg:w="3"/><text x="94.7095%" y="1023.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ptr (3 samples, 0.02%)</title><rect x="94.4595%" y="997" width="0.0225%" height="15" fill="rgb(220,162,5)" fg:x="12582" fg:w="3"/><text x="94.7095%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.02%)</title><rect x="94.4595%" y="981" width="0.0225%" height="15" fill="rgb(210,33,43)" fg:x="12582" fg:w="3"/><text x="94.7095%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="94.4595%" y="965" width="0.0225%" height="15" fill="rgb(216,116,54)" fg:x="12582" fg:w="3"/><text x="94.7095%" y="975.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (5 samples, 0.04%)</title><rect x="94.4820%" y="997" width="0.0375%" height="15" fill="rgb(249,92,24)" fg:x="12585" fg:w="5"/><text x="94.7320%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.04%)</title><rect x="94.4820%" y="981" width="0.0375%" height="15" fill="rgb(231,189,14)" fg:x="12585" fg:w="5"/><text x="94.7320%" y="991.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (96 samples, 0.72%)</title><rect x="93.8138%" y="1029" width="0.7207%" height="15" fill="rgb(230,8,41)" fg:x="12496" fg:w="96"/><text x="94.0638%" y="1039.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::bucket (7 samples, 0.05%)</title><rect x="94.4820%" y="1013" width="0.0526%" height="15" fill="rgb(249,7,27)" fg:x="12585" fg:w="7"/><text x="94.7320%" y="1023.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::data_end (2 samples, 0.02%)</title><rect x="94.5195%" y="997" width="0.0150%" height="15" fill="rgb(232,86,5)" fg:x="12590" fg:w="2"/><text x="94.7695%" y="1007.50"></text></g><g><title>hashbrown::raw::inner::h2 (2 samples, 0.02%)</title><rect x="94.5345%" y="1029" width="0.0150%" height="15" fill="rgb(224,175,18)" fg:x="12592" fg:w="2"/><text x="94.7845%" y="1039.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (8,798 samples, 66.05%)</title><rect x="28.6111%" y="1109" width="66.0511%" height="15" fill="rgb(220,129,12)" fg:x="3811" fg:w="8798"/><text x="28.8611%" y="1119.50">dashmap::DashMap&lt;K,V,S&gt;::insert</text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (8,798 samples, 66.05%)</title><rect x="28.6111%" y="1093" width="66.0511%" height="15" fill="rgb(210,19,36)" fg:x="3811" fg:w="8798"/><text x="28.8611%" y="1103.50">&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (441 samples, 3.31%)</title><rect x="91.3514%" y="1077" width="3.3108%" height="15" fill="rgb(219,96,14)" fg:x="12168" fg:w="441"/><text x="91.6014%" y="1087.50">has..</text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find_or_find_insert_slot (146 samples, 1.10%)</title><rect x="93.5661%" y="1061" width="1.0961%" height="15" fill="rgb(249,106,1)" fg:x="12463" fg:w="146"/><text x="93.8161%" y="1071.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_or_find_insert_slot_inner (124 samples, 0.93%)</title><rect x="93.7312%" y="1045" width="0.9309%" height="15" fill="rgb(249,155,20)" fg:x="12485" fg:w="124"/><text x="93.9812%" y="1055.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (15 samples, 0.11%)</title><rect x="94.5495%" y="1029" width="0.1126%" height="15" fill="rgb(244,168,9)" fg:x="12594" fg:w="15"/><text x="94.7995%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (15 samples, 0.11%)</title><rect x="94.5495%" y="1013" width="0.1126%" height="15" fill="rgb(216,23,50)" fg:x="12594" fg:w="15"/><text x="94.7995%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.11%)</title><rect x="94.5495%" y="997" width="0.1126%" height="15" fill="rgb(224,219,20)" fg:x="12594" fg:w="15"/><text x="94.7995%" y="1007.50"></text></g><g><title>napi_complete_done (2 samples, 0.02%)</title><rect x="95.1426%" y="885" width="0.0150%" height="15" fill="rgb(222,156,15)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="895.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.02%)</title><rect x="95.1426%" y="869" width="0.0150%" height="15" fill="rgb(231,97,17)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="879.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.02%)</title><rect x="95.1426%" y="853" width="0.0150%" height="15" fill="rgb(218,70,48)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="863.50"></text></g><g><title>ip_list_rcv (2 samples, 0.02%)</title><rect x="95.1426%" y="837" width="0.0150%" height="15" fill="rgb(212,196,52)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="847.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="95.1426%" y="821" width="0.0150%" height="15" fill="rgb(243,203,18)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="831.50"></text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="95.1426%" y="805" width="0.0150%" height="15" fill="rgb(252,125,41)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="815.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="95.1426%" y="789" width="0.0150%" height="15" fill="rgb(223,180,33)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="799.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="95.1426%" y="773" width="0.0150%" height="15" fill="rgb(254,159,46)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="783.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="95.1426%" y="757" width="0.0150%" height="15" fill="rgb(254,38,10)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="767.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="95.1426%" y="741" width="0.0150%" height="15" fill="rgb(208,217,32)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="751.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="95.1426%" y="725" width="0.0150%" height="15" fill="rgb(221,120,13)" fg:x="12673" fg:w="2"/><text x="95.3926%" y="735.50"></text></g><g><title>asm_sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="95.1426%" y="997" width="0.0225%" height="15" fill="rgb(246,54,52)" fg:x="12673" fg:w="3"/><text x="95.3926%" y="1007.50"></text></g><g><title>sysvec_hyperv_callback (3 samples, 0.02%)</title><rect x="95.1426%" y="981" width="0.0225%" height="15" fill="rgb(242,34,25)" fg:x="12673" fg:w="3"/><text x="95.3926%" y="991.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="95.1426%" y="965" width="0.0225%" height="15" fill="rgb(247,209,9)" fg:x="12673" fg:w="3"/><text x="95.3926%" y="975.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="95.1426%" y="949" width="0.0225%" height="15" fill="rgb(228,71,26)" fg:x="12673" fg:w="3"/><text x="95.3926%" y="959.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="95.1426%" y="933" width="0.0225%" height="15" fill="rgb(222,145,49)" fg:x="12673" fg:w="3"/><text x="95.3926%" y="943.50"></text></g><g><title>__napi_poll (3 samples, 0.02%)</title><rect x="95.1426%" y="917" width="0.0225%" height="15" fill="rgb(218,121,17)" fg:x="12673" fg:w="3"/><text x="95.3926%" y="927.50"></text></g><g><title>netvsc_poll (3 samples, 0.02%)</title><rect x="95.1426%" y="901" width="0.0225%" height="15" fill="rgb(244,50,7)" fg:x="12673" fg:w="3"/><text x="95.3926%" y="911.50"></text></g><g><title>core::mem::drop (3 samples, 0.02%)</title><rect x="95.1652%" y="997" width="0.0225%" height="15" fill="rgb(246,229,37)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (3 samples, 0.02%)</title><rect x="95.1652%" y="981" width="0.0225%" height="15" fill="rgb(225,18,5)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (3 samples, 0.02%)</title><rect x="95.1652%" y="965" width="0.0225%" height="15" fill="rgb(213,204,8)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.02%)</title><rect x="95.1652%" y="949" width="0.0225%" height="15" fill="rgb(238,103,6)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.02%)</title><rect x="95.1652%" y="933" width="0.0225%" height="15" fill="rgb(222,25,35)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="95.1652%" y="917" width="0.0225%" height="15" fill="rgb(213,203,35)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="95.1652%" y="901" width="0.0225%" height="15" fill="rgb(221,79,53)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="95.1652%" y="885" width="0.0225%" height="15" fill="rgb(243,200,35)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="895.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="95.1652%" y="869" width="0.0225%" height="15" fill="rgb(248,60,25)" fg:x="12676" fg:w="3"/><text x="95.4152%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (62 samples, 0.47%)</title><rect x="94.7297%" y="1093" width="0.4655%" height="15" fill="rgb(227,53,46)" fg:x="12618" fg:w="62"/><text x="94.9797%" y="1103.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (62 samples, 0.47%)</title><rect x="94.7297%" y="1077" width="0.4655%" height="15" fill="rgb(216,120,32)" fg:x="12618" fg:w="62"/><text x="94.9797%" y="1087.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (58 samples, 0.44%)</title><rect x="94.7598%" y="1061" width="0.4354%" height="15" fill="rgb(220,134,1)" fg:x="12622" fg:w="58"/><text x="95.0098%" y="1071.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (57 samples, 0.43%)</title><rect x="94.7673%" y="1045" width="0.4279%" height="15" fill="rgb(237,168,5)" fg:x="12623" fg:w="57"/><text x="95.0173%" y="1055.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (57 samples, 0.43%)</title><rect x="94.7673%" y="1029" width="0.4279%" height="15" fill="rgb(231,100,33)" fg:x="12623" fg:w="57"/><text x="95.0173%" y="1039.50"></text></g><g><title>bytes::bytes_mut::release_shared (43 samples, 0.32%)</title><rect x="94.8724%" y="1013" width="0.3228%" height="15" fill="rgb(236,177,47)" fg:x="12637" fg:w="43"/><text x="95.1224%" y="1023.50"></text></g><g><title>rutin::db::Db::update_expire_records (72 samples, 0.54%)</title><rect x="94.6622%" y="1109" width="0.5405%" height="15" fill="rgb(235,7,49)" fg:x="12609" fg:w="72"/><text x="94.9122%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.23%)</title><rect x="95.3679%" y="1093" width="0.2252%" height="15" fill="rgb(232,119,22)" fg:x="12703" fg:w="30"/><text x="95.6179%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (29 samples, 0.22%)</title><rect x="95.3754%" y="1077" width="0.2177%" height="15" fill="rgb(254,73,53)" fg:x="12704" fg:w="29"/><text x="95.6254%" y="1087.50"></text></g><g><title>rutin::db::event::Event::trigger_track_event (2 samples, 0.02%)</title><rect x="95.5931%" y="1093" width="0.0150%" height="15" fill="rgb(251,35,20)" fg:x="12733" fg:w="2"/><text x="95.8431%" y="1103.50"></text></g><g><title>rutin::db::event::Event::trigger_events (57 samples, 0.43%)</title><rect x="95.2027%" y="1109" width="0.4279%" height="15" fill="rgb(241,119,20)" fg:x="12681" fg:w="57"/><text x="95.4527%" y="1119.50"></text></g><g><title>rutin::db::event::Event::trigger_update_event (3 samples, 0.02%)</title><rect x="95.6081%" y="1093" width="0.0225%" height="15" fill="rgb(207,102,14)" fg:x="12735" fg:w="3"/><text x="95.8581%" y="1103.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (3 samples, 0.02%)</title><rect x="95.6081%" y="1077" width="0.0225%" height="15" fill="rgb(248,201,50)" fg:x="12735" fg:w="3"/><text x="95.8581%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="95.6081%" y="1061" width="0.0225%" height="15" fill="rgb(222,185,44)" fg:x="12735" fg:w="3"/><text x="95.8581%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="95.6081%" y="1045" width="0.0225%" height="15" fill="rgb(218,107,18)" fg:x="12735" fg:w="3"/><text x="95.8581%" y="1055.50"></text></g><g><title>rutin::db::Db::insert_object::_{{closure}} (9,053 samples, 67.97%)</title><rect x="27.7027%" y="1125" width="67.9655%" height="15" fill="rgb(237,177,39)" fg:x="3690" fg:w="9053"/><text x="27.9527%" y="1135.50">rutin::db::Db::insert_object::_{{closure}}</text></g><g><title>rutin::db::object::ObjectInner::expire (4 samples, 0.03%)</title><rect x="95.6381%" y="1109" width="0.0300%" height="15" fill="rgb(246,69,6)" fg:x="12739" fg:w="4"/><text x="95.8881%" y="1119.50"></text></g><g><title>&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::_execute::_{{closure}} (9,119 samples, 68.46%)</title><rect x="27.2147%" y="1157" width="68.4610%" height="15" fill="rgb(234,208,37)" fg:x="3625" fg:w="9119"/><text x="27.4647%" y="1167.50">&lt;rutin::cmd::commands::str::Set as rutin::cmd::CmdExecutor&gt;::_execute::_{{closure}}</text></g><g><title>rutin::db::Db::insert_object (9,119 samples, 68.46%)</title><rect x="27.2147%" y="1141" width="68.4610%" height="15" fill="rgb(225,4,6)" fg:x="3625" fg:w="9119"/><text x="27.4647%" y="1151.50">rutin::db::Db::insert_object</text></g><g><title>ip_sublist_rcv_finish (2 samples, 0.02%)</title><rect x="96.5691%" y="885" width="0.0150%" height="15" fill="rgb(233,45,0)" fg:x="12863" fg:w="2"/><text x="96.8191%" y="895.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="96.5691%" y="869" width="0.0150%" height="15" fill="rgb(226,136,5)" fg:x="12863" fg:w="2"/><text x="96.8191%" y="879.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="96.5691%" y="853" width="0.0150%" height="15" fill="rgb(211,91,47)" fg:x="12863" fg:w="2"/><text x="96.8191%" y="863.50"></text></g><g><title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="96.5691%" y="837" width="0.0150%" height="15" fill="rgb(242,88,51)" fg:x="12863" fg:w="2"/><text x="96.8191%" y="847.50"></text></g><g><title>tcp_v4_do_rcv (2 samples, 0.02%)</title><rect x="96.5691%" y="821" width="0.0150%" height="15" fill="rgb(230,91,28)" fg:x="12863" fg:w="2"/><text x="96.8191%" y="831.50"></text></g><g><title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="96.5691%" y="805" width="0.0150%" height="15" fill="rgb(254,186,29)" fg:x="12863" fg:w="2"/><text x="96.8191%" y="815.50"></text></g><g><title>asm_sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="96.5616%" y="1077" width="0.0300%" height="15" fill="rgb(238,6,4)" fg:x="12862" fg:w="4"/><text x="96.8116%" y="1087.50"></text></g><g><title>sysvec_hyperv_callback (4 samples, 0.03%)</title><rect x="96.5616%" y="1061" width="0.0300%" height="15" fill="rgb(221,151,16)" fg:x="12862" fg:w="4"/><text x="96.8116%" y="1071.50"></text></g><g><title>irq_exit_rcu (4 samples, 0.03%)</title><rect x="96.5616%" y="1045" width="0.0300%" height="15" fill="rgb(251,143,52)" fg:x="12862" fg:w="4"/><text x="96.8116%" y="1055.50"></text></g><g><title>__softirqentry_text_start (4 samples, 0.03%)</title><rect x="96.5616%" y="1029" width="0.0300%" height="15" fill="rgb(206,90,15)" fg:x="12862" fg:w="4"/><text x="96.8116%" y="1039.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="96.5691%" y="1013" width="0.0225%" height="15" fill="rgb(218,35,8)" fg:x="12863" fg:w="3"/><text x="96.8191%" y="1023.50"></text></g><g><title>__napi_poll (3 samples, 0.02%)</title><rect x="96.5691%" y="997" width="0.0225%" height="15" fill="rgb(239,215,6)" fg:x="12863" fg:w="3"/><text x="96.8191%" y="1007.50"></text></g><g><title>netvsc_poll (3 samples, 0.02%)</title><rect x="96.5691%" y="981" width="0.0225%" height="15" fill="rgb(245,116,39)" fg:x="12863" fg:w="3"/><text x="96.8191%" y="991.50"></text></g><g><title>napi_complete_done (3 samples, 0.02%)</title><rect x="96.5691%" y="965" width="0.0225%" height="15" fill="rgb(242,65,28)" fg:x="12863" fg:w="3"/><text x="96.8191%" y="975.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.02%)</title><rect x="96.5691%" y="949" width="0.0225%" height="15" fill="rgb(252,132,53)" fg:x="12863" fg:w="3"/><text x="96.8191%" y="959.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.02%)</title><rect x="96.5691%" y="933" width="0.0225%" height="15" fill="rgb(224,159,50)" fg:x="12863" fg:w="3"/><text x="96.8191%" y="943.50"></text></g><g><title>ip_list_rcv (3 samples, 0.02%)</title><rect x="96.5691%" y="917" width="0.0225%" height="15" fill="rgb(224,93,4)" fg:x="12863" fg:w="3"/><text x="96.8191%" y="927.50"></text></g><g><title>ip_sublist_rcv (3 samples, 0.02%)</title><rect x="96.5691%" y="901" width="0.0225%" height="15" fill="rgb(208,81,34)" fg:x="12863" fg:w="3"/><text x="96.8191%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (5 samples, 0.04%)</title><rect x="97.3348%" y="1013" width="0.0375%" height="15" fill="rgb(233,92,54)" fg:x="12965" fg:w="5"/><text x="97.5848%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="97.4024%" y="949" width="0.0150%" height="15" fill="rgb(237,21,14)" fg:x="12974" fg:w="2"/><text x="97.6524%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="97.4024%" y="933" width="0.0150%" height="15" fill="rgb(249,128,51)" fg:x="12974" fg:w="2"/><text x="97.6524%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.02%)</title><rect x="97.4024%" y="917" width="0.0150%" height="15" fill="rgb(223,129,24)" fg:x="12974" fg:w="2"/><text x="97.6524%" y="927.50"></text></g><g><title>rutin::connection::Connection::write_all::_{{closure}} (146 samples, 1.10%)</title><rect x="96.5916%" y="1077" width="1.0961%" height="15" fill="rgb(231,168,25)" fg:x="12866" fg:w="146"/><text x="96.8416%" y="1087.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (77 samples, 0.58%)</title><rect x="97.1096%" y="1061" width="0.5781%" height="15" fill="rgb(224,39,20)" fg:x="12935" fg:w="77"/><text x="97.3596%" y="1071.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (62 samples, 0.47%)</title><rect x="97.2222%" y="1045" width="0.4655%" height="15" fill="rgb(225,152,53)" fg:x="12950" fg:w="62"/><text x="97.4722%" y="1055.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (61 samples, 0.46%)</title><rect x="97.2297%" y="1029" width="0.4580%" height="15" fill="rgb(252,17,24)" fg:x="12951" fg:w="61"/><text x="97.4797%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (41 samples, 0.31%)</title><rect x="97.3799%" y="1013" width="0.3078%" height="15" fill="rgb(250,114,30)" fg:x="12971" fg:w="41"/><text x="97.6299%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (41 samples, 0.31%)</title><rect x="97.3799%" y="997" width="0.3078%" height="15" fill="rgb(229,5,4)" fg:x="12971" fg:w="41"/><text x="97.6299%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41 samples, 0.31%)</title><rect x="97.3799%" y="981" width="0.3078%" height="15" fill="rgb(225,176,49)" fg:x="12971" fg:w="41"/><text x="97.6299%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (41 samples, 0.31%)</title><rect x="97.3799%" y="965" width="0.3078%" height="15" fill="rgb(224,221,49)" fg:x="12971" fg:w="41"/><text x="97.6299%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.27%)</title><rect x="97.4174%" y="949" width="0.2703%" height="15" fill="rgb(253,169,27)" fg:x="12976" fg:w="36"/><text x="97.6674%" y="959.50"></text></g><g><title>[libc.so.6] (35 samples, 0.26%)</title><rect x="97.4249%" y="933" width="0.2628%" height="15" fill="rgb(211,206,16)" fg:x="12977" fg:w="35"/><text x="97.6749%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (16 samples, 0.12%)</title><rect x="98.2658%" y="1013" width="0.1201%" height="15" fill="rgb(244,87,35)" fg:x="13089" fg:w="16"/><text x="98.5158%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="98.4009%" y="949" width="0.0225%" height="15" fill="rgb(246,28,10)" fg:x="13107" fg:w="3"/><text x="98.6509%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="98.4009%" y="933" width="0.0225%" height="15" fill="rgb(229,12,44)" fg:x="13107" fg:w="3"/><text x="98.6509%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.02%)</title><rect x="98.4009%" y="917" width="0.0225%" height="15" fill="rgb(210,145,37)" fg:x="13107" fg:w="3"/><text x="98.6509%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="98.4084%" y="901" width="0.0150%" height="15" fill="rgb(227,112,52)" fg:x="13108" fg:w="2"/><text x="98.6584%" y="911.50"></text></g><g><title>rutin::connection::Connection::write_u8::_{{closure}} (125 samples, 0.94%)</title><rect x="97.6877%" y="1077" width="0.9384%" height="15" fill="rgb(238,155,34)" fg:x="13012" fg:w="125"/><text x="97.9377%" y="1087.50"></text></g><g><title>&lt;tokio::io::util::write_int::WriteU8&lt;W&gt; as core::future::future::Future&gt;::poll (77 samples, 0.58%)</title><rect x="98.0480%" y="1061" width="0.5781%" height="15" fill="rgb(239,226,36)" fg:x="13060" fg:w="77"/><text x="98.2980%" y="1071.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (65 samples, 0.49%)</title><rect x="98.1381%" y="1045" width="0.4880%" height="15" fill="rgb(230,16,23)" fg:x="13072" fg:w="65"/><text x="98.3881%" y="1055.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (64 samples, 0.48%)</title><rect x="98.1456%" y="1029" width="0.4805%" height="15" fill="rgb(236,171,36)" fg:x="13073" fg:w="64"/><text x="98.3956%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (31 samples, 0.23%)</title><rect x="98.3934%" y="1013" width="0.2327%" height="15" fill="rgb(221,22,14)" fg:x="13106" fg:w="31"/><text x="98.6434%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.23%)</title><rect x="98.3934%" y="997" width="0.2327%" height="15" fill="rgb(242,43,11)" fg:x="13106" fg:w="31"/><text x="98.6434%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.23%)</title><rect x="98.3934%" y="981" width="0.2327%" height="15" fill="rgb(232,69,23)" fg:x="13106" fg:w="31"/><text x="98.6434%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.23%)</title><rect x="98.3934%" y="965" width="0.2327%" height="15" fill="rgb(216,180,54)" fg:x="13106" fg:w="31"/><text x="98.6434%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.20%)</title><rect x="98.4234%" y="949" width="0.2027%" height="15" fill="rgb(216,5,24)" fg:x="13110" fg:w="27"/><text x="98.6734%" y="959.50"></text></g><g><title>[libc.so.6] (26 samples, 0.20%)</title><rect x="98.4309%" y="933" width="0.1952%" height="15" fill="rgb(225,89,9)" fg:x="13111" fg:w="26"/><text x="98.6809%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (395 samples, 2.97%)</title><rect x="95.6757%" y="1109" width="2.9655%" height="15" fill="rgb(243,75,33)" fg:x="12744" fg:w="395"/><text x="95.9257%" y="1119.50">&lt;co..</text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}}::_{{closure}}::_write_frame::_{{closure}} (395 samples, 2.97%)</title><rect x="95.6757%" y="1093" width="2.9655%" height="15" fill="rgb(247,141,45)" fg:x="12744" fg:w="395"/><text x="95.9257%" y="1103.50">rut..</text></g><g><title>tracing_core::callsite::DefaultCallsite::interest (2 samples, 0.02%)</title><rect x="98.6261%" y="1077" width="0.0150%" height="15" fill="rgb(232,177,36)" fg:x="13137" fg:w="2"/><text x="98.8761%" y="1087.50"></text></g><g><title>inet_sendmsg (2 samples, 0.02%)</title><rect x="98.6862%" y="805" width="0.0150%" height="15" fill="rgb(219,125,36)" fg:x="13145" fg:w="2"/><text x="98.9362%" y="815.50"></text></g><g><title>sockfd_lookup_light (6 samples, 0.05%)</title><rect x="98.7012%" y="805" width="0.0450%" height="15" fill="rgb(227,94,9)" fg:x="13147" fg:w="6"/><text x="98.9512%" y="815.50"></text></g><g><title>__fget_light (4 samples, 0.03%)</title><rect x="98.7162%" y="789" width="0.0300%" height="15" fill="rgb(240,34,52)" fg:x="13149" fg:w="4"/><text x="98.9662%" y="799.50"></text></g><g><title>__fget_files (3 samples, 0.02%)</title><rect x="98.7237%" y="773" width="0.0225%" height="15" fill="rgb(216,45,12)" fg:x="13150" fg:w="3"/><text x="98.9737%" y="783.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="98.8589%" y="677" width="0.0150%" height="15" fill="rgb(246,21,19)" fg:x="13168" fg:w="2"/><text x="99.1089%" y="687.50"></text></g><g><title>netdev_core_pick_tx (5 samples, 0.04%)</title><rect x="98.8739%" y="677" width="0.0375%" height="15" fill="rgb(213,98,42)" fg:x="13170" fg:w="5"/><text x="99.1239%" y="687.50"></text></g><g><title>netvsc_select_queue (5 samples, 0.04%)</title><rect x="98.8739%" y="661" width="0.0375%" height="15" fill="rgb(250,136,47)" fg:x="13170" fg:w="5"/><text x="99.1239%" y="671.50"></text></g><g><title>__skb_flow_dissect (5 samples, 0.04%)</title><rect x="98.8739%" y="645" width="0.0375%" height="15" fill="rgb(251,124,27)" fg:x="13170" fg:w="5"/><text x="99.1239%" y="655.50"></text></g><g><title>memcpy_erms (2 samples, 0.02%)</title><rect x="98.9715%" y="613" width="0.0150%" height="15" fill="rgb(229,180,14)" fg:x="13183" fg:w="2"/><text x="99.2215%" y="623.50"></text></g><g><title>dev_hard_start_xmit (15 samples, 0.11%)</title><rect x="98.9189%" y="661" width="0.1126%" height="15" fill="rgb(245,216,25)" fg:x="13176" fg:w="15"/><text x="99.1689%" y="671.50"></text></g><g><title>netvsc_xmit (15 samples, 0.11%)</title><rect x="98.9189%" y="645" width="0.1126%" height="15" fill="rgb(251,43,5)" fg:x="13176" fg:w="15"/><text x="99.1689%" y="655.50"></text></g><g><title>netvsc_send (10 samples, 0.08%)</title><rect x="98.9565%" y="629" width="0.0751%" height="15" fill="rgb(250,128,24)" fg:x="13181" fg:w="10"/><text x="99.2065%" y="639.50"></text></g><g><title>netvsc_send_pkt (6 samples, 0.05%)</title><rect x="98.9865%" y="613" width="0.0450%" height="15" fill="rgb(217,117,27)" fg:x="13185" fg:w="6"/><text x="99.2365%" y="623.50"></text></g><g><title>vmbus_sendpacket (2 samples, 0.02%)</title><rect x="99.0165%" y="597" width="0.0150%" height="15" fill="rgb(245,147,4)" fg:x="13189" fg:w="2"/><text x="99.2665%" y="607.50"></text></g><g><title>hv_ringbuffer_write (2 samples, 0.02%)</title><rect x="99.0165%" y="581" width="0.0150%" height="15" fill="rgb(242,201,35)" fg:x="13189" fg:w="2"/><text x="99.2665%" y="591.50"></text></g><g><title>__dev_queue_xmit (27 samples, 0.20%)</title><rect x="98.8514%" y="693" width="0.2027%" height="15" fill="rgb(218,181,1)" fg:x="13167" fg:w="27"/><text x="99.1014%" y="703.50"></text></g><g><title>sch_direct_xmit (19 samples, 0.14%)</title><rect x="98.9114%" y="677" width="0.1426%" height="15" fill="rgb(222,6,29)" fg:x="13175" fg:w="19"/><text x="99.1614%" y="687.50"></text></g><g><title>validate_xmit_skb_list (3 samples, 0.02%)</title><rect x="99.0315%" y="661" width="0.0225%" height="15" fill="rgb(208,186,3)" fg:x="13191" fg:w="3"/><text x="99.2815%" y="671.50"></text></g><g><title>validate_xmit_skb.constprop.0 (2 samples, 0.02%)</title><rect x="99.0390%" y="645" width="0.0150%" height="15" fill="rgb(216,36,26)" fg:x="13192" fg:w="2"/><text x="99.2890%" y="655.50"></text></g><g><title>ip_finish_output2 (29 samples, 0.22%)</title><rect x="98.8438%" y="709" width="0.2177%" height="15" fill="rgb(248,201,23)" fg:x="13166" fg:w="29"/><text x="99.0938%" y="719.50"></text></g><g><title>__nf_conntrack_find_get.isra.0 (5 samples, 0.04%)</title><rect x="99.0916%" y="645" width="0.0375%" height="15" fill="rgb(251,170,31)" fg:x="13199" fg:w="5"/><text x="99.3416%" y="655.50"></text></g><g><title>nf_conntrack_in (9 samples, 0.07%)</title><rect x="99.0841%" y="661" width="0.0676%" height="15" fill="rgb(207,110,25)" fg:x="13198" fg:w="9"/><text x="99.3341%" y="671.50"></text></g><g><title>nf_conntrack_tcp_packet (3 samples, 0.02%)</title><rect x="99.1291%" y="645" width="0.0225%" height="15" fill="rgb(250,54,15)" fg:x="13204" fg:w="3"/><text x="99.3791%" y="655.50"></text></g><g><title>ip_local_out (17 samples, 0.13%)</title><rect x="99.0616%" y="709" width="0.1276%" height="15" fill="rgb(227,68,33)" fg:x="13195" fg:w="17"/><text x="99.3116%" y="719.50"></text></g><g><title>__ip_local_out (17 samples, 0.13%)</title><rect x="99.0616%" y="693" width="0.1276%" height="15" fill="rgb(238,34,41)" fg:x="13195" fg:w="17"/><text x="99.3116%" y="703.50"></text></g><g><title>nf_hook_slow (17 samples, 0.13%)</title><rect x="99.0616%" y="677" width="0.1276%" height="15" fill="rgb(220,11,15)" fg:x="13195" fg:w="17"/><text x="99.3116%" y="687.50"></text></g><g><title>nft_do_chain_ipv4 (4 samples, 0.03%)</title><rect x="99.1592%" y="661" width="0.0300%" height="15" fill="rgb(246,111,35)" fg:x="13208" fg:w="4"/><text x="99.4092%" y="671.50"></text></g><g><title>nft_do_chain (4 samples, 0.03%)</title><rect x="99.1592%" y="645" width="0.0300%" height="15" fill="rgb(209,88,53)" fg:x="13208" fg:w="4"/><text x="99.4092%" y="655.50"></text></g><g><title>nft_counter_eval (3 samples, 0.02%)</title><rect x="99.1667%" y="629" width="0.0225%" height="15" fill="rgb(231,185,47)" fg:x="13209" fg:w="3"/><text x="99.4167%" y="639.50"></text></g><g><title>__ip_queue_xmit (53 samples, 0.40%)</title><rect x="98.8288%" y="725" width="0.3979%" height="15" fill="rgb(233,154,1)" fg:x="13164" fg:w="53"/><text x="99.0788%" y="735.50"></text></g><g><title>ip_output (5 samples, 0.04%)</title><rect x="99.1892%" y="709" width="0.0375%" height="15" fill="rgb(225,15,46)" fg:x="13212" fg:w="5"/><text x="99.4392%" y="719.50"></text></g><g><title>nf_hook_slow (3 samples, 0.02%)</title><rect x="99.2042%" y="693" width="0.0225%" height="15" fill="rgb(211,135,41)" fg:x="13214" fg:w="3"/><text x="99.4542%" y="703.50"></text></g><g><title>nf_confirm (2 samples, 0.02%)</title><rect x="99.2117%" y="677" width="0.0150%" height="15" fill="rgb(208,54,0)" fg:x="13215" fg:w="2"/><text x="99.4617%" y="687.50"></text></g><g><title>nf_ct_deliver_cached_events (2 samples, 0.02%)</title><rect x="99.2117%" y="661" width="0.0150%" height="15" fill="rgb(244,136,14)" fg:x="13215" fg:w="2"/><text x="99.4617%" y="671.50"></text></g><g><title>__skb_clone (4 samples, 0.03%)</title><rect x="99.2267%" y="725" width="0.0300%" height="15" fill="rgb(241,56,14)" fg:x="13217" fg:w="4"/><text x="99.4767%" y="735.50"></text></g><g><title>__tcp_transmit_skb (63 samples, 0.47%)</title><rect x="98.7988%" y="741" width="0.4730%" height="15" fill="rgb(205,80,24)" fg:x="13160" fg:w="63"/><text x="99.0488%" y="751.50"></text></g><g><title>ktime_get (2 samples, 0.02%)</title><rect x="99.2718%" y="741" width="0.0150%" height="15" fill="rgb(220,57,4)" fg:x="13223" fg:w="2"/><text x="99.5218%" y="751.50"></text></g><g><title>__tcp_push_pending_frames (75 samples, 0.56%)</title><rect x="98.7538%" y="773" width="0.5631%" height="15" fill="rgb(226,193,50)" fg:x="13154" fg:w="75"/><text x="99.0038%" y="783.50"></text></g><g><title>tcp_write_xmit (75 samples, 0.56%)</title><rect x="98.7538%" y="757" width="0.5631%" height="15" fill="rgb(231,168,22)" fg:x="13154" fg:w="75"/><text x="99.0038%" y="767.50"></text></g><g><title>tcp_small_queue_check.isra.0 (2 samples, 0.02%)</title><rect x="99.3018%" y="741" width="0.0150%" height="15" fill="rgb(254,215,14)" fg:x="13227" fg:w="2"/><text x="99.5518%" y="751.50"></text></g><g><title>__kmalloc_track_caller (2 samples, 0.02%)</title><rect x="99.3318%" y="741" width="0.0150%" height="15" fill="rgb(211,115,16)" fg:x="13231" fg:w="2"/><text x="99.5818%" y="751.50"></text></g><g><title>__alloc_skb (4 samples, 0.03%)</title><rect x="99.3243%" y="757" width="0.0300%" height="15" fill="rgb(236,210,16)" fg:x="13230" fg:w="4"/><text x="99.5743%" y="767.50"></text></g><g><title>sk_stream_alloc_skb (5 samples, 0.04%)</title><rect x="99.3243%" y="773" width="0.0375%" height="15" fill="rgb(221,94,12)" fg:x="13230" fg:w="5"/><text x="99.5743%" y="783.50"></text></g><g><title>skb_do_copy_data_nocache (4 samples, 0.03%)</title><rect x="99.3619%" y="773" width="0.0300%" height="15" fill="rgb(235,218,49)" fg:x="13235" fg:w="4"/><text x="99.6119%" y="783.50"></text></g><g><title>_copy_from_iter (4 samples, 0.03%)</title><rect x="99.3619%" y="757" width="0.0300%" height="15" fill="rgb(217,114,14)" fg:x="13235" fg:w="4"/><text x="99.6119%" y="767.50"></text></g><g><title>copy_user_enhanced_fast_string (4 samples, 0.03%)</title><rect x="99.3619%" y="741" width="0.0300%" height="15" fill="rgb(216,145,22)" fg:x="13235" fg:w="4"/><text x="99.6119%" y="751.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (102 samples, 0.77%)</title><rect x="98.6411%" y="981" width="0.7658%" height="15" fill="rgb(217,112,39)" fg:x="13139" fg:w="102"/><text x="98.8911%" y="991.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (102 samples, 0.77%)</title><rect x="98.6411%" y="965" width="0.7658%" height="15" fill="rgb(225,85,32)" fg:x="13139" fg:w="102"/><text x="98.8911%" y="975.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (102 samples, 0.77%)</title><rect x="98.6411%" y="949" width="0.7658%" height="15" fill="rgb(245,209,47)" fg:x="13139" fg:w="102"/><text x="98.8911%" y="959.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (102 samples, 0.77%)</title><rect x="98.6411%" y="933" width="0.7658%" height="15" fill="rgb(218,220,15)" fg:x="13139" fg:w="102"/><text x="98.8911%" y="943.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (102 samples, 0.77%)</title><rect x="98.6411%" y="917" width="0.7658%" height="15" fill="rgb(222,202,31)" fg:x="13139" fg:w="102"/><text x="98.8911%" y="927.50"></text></g><g><title>std::sys_common::net::TcpStream::write (101 samples, 0.76%)</title><rect x="98.6486%" y="901" width="0.7583%" height="15" fill="rgb(243,203,4)" fg:x="13140" fg:w="101"/><text x="98.8986%" y="911.50"></text></g><g><title>__send (101 samples, 0.76%)</title><rect x="98.6486%" y="885" width="0.7583%" height="15" fill="rgb(237,92,17)" fg:x="13140" fg:w="101"/><text x="98.8986%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (99 samples, 0.74%)</title><rect x="98.6637%" y="869" width="0.7432%" height="15" fill="rgb(231,119,7)" fg:x="13142" fg:w="99"/><text x="98.9137%" y="879.50"></text></g><g><title>do_syscall_64 (99 samples, 0.74%)</title><rect x="98.6637%" y="853" width="0.7432%" height="15" fill="rgb(237,82,41)" fg:x="13142" fg:w="99"/><text x="98.9137%" y="863.50"></text></g><g><title>__x64_sys_sendto (98 samples, 0.74%)</title><rect x="98.6712%" y="837" width="0.7357%" height="15" fill="rgb(226,81,48)" fg:x="13143" fg:w="98"/><text x="98.9212%" y="847.50"></text></g><g><title>__sys_sendto (98 samples, 0.74%)</title><rect x="98.6712%" y="821" width="0.7357%" height="15" fill="rgb(234,70,51)" fg:x="13143" fg:w="98"/><text x="98.9212%" y="831.50"></text></g><g><title>tcp_sendmsg (88 samples, 0.66%)</title><rect x="98.7462%" y="805" width="0.6607%" height="15" fill="rgb(251,86,4)" fg:x="13153" fg:w="88"/><text x="98.9962%" y="815.50"></text></g><g><title>tcp_sendmsg_locked (88 samples, 0.66%)</title><rect x="98.7462%" y="789" width="0.6607%" height="15" fill="rgb(244,144,28)" fg:x="13153" fg:w="88"/><text x="98.9962%" y="799.50"></text></g><g><title>rutin::connection::Connection::flush::_{{closure}} (103 samples, 0.77%)</title><rect x="98.6411%" y="1109" width="0.7733%" height="15" fill="rgb(232,161,39)" fg:x="13139" fg:w="103"/><text x="98.8911%" y="1119.50"></text></g><g><title>&lt;tokio::io::util::flush::Flush&lt;A&gt; as core::future::future::Future&gt;::poll (103 samples, 0.77%)</title><rect x="98.6411%" y="1093" width="0.7733%" height="15" fill="rgb(247,34,51)" fg:x="13139" fg:w="103"/><text x="98.8911%" y="1103.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_flush (103 samples, 0.77%)</title><rect x="98.6411%" y="1077" width="0.7733%" height="15" fill="rgb(225,132,2)" fg:x="13139" fg:w="103"/><text x="98.8911%" y="1087.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (103 samples, 0.77%)</title><rect x="98.6411%" y="1061" width="0.7733%" height="15" fill="rgb(209,159,44)" fg:x="13139" fg:w="103"/><text x="98.8911%" y="1071.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (103 samples, 0.77%)</title><rect x="98.6411%" y="1045" width="0.7733%" height="15" fill="rgb(251,214,1)" fg:x="13139" fg:w="103"/><text x="98.8911%" y="1055.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (103 samples, 0.77%)</title><rect x="98.6411%" y="1029" width="0.7733%" height="15" fill="rgb(247,84,47)" fg:x="13139" fg:w="103"/><text x="98.8911%" y="1039.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (103 samples, 0.77%)</title><rect x="98.6411%" y="1013" width="0.7733%" height="15" fill="rgb(240,111,43)" fg:x="13139" fg:w="103"/><text x="98.8911%" y="1023.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (103 samples, 0.77%)</title><rect x="98.6411%" y="997" width="0.7733%" height="15" fill="rgb(215,214,35)" fg:x="13139" fg:w="103"/><text x="98.8911%" y="1007.50"></text></g><g><title>all (13,320 samples, 100%)</title><rect x="0.0000%" y="1557" width="100.0000%" height="15" fill="rgb(248,207,23)" fg:x="0" fg:w="13320"/><text x="0.2500%" y="1567.50"></text></g><g><title>tokio-runtime-w (13,316 samples, 99.97%)</title><rect x="0.0300%" y="1541" width="99.9700%" height="15" fill="rgb(214,186,4)" fg:x="4" fg:w="13316"/><text x="0.2800%" y="1551.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1525" width="73.0255%" height="15" fill="rgb(220,133,22)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1535.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1509" width="73.0255%" height="15" fill="rgb(239,134,19)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1519.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1493" width="73.0255%" height="15" fill="rgb(250,140,9)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1503.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1477" width="73.0255%" height="15" fill="rgb(225,59,14)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1487.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1461" width="73.0255%" height="15" fill="rgb(214,152,51)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1471.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1445" width="73.0255%" height="15" fill="rgb(251,227,43)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1455.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1429" width="73.0255%" height="15" fill="rgb(241,96,17)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1439.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1413" width="73.0255%" height="15" fill="rgb(234,198,43)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1423.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1397" width="73.0255%" height="15" fill="rgb(220,108,29)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1407.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1381" width="73.0255%" height="15" fill="rgb(226,163,33)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1391.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (9,727 samples, 73.03%)</title><rect x="26.9745%" y="1365" width="73.0255%" height="15" fill="rgb(205,194,45)" fg:x="3593" fg:w="9727"/><text x="27.2245%" y="1375.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>rutin::server::Listener::run::_{{closure}}::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1349" width="72.7853%" height="15" fill="rgb(206,143,44)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1359.50">rutin::server::Listener::run::_{{closure}}::_{{closure}}</text></g><g><title>rutin::server::Handler::run::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1333" width="72.7853%" height="15" fill="rgb(236,136,36)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1343.50">rutin::server::Handler::run::_{{closure}}</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1317" width="72.7853%" height="15" fill="rgb(249,172,42)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1327.50">rutin::server::Handler::run::_{{closure}}::_{{closure}}</text></g><g><title>rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1301" width="72.7853%" height="15" fill="rgb(216,139,23)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1311.50">rutin::server::Handler::run::_{{closure}}::_{{closure}}::_{{closure}}</text></g><g><title>rutin::cmd::dispatch::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1285" width="72.7853%" height="15" fill="rgb(207,166,20)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1295.50">rutin::cmd::dispatch::_{{closure}}</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1269" width="72.7853%" height="15" fill="rgb(210,209,22)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1279.50">rutin::cmd::dispatch::_{{closure}}::_{{closure}}</text></g><g><title>rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1253" width="72.7853%" height="15" fill="rgb(232,118,20)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1263.50">rutin::cmd::dispatch::_{{closure}}::_{{closure}}::_{{closure}}</text></g><g><title>rutin::cmd::_dispatch::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1237" width="72.7853%" height="15" fill="rgb(238,113,42)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1247.50">rutin::cmd::_dispatch::_{{closure}}</text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1221" width="72.7853%" height="15" fill="rgb(231,42,5)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1231.50">rutin::cmd::_dispatch::_{{closure}}::_{{closure}}</text></g><g><title>rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1205" width="72.7853%" height="15" fill="rgb(243,166,24)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1215.50">rutin::cmd::_dispatch::_{{closure}}::_{{closure}}::_{{closure}}</text></g><g><title>rutin::cmd::CmdExecutor::apply::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1189" width="72.7853%" height="15" fill="rgb(237,226,12)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1199.50">rutin::cmd::CmdExecutor::apply::_{{closure}}</text></g><g><title>rutin::cmd::CmdExecutor::execute::_{{closure}} (9,695 samples, 72.79%)</title><rect x="27.2147%" y="1173" width="72.7853%" height="15" fill="rgb(229,133,24)" fg:x="3625" fg:w="9695"/><text x="27.4647%" y="1183.50">rutin::cmd::CmdExecutor::execute::_{{closure}}</text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}} (576 samples, 4.32%)</title><rect x="95.6757%" y="1157" width="4.3243%" height="15" fill="rgb(238,33,43)" fg:x="12744" fg:w="576"/><text x="95.9257%" y="1167.50">rutin..</text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}} (576 samples, 4.32%)</title><rect x="95.6757%" y="1141" width="4.3243%" height="15" fill="rgb(227,59,38)" fg:x="12744" fg:w="576"/><text x="95.9257%" y="1151.50">rutin..</text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}}::_{{closure}} (576 samples, 4.32%)</title><rect x="95.6757%" y="1125" width="4.3243%" height="15" fill="rgb(230,97,0)" fg:x="12744" fg:w="576"/><text x="95.9257%" y="1135.50">rutin..</text></g><g><title>rutin::connection::Connection::write_frame::_{{closure}}::_{{closure}}::_{{closure}}::_write_frame (78 samples, 0.59%)</title><rect x="99.4144%" y="1109" width="0.5856%" height="15" fill="rgb(250,173,50)" fg:x="13242" fg:w="78"/><text x="99.6644%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (78 samples, 0.59%)</title><rect x="99.4144%" y="1093" width="0.5856%" height="15" fill="rgb(240,15,50)" fg:x="13242" fg:w="78"/><text x="99.6644%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (78 samples, 0.59%)</title><rect x="99.4144%" y="1077" width="0.5856%" height="15" fill="rgb(221,93,22)" fg:x="13242" fg:w="78"/><text x="99.6644%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (78 samples, 0.59%)</title><rect x="99.4144%" y="1061" width="0.5856%" height="15" fill="rgb(245,180,53)" fg:x="13242" fg:w="78"/><text x="99.6644%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.59%)</title><rect x="99.4144%" y="1045" width="0.5856%" height="15" fill="rgb(231,88,51)" fg:x="13242" fg:w="78"/><text x="99.6644%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.59%)</title><rect x="99.4144%" y="1029" width="0.5856%" height="15" fill="rgb(240,58,21)" fg:x="13242" fg:w="78"/><text x="99.6644%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (78 samples, 0.59%)</title><rect x="99.4144%" y="1013" width="0.5856%" height="15" fill="rgb(237,21,10)" fg:x="13242" fg:w="78"/><text x="99.6644%" y="1023.50"></text></g><g><title>malloc (78 samples, 0.59%)</title><rect x="99.4144%" y="997" width="0.5856%" height="15" fill="rgb(218,43,11)" fg:x="13242" fg:w="78"/><text x="99.6644%" y="1007.50"></text></g><g><title>asm_sysvec_hyperv_callback (5 samples, 0.04%)</title><rect x="99.9625%" y="981" width="0.0375%" height="15" fill="rgb(218,221,29)" fg:x="13315" fg:w="5"/><text x="100.2125%" y="991.50"></text></g><g><title>sysvec_hyperv_callback (5 samples, 0.04%)</title><rect x="99.9625%" y="965" width="0.0375%" height="15" fill="rgb(214,118,42)" fg:x="13315" fg:w="5"/><text x="100.2125%" y="975.50"></text></g><g><title>irq_exit_rcu (5 samples, 0.04%)</title><rect x="99.9625%" y="949" width="0.0375%" height="15" fill="rgb(251,200,26)" fg:x="13315" fg:w="5"/><text x="100.2125%" y="959.50"></text></g><g><title>__softirqentry_text_start (5 samples, 0.04%)</title><rect x="99.9625%" y="933" width="0.0375%" height="15" fill="rgb(237,101,39)" fg:x="13315" fg:w="5"/><text x="100.2125%" y="943.50"></text></g></svg></svg>